<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on A Possible Verse</title>
		<link>https://shenxiaobing.com/posts/</link>
		<description>Recent content in Posts on A Possible Verse</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>zh-CN</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Sat, 08 Feb 2020 18:15:18 +0800</lastBuildDate>
		<atom:link href="https://shenxiaobing.com/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>极简股票交易入门——读《韭菜的自我修养》</title>
			<link>https://shenxiaobing.com/posts/2020/self-improvement-as-jiu-cai/</link>
			<pubDate>Sat, 08 Feb 2020 18:15:18 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2020/self-improvement-as-jiu-cai/</guid>
			<description>&lt;p&gt;对于股票交易来说，最核心的问题就是三个：买什么，什么时候买，什么时候卖。以下是书中给股市入门玩家的回答。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>对于股票交易来说，最核心的问题就是三个：买什么，什么时候买，什么时候卖。以下是书中给股市入门玩家的回答。</p>
<h2 id="股票交易原则">股票交易原则</h2>
<p>关于买什么股票，书中没有通过各种技术指标或基本面去选股。书中给出的极简选股建议有两条：<strong>选择交易量最大的，选择牛市涨的最好同时熊市跌得最少的</strong>。这里放弃对单支股票的考察，直接依赖市场来进行选择。就好像买东西一样，如果你不了解相关参数，那么直接选择销量最高的，大众的眼光不会差。这个市场上存在坏的资产，不管是上市做假账骗钱、内幕交易或者庄家操纵股价，要尽量避开。而以上两个极简选股原则，辅以适当的考察周期，可以有效避开那些垃圾股票。对于从未买过股票的玩家，作者的建议是先看一年，别一上来就买买买。</p>
<p>俗话说得好，熊市不买股，牛市白辛苦。最佳的入场时间，就是熊市底部，情绪低谷，这时股票普遍低估。即使不是牛市，在优选标的若干次暴跌后，也是较好的买入时机。相应地，在牛市或者连续上涨后加仓就需要更谨慎一些。我们当然不知道熊市的底部在哪里，所以我们的买入也是分批买入，在继续下跌时可以通过补仓降低成本。不要妄想在最低点买入（或最高点卖出），这是幼稚的想法。如果已经被套了，那就利用熊市加仓，降低成本。</p>
<p>买入后不要进行高频交易，管住自己的手，不管你多么地想止损或落袋为安。高频交易不适合入门玩家，因为入门玩家的专业水平和经验所限，胜率偏低。同时高频交易会产生较多手续费用。一个卖出信号就是观察绝大多数交易者的情绪，就是大妈开始谈炒股的时候就该撤退了。</p>
<p>另外，也是最重要的：不要借钱炒股。只用闲钱（3年内用不上），不要用养老钱、买房钱、生活费等近期会用到的钱。股市波动比较大，如果钱近期要用，一方面股价波动会造成较大的心理压力，另外在钱要用到时如果股价刚好下跌，则不得不挥泪亏损出局，错过后续反弹的机会。</p>
<p>以上就是对于任何一个新手玩家的极简股票交易原则。</p>
<blockquote>
<p>闲钱投入，优选标的，低价买入，长期持有。</p>
</blockquote>
<h2 id="进阶建议">进阶建议</h2>
<p>有野心的玩家，当然不满足于这种傻瓜式的投资方式。对于想进阶的玩家，作者有一些基本的建议。</p>
<ol>
<li>学习。</li>
<li>交易过后，无论输赢，要进行总结归纳，修正自己的观念。</li>
<li>自己少冒险，要观察别人冒险，然后总结经验。</li>
<li>警惕做错事后尝试进行合理化。别对自己撒谎，及时反思和纠正。</li>
<li>避免FOMO (Fear Of Missing Out)，降低交易频率。</li>
<li>遵守交易规则，增加独处的时间和反思。特立独行且正确，才能产生巨大的交易价值。</li>
<li>不要all in。</li>
<li>听大多数人的话，参考少数人的意见，自己做决定。</li>
<li>认真生活。拿着纸笔罗列自己生活中觉得重要的部分，然后去参与、维持和享受它们。</li>
</ol>
<h2 id="如何降低风险">如何降低风险</h2>
<ol>
<li>调整止损线，降低风险承担。</li>
<li>降低每次交易金额在总资金的占比。</li>
<li>提高场外赚钱能力。</li>
</ol>
<p>下面来分别解释下这三个点。</p>
<p>每次交易都有一个客观的「收益风险比」概念，即可能的收益与可能的亏损之间的比值，比值越大也就越值得去操作。比如买入某支股票，可能涨10元，也可能亏5元，那么收益就是每股10元，亏损就是每股5元（不考虑手续费的情况下），收益风险比就是2。通过设置止损，我们可以人为地设置亏损的上限，从而降低风险。止损的设置要参考股票的日常波动幅度。</p>
<p>股票总在波动中，没人能保证买在最低点。因此留存部分资金及时补仓降低成本，是一个降低风险的方式。</p>
<p>至于第三点，我们知道两个人通过掷骰子来赌输钱，从概率上来讲，一定是资金量大的最终会赢。股票交易也有一定的赌博性质，因此同理资金的充裕度也会影响这个游戏的最终胜负。有了长期稳定的低成本现金流，我们就可以抓住每次机会。</p>
<h2 id="股市是零和游戏吗">股市是零和游戏吗</h2>
<p>如果你是高频交易者，这就是零和游戏。但股市本身并不是零和游戏。作者并没有展开来讲。下面是我通过网络资料进行的总结。</p>
<p>股票本质上是资产的凭证，而资产从长期来看是会随着通货膨胀增值的，而且企业如果经营得当，资产的涨幅会显著高于通货膨胀，类似一线城市的房产。所以，不管是买入或者么卖出，只要股市永远在涨，这就不是一个零和游戏。</p>
<p>这本《韭菜的自我修养》封面设计得跟韭菜一样绿，薄得可怜。书中还有关于比特币、区块链创投的一些篇幅，以及作者为「韭菜论」录音事件解释的段落。但那些不是本文的主旨，就此略过。</p>]]></content>
		</item>
		
		<item>
			<title>零基础自学编程有多难</title>
			<link>https://shenxiaobing.com/posts/2019/how-hard-is-self-taught-programming/</link>
			<pubDate>Sun, 13 Oct 2019 04:16:59 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/how-hard-is-self-taught-programming/</guid>
			<description>&lt;p&gt;一个零基础的文科生学编程有多难？为什么单把文科生拎出来，这里不是歧视文科生，只是想强调过往没有任何的编程和计算机基础这一点，而大多数理工科的毕业生多少都有一点基础。&lt;/p&gt;
&lt;p&gt;我到现在都不能说自己是个程序员，但我自认为有足够曲折的编程自学经历来现身说法。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>一个零基础的文科生学编程有多难？为什么单把文科生拎出来，这里不是歧视文科生，只是想强调过往没有任何的编程和计算机基础这一点，而大多数理工科的毕业生多少都有一点基础。</p>
<p>我到现在都不能说自己是个程序员，但我自认为有足够曲折的编程自学经历来现身说法。</p>
<h2 id="第一难学什么语言">第一难：学什么语言</h2>
<p>6年前的春天，我买了第一本编程书，一本C语言的书，得有4厘米厚，京东畅销书。这可能是任何一个自学编程的人能做出的最差的选择。然而，我不知道是听信了谁的鬼话，也不记得为何没有进行网上搜索，也许那时还没养成搜索的习惯。</p>
<p>C语言公认的难学、难用，用途比较单一，大概只有毕业没多久理工科生的才会带着学校课程表的惯性给新手推荐先学C语言。</p>
<p>正确答案是：Java、Python、JavaScript，随便选一个吧。</p>
<h2 id="第二难选择什么教程">第二难：选择什么教程</h2>
<p>上面说我学编程的第一步是买书。这是我犯的第二个错误。书籍中的内容更新滞后，远远比不上现代的编程语言。书籍的内容偏重理论，而编程是一个注重实操的手艺。而且不是每个人都适合跟着书学习，视频的互动更强一些。书不会照顾一个新手，而视频课程的设计者会考虑新手的学习曲线，会把教学和练习相结合，会根据编程学习的特点强调实践。另外，编程书一般都非常厚，里面不是文字就是代码，真的让人望而却步，尤其是对于战战兢兢的新手来说。</p>
<p>正确的选择是：靠谱的视频课程，推荐Udemy这种大平台的热门课程。不要选大学课程，那也是偏理论的。</p>
<h2 id="第三难如何面对报错">第三难：如何面对报错</h2>
<p>我已记不清有多少次了，百度我的报错文本根本没有结果。为什么？因为没有人出过这个报错。只有我，只有纯新手，才会因为种种奇葩的原因，发现全新的报错。而根据我的经验，这个报错的原因一般是一个低级错误。</p>
<p>前两天，Xcode就无法预览某一个View。我有什么办法？没办法，我跳过了。</p>
<p>我觉得对于无关紧要的问题或者报错，一个核心态度就是打不过就跑，认怂。不要在上面浪费无谓的时间和精气。同理，对于那些一时不能理解和掌握的概念，留给时间，留给后面的学习。</p>
<h2 id="第四难如何练习">第四难：如何练习</h2>
<p>初学编程时，我以为练习就是要去<code>codewars</code>这样的网站完成一个个小任务，一个个代码片段，对基本的编程语法做练习。</p>
<p>但这样的练习做一万遍，还是徒劳。正确的做法是以项目为导向。练习一开始的目标就是完成一个项目。项目可大可小，但项目有明确的用途。在完成项目的过程中，你会学习从整体看问题，会学习试着解决任何一个出现的小问题。</p>
<p>正确的做法：从项目学习，用项目练习。</p>
<h2 id="第五难如何坚持">第五难：如何坚持</h2>
<p>对于新手来说，很多概念都是闻所未闻的。每一个闻所未闻的概念，都是似懂非懂的。就是这种似懂非懂的状态下，持续往下学习。累积的似懂非懂越多，就越心虚，越决定自己不行。</p>
<p>同时，越深入学习，越觉得编程中有太多的细枝末节需要考虑，太多的库需要学习，太多的弱点需要强化。胡适会说，进一寸就进一寸的欢喜。但霸王别姬里的小豆子，却哭着喊“这得挨多少打啊”。不是所有人都能面对重压。</p>
<p>对自己的怀疑，加上对编程学习本身的质疑，放弃真是一个诱人的选择。</p>
<p>这里的建议是，不要对自己太苛求。累了就休息，休息好了就继续。别有完美情结。</p>
<h2 id="第六难学习编程为什么">第六难：学习编程为什么</h2>
<p>千辛万苦学会了一门编程语言，做了一两个小项目。然后呢？转行基本没门。本职工作好像也不怎么用得上。那这个新学的手艺就撂这儿啦？只要3个月不写代码，再捡起来就又得重新复习那些本就基础不牢的语法。捡起来后也还是不知道能拿这个来干什么。</p>
<p>所以，如果你想能够持续地学下去，你得知道自己想用编程做什么。仅仅是喜欢？这是一个不错的答案。不管什么答案，都一定会有一个与之匹配的结局，种瓜得瓜种豆得豆而已。</p>
<p>祝你学有所得，学有所成。</p>]]></content>
		</item>
		
		<item>
			<title>Python正则表达式CheatSheet</title>
			<link>https://shenxiaobing.com/posts/2019/python-regular-expression-cheatsheet/</link>
			<pubDate>Thu, 05 Sep 2019 10:14:44 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/python-regular-expression-cheatsheet/</guid>
			<description>&lt;p&gt;这里是正则表达式常用表示法与函数，以备查询。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>这里是正则表达式常用表示法与函数，以备查询。</p>
<h2 id="符号">符号</h2>
<h3 id="普通符号">普通符号</h3>
<table>
<thead>
<tr>
<th>表示法</th>
<th>描述</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>匹配任意字符，\n除外</td>
<td>b.b，表示以b开头以b结尾的任意字符串</td>
</tr>
<tr>
<td>\d</td>
<td>匹配0-9的数字字符</td>
<td>\d{3}，表示3个数字</td>
</tr>
<tr>
<td>\w</td>
<td>匹配任意字母数字下划线字符</td>
<td>\w+，至少一个字母数字下划线组合</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任何空格，与[\n\t\r\v\f]相同</td>
<td>\s\s+，至少2个空格</td>
</tr>
<tr>
<td>[&hellip;]</td>
<td>匹配括号内字符集的任意单一字符</td>
<td>[aeiou]，匹配aeiou这5个字符中的一个</td>
</tr>
<tr>
<td>[x-y]</td>
<td>匹配x~y之间任意字符</td>
<td>[0-9]，匹配0-9这10个数字，同\d</td>
</tr>
<tr>
<td>\N</td>
<td>匹配已保存的子组，N是子组的序号</td>
<td>\2，表示已匹配的第2个子组</td>
</tr>
<tr>
<td>\c</td>
<td>c是一个特殊字符，匹配非转义的字符</td>
<td>\, \*</td>
</tr>
<tr>
<td>literal</td>
<td>表示字面值</td>
<td>输入什么，就匹配什么</td>
</tr>
<tr>
<td>\D</td>
<td>与\d相反，匹配非数字</td>
<td></td>
</tr>
<tr>
<td>\W</td>
<td>与\w相反，匹配非字母数字下划线</td>
<td></td>
</tr>
<tr>
<td>\S</td>
<td>与\s相反，匹配非空格</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="辅助符号">辅助符号</h3>
<table>
<thead>
<tr>
<th>表示法</th>
<th>描述</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>匹配0次或多次，默认贪婪</td>
<td></td>
</tr>
<tr>
<td>+</td>
<td>匹配1次或多次，默认贪婪</td>
<td></td>
</tr>
<tr>
<td>?</td>
<td>匹配0次或1次，默认贪婪</td>
<td></td>
</tr>
<tr>
<td>{N}</td>
<td>匹配N次</td>
<td></td>
</tr>
<tr>
<td>{M, N}</td>
<td>匹配M~N次，默认贪婪</td>
<td></td>
</tr>
<tr>
<td>?</td>
<td>在上述符号后面，加上?，转为非贪婪</td>
<td></td>
</tr>
<tr>
<td>|</td>
<td>表示或，用在两个表达式之间</td>
<td></td>
</tr>
<tr>
<td>^（或者\A）</td>
<td>匹配字符串起始部分</td>
<td></td>
</tr>
<tr>
<td>$（或者\Z）</td>
<td>匹配字符串结束部分</td>
<td></td>
</tr>
<tr>
<td>[^&hellip;]</td>
<td>不匹配字符集内的字符</td>
<td></td>
</tr>
<tr>
<td>\b</td>
<td>表示在字符串边界，即开始或结尾</td>
<td>\bthe，表示以the开头字符串；\bthe\b，表示the</td>
</tr>
<tr>
<td>\B</td>
<td>与\b相反，表示不在边界</td>
<td>\Bthe，表示字符串不以the开头</td>
</tr>
</tbody>
</table>
<h3 id="扩展符号">扩展符号</h3>
<table>
<thead>
<tr>
<th>表示法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>?iLmsux</td>
<td>加入特殊标记</td>
</tr>
<tr>
<td>(?:&hellip;)</td>
<td>括号内的匹配不分组</td>
</tr>
<tr>
<td>(?=&hellip;)</td>
<td>匹配…出现在之后的位置</td>
</tr>
<tr>
<td>(?!&hellip;)</td>
<td>匹配…不出现在之后的位置</td>
</tr>
<tr>
<td>(?&lt;=&hellip;)</td>
<td>匹配…出现在之前的位置</td>
</tr>
<tr>
<td>(?&lt;!&hellip;)</td>
<td>匹配…不出现在之前的位置</td>
</tr>
<tr>
<td>(?(id/name)Y/N)</td>
<td>如果id或name对应的分组存在，则返回Y，否则返回N</td>
</tr>
<tr>
<td>(?P<!-- raw HTML omitted -->&hellip;)</td>
<td>由name标识而不是数字id标识的分组匹配</td>
</tr>
<tr>
<td>(?P=name)</td>
<td>在同一个字符串中匹配由(?P<!-- raw HTML omitted -->)分组的文本</td>
</tr>
</tbody>
</table>
<h2 id="函数">函数</h2>
<h3 id="常用函数">常用函数</h3>
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>match(pattern, string, flags=0)</td>
<td>从字符串起始位置，匹配1次，起始必须匹配</td>
</tr>
<tr>
<td>search</td>
<td>从字符串左侧开始，匹配1次，起始不必匹配</td>
</tr>
<tr>
<td>findall</td>
<td>查找所有匹配，返回列表</td>
</tr>
<tr>
<td>finditer</td>
<td>查找所有匹配，返回迭代器</td>
</tr>
<tr>
<td>split(pattern, string, max=0)</td>
<td>返回根据pattern分割后字符串列表，默认分割max次</td>
</tr>
<tr>
<td>sub(pattern, repl, string, count=0)</td>
<td>替换所有匹配pattern并返回新字符串，默认替换无数次</td>
</tr>
<tr>
<td>groups</td>
<td>返回包括所有匹配子组的元组，若无匹配，则为空元组</td>
</tr>
<tr>
<td>group(num=0)</td>
<td>返回指定序号的子组，若编号为0，则返回整个匹配</td>
</tr>
</tbody>
</table>
<h3 id="常用模块属性">常用模块属性</h3>
<table>
<thead>
<tr>
<th>模块属性</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>re.I, re.IGNORECASE</td>
<td>不区分大小写</td>
</tr>
<tr>
<td>re.L, re.LOCALE</td>
<td>根据使用的本地语言环境通过\w \W \b \B \s \S实现匹配</td>
</tr>
<tr>
<td>re.M, re.MULTILINE</td>
<td>^ $ 分别匹配目标字符串每行的起始和结尾</td>
</tr>
<tr>
<td>re.S, re.DOTALL</td>
<td>.点号可以匹配\n</td>
</tr>
<tr>
<td>re.X, re.VERBOSE</td>
<td>允许忽略字符串中换行符和注释段落，增强可读性</td>
</tr>
</tbody>
</table>
<h3 id="函数调用示例">函数调用示例</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 增加(?i)使匹配忽略大小写</span>
<span class="o">&gt;&gt;</span><span class="o">&gt;</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;</span><span class="s1">(?i)yes</span><span class="s1">&#39;</span><span class="p">,</span> <span class="sa"></span><span class="s1">&#39;</span><span class="s1">yes? Yes. YES!</span><span class="s1">&#39;</span><span class="p">)</span>  
<span class="p">[</span><span class="sa"></span><span class="s1">&#39;</span><span class="s1">yes</span><span class="s1">&#39;</span><span class="p">,</span> <span class="sa"></span><span class="s1">&#39;</span><span class="s1">Yes</span><span class="s1">&#39;</span><span class="p">,</span> <span class="sa"></span><span class="s1">&#39;</span><span class="s1">YES</span><span class="s1">&#39;</span><span class="p">]</span>

<span class="c1"># 增加(?im)表示匹配忽略大小写，^$从每行开始和结束匹配。</span>
<span class="o">&gt;&gt;</span><span class="o">&gt;</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;</span><span class="s1">(?im)(^th[</span><span class="s1">\</span><span class="s1">w ]+)</span><span class="s1">&#39;</span><span class="p">,</span> <span class="sa"></span><span class="s2">&#34;&#34;&#34;</span><span class="s2"> </span><span class="s2">
</span><span class="s2"></span><span class="s2">... This line is the first,</span><span class="s2">
</span><span class="s2"></span><span class="s2">... another line,</span><span class="s2">
</span><span class="s2"></span><span class="s2">... that line, it</span><span class="s2">&#39;</span><span class="s2">s the best.</span><span class="s2">
</span><span class="s2"></span><span class="s2">... </span><span class="s2">&#34;&#34;&#34;</span><span class="p">)</span>
<span class="p">[</span><span class="sa"></span><span class="s1">&#39;</span><span class="s1">This line is the first</span><span class="s1">&#39;</span><span class="p">,</span> <span class="sa"></span><span class="s1">&#39;</span><span class="s1">that line</span><span class="s1">&#39;</span><span class="p">]</span>

<span class="c1"># ?:使用表示不分组，?(1)表示判断分组1是否存在</span>
<span class="c1"># (?:(x)|y)，表示x或者y，但x是一个子组，整体却不是。即如果匹配到x，x是一个子组；匹配到y，y不是子组。</span>
<span class="c1"># (?(1)y|x)，表示匹配到的第一个子组如果存在，即x存在，那么下一个应该是y；若不存在，下一个则是x。</span>
<span class="o">&gt;&gt;</span><span class="o">&gt;</span> <span class="n">pattern</span> <span class="o">=</span> <span class="sa">r</span><span class="s1">&#39;</span><span class="s1">(?:(x)|y)(?(1)y|x)</span><span class="s1">&#39;</span>
<span class="o">&gt;&gt;</span><span class="o">&gt;</span> <span class="nb">bool</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="sa"></span><span class="s1">&#39;</span><span class="s1">xy</span><span class="s1">&#39;</span><span class="p">)</span><span class="p">)</span>
<span class="o">.</span><span class="o">.</span><span class="o">.</span> <span class="bp">True</span>
</code></pre></div>]]></content>
		</item>
		
		<item>
			<title>我为什么不玩魔兽世界怀旧服</title>
			<link>https://shenxiaobing.com/posts/2019/say-no-to-wow-nostalgia-server/</link>
			<pubDate>Tue, 03 Sep 2019 20:20:00 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/say-no-to-wow-nostalgia-server/</guid>
			<description>&lt;p&gt;魔兽世界怀旧服开了，据说有的服务器排队时间高达5个小时。我兴味索然，虽然我从大二就开始玩魔兽世界，玩得疯的时候每天玩十个多小时，厌倦的时候又很久不上线。不管AFK多久，出了新版本总是想回来看看。&lt;/p&gt;
&lt;p&gt;但怀旧服是个例外，我不想玩。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>魔兽世界怀旧服开了，据说有的服务器排队时间高达5个小时。我兴味索然，虽然我从大二就开始玩魔兽世界，玩得疯的时候每天玩十个多小时，厌倦的时候又很久不上线。不管AFK多久，出了新版本总是想回来看看。</p>
<p>但怀旧服是个例外，我不想玩。</p>
<p>怀旧服几乎不提供任何新的游戏体验。它只是把原有的游戏体验变得更糟或者更好。怀旧服的练级体验，装备获取体验，两点之间的移动体验都比现在更糟。我丝毫不觉得用大量时间升级很有趣，不觉得费半天劲得一件蓝装很有趣，也不觉得一步一步从这个地图跑到另一个地图很有趣。尤其是当我见识过体验过更便捷的升级、更好的装备、更快的速度，我为什么要骗自己慢下来更好呢？而且我在普通服里练过十几个号，真心不想再重复那个过程：相同的地图、相同的任务、相同的副本。</p>
<p>即使我一时昏头，加入了怀旧服，接受怀旧服的新规则。我会花费时间跑路、升级、获取装备，然后呢？魔兽世界当年有句名言：满级才是游戏的开始。满级之后，我能玩的就是打副本、打战场、野外pvp。看到了吧，依然是旧的东西，依然是普通服里唾手可得的东西。</p>
<p>就算我能坚持下去，一直玩下去。但怀旧服版本就像任何的游戏一样，每个版本都有其生命周期。生命到了后期，人人都想要新东西，用户活跃大幅下滑。于是燃烧远征怀旧服开启，燃烧远征之后呢？</p>
<p>怀旧服从头到脚没有一丝新意，如果说有，也是在游戏营销上开创了炒冷饭的花样。怀旧服没有提供新的内容，却有比当前版本更差的游戏体验，最重要的是怀旧服最终将因为生命周期的规律不得不继续更新。一个持续更新的怀旧服，跟普通服还有区别吗？一定要眼睁睁地看着怀旧服更新到军团再临再能明白？</p>
<p>怀旧服，一个营销的花把式，一个低成本的试水之作，一个在游戏末期收割玩家的套路。</p>
<blockquote>
<p>客官，快来呀，只要75元就能回到那年夏天，回到大学校园，回到记忆中那绯红色的青春时代。</p>
</blockquote>
<p>啊，呸！</p>]]></content>
		</item>
		
		<item>
			<title>如何用 Python 生成带 Logo 二维码</title>
			<link>https://shenxiaobing.com/posts/2019/make-qr-with-logo-in-python/</link>
			<pubDate>Fri, 09 Nov 2018 15:21:41 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/make-qr-with-logo-in-python/</guid>
			<description>&lt;p&gt;如何用 Python 生成像微信名片那样的中间带有 Logo 的二维码？使用 Python 的qrcode模块可以很容易做到。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>如何用 Python 生成像微信名片那样的中间带有 Logo 的二维码？使用 Python 的qrcode模块可以很容易做到。</p>
<p>首先，import 所需的模块。完成工作，需要 <code>qrcode</code>和<code>PIL</code>模块。安装这些模块的方法可以自行百度。</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">qrcode</span>
<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span><span class="p">,</span> <span class="n">ImageFont</span><span class="p">,</span> <span class="n">ImageDraw</span>
</code></pre></div><p>接着，生成二维码。二维码仅至少接收一个文本参数。</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">make_qrcode</span><span class="p">(</span><span class="n">text</span><span class="p">)</span><span class="p">:</span>
    <span class="n">qr</span> <span class="o">=</span> <span class="n">qrcode</span><span class="o">.</span><span class="n">QRCode</span><span class="p">(</span><span class="n">version</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> 
    <span class="n">error_correction</span><span class="o">=</span><span class="n">qrcode</span><span class="o">.</span><span class="n">constants</span><span class="o">.</span><span class="n">ERROR_CORRECT_H</span><span class="p">,</span>
    <span class="n">box_size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span><span class="n">border</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">qr</span><span class="o">.</span><span class="n">add_data</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="n">qr</span><span class="o">.</span><span class="n">make</span><span class="p">(</span><span class="n">fit</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">qr</span><span class="o">.</span><span class="n">make_image</span><span class="p">(</span><span class="n">fill_color</span><span class="o">=</span><span class="sa"></span><span class="s2">&#34;</span><span class="s2">black</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">back_color</span><span class="o">=</span><span class="sa"></span><span class="s2">&#34;</span><span class="s2">white</span><span class="s2">&#34;</span><span class="p">)</span>
</code></pre></div><p>参数说明：</p>
<ul>
<li>version，通俗来说，用于控制二维码的尺寸。version=1时，二维码包含21个块，其后 version 每增加1，二维码块数增加4。因此，version=10包含21+4*9=57个块。每个块的实际像素，由下面的参数 box_size 决定。</li>
<li>error_correction，即容错率，按照「草料二维码」的建议，应当选择30%，这个比例下最容易被各种设备识别，也就是常量<code>qrcode.constants.ERROR_CORRECT_H</code>。其他的常量还有：
<ul>
<li>ERROR_CORRECT_L，大约7%容错；</li>
<li>ERROR_CORRECT_M，大约15%容错，默认值；</li>
<li>ERROR_CORRECT_Q，大约25%容错率。</li>
</ul>
</li>
<li>box_size，即每个块的占据的像素数，8就是8像素。</li>
<li>border，即二维码区域在边缘的留白，数字是块数，比如border=4即4块，也就是是4*8=32像素的留白，默认是4，建议最小值也是4，不过可以根据实际情况调整。</li>
<li>整体上，生成二维码实际大小这么算。（version 块数 + border 块数）* box_size，因此以上参数实际会生成（57 + 4）* 8 = 488像素大小的正方形。</li>
<li>最后 make_image 方法中的参数，可以根据实际需要调整，默认值就是白底黑色二维码。</li>
</ul>
<p>二维码生成了，下一步就是往二维码上添加 Logo。</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 将logo添加到二维码中间，logo的尺寸为二维码的1/4，且居中显示；</span>
<span class="c1"># 同时为了美观，logo与二维码中间会有适当留白。</span>
<span class="k">def</span> <span class="nf">add_image_to_center</span><span class="p">(</span><span class="n">back_image</span><span class="p">,</span> <span class="n">logo_image</span><span class="p">)</span><span class="p">:</span>
    <span class="n">qrcode_size</span> <span class="o">=</span> <span class="n">back_image</span><span class="o">.</span><span class="n">size</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="c1"># 创建一个qrcode大小的背景，用于解决黑色二维码粘贴彩色logo显示为黑白的问题。</span>
    <span class="n">qr_back</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="sa"></span><span class="s1">&#39;</span><span class="s1">RGBA</span><span class="s1">&#39;</span><span class="p">,</span> <span class="n">back_image</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="sa"></span><span class="s1">&#39;</span><span class="s1">white</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="n">qr_back</span><span class="o">.</span><span class="n">paste</span><span class="p">(</span><span class="n">back_image</span><span class="p">)</span>
    <span class="n">logo_background_size</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">qrcode_size</span> <span class="o">/</span> <span class="mi">4</span><span class="p">)</span>
    <span class="c1"># 创建一个尺寸为二维码1/4的白底logo背景</span>
    <span class="n">logo_background_image</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="sa"></span><span class="s1">&#39;</span><span class="s1">RGBA</span><span class="s1">&#39;</span><span class="p">,</span> <span class="p">(</span><span class="n">logo_background_size</span><span class="p">,</span> <span class="n">logo_background_size</span><span class="p">)</span><span class="p">,</span> <span class="sa"></span><span class="s1">&#39;</span><span class="s1">white</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="c1"># logo与其白底背景设置背景尺寸1/20的留白</span>
    <span class="n">logo_offset</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">logo_background_size</span> <span class="o">/</span> <span class="mi">20</span><span class="p">)</span>
    <span class="n">logo_size</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">logo_background_size</span> <span class="o">-</span> <span class="n">logo_offset</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
	<span class="c1"># 将 logo 缩放至适当尺寸</span>
    <span class="n">resized_logo</span> <span class="o">=</span> <span class="n">logo_image</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="p">(</span><span class="n">logo_size</span><span class="p">,</span> <span class="n">logo_size</span><span class="p">)</span><span class="p">)</span>
    <span class="c1"># 将logo添加到白色背景</span>
    <span class="n">logo_background_image</span><span class="o">.</span><span class="n">paste</span><span class="p">(</span><span class="n">resized_logo</span><span class="p">,</span> <span class="n">box</span><span class="o">=</span><span class="p">(</span><span class="n">logo_offset</span><span class="p">,</span> <span class="n">logo_offset</span><span class="p">)</span><span class="p">)</span>
    <span class="c1"># 将白色背景添加到二维码图片</span>
    <span class="n">logo_background_offset</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="p">(</span><span class="n">qrcode_size</span> <span class="o">-</span> <span class="n">logo_background_size</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">qr_back</span><span class="o">.</span><span class="n">paste</span><span class="p">(</span><span class="n">logo_background_image</span><span class="p">,</span> <span class="n">box</span><span class="o">=</span><span class="p">(</span><span class="n">logo_background_offset</span><span class="p">,</span> <span class="n">logo_background_offset</span><span class="p">)</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">qr_back</span>
</code></pre></div><p>以上代码中，需要说明的是关于第5行的问题。我发现直接往白底黑色二维码上粘贴彩色 Logo 会造成 Logo 显示为黑白色颗粒的问题。网上一时找不到解决方案，就只好折衷一下，先创建一个与二维码底色一样的背景 image，然后把二维码以及 logo 都粘贴到这个背景上。只是一个曲线救国方案，如果谁有更好的方法，欢迎联系我。</p>
<p>最终，到了实际生成步骤了。</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">text_for_qrcode</span> <span class="o">=</span> <span class="sa">r</span><span class="s1">&#39;</span><span class="s1">www.baidu.com</span><span class="s1">&#39;</span>
<span class="n">logo_image_file</span> <span class="o">=</span> <span class="sa">r</span><span class="s1">&#39;</span><span class="s1">avatar.jpg</span><span class="s1">&#39;</span>
<span class="k">with</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">logo_image_file</span><span class="p">)</span> <span class="k">as</span> <span class="n">logo_image</span><span class="p">:</span>
    <span class="n">qr_code</span> <span class="o">=</span> <span class="n">make_qrcode</span><span class="p">(</span><span class="n">text_for_qrcode</span><span class="p">)</span>
    <span class="n">qr_code_with_logo</span> <span class="o">=</span> <span class="n">add_image_to_center</span><span class="p">(</span><span class="n">qr_code</span><span class="p">,</span> <span class="n">logo_image</span><span class="p">)</span>
    <span class="n">qr_code_with_logo</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="sa"></span><span class="s1">&#39;</span><span class="s1">qr.png</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>最终效果如下图所示：</p>
<p><img src="/images/qr.png" alt="qr"></p>]]></content>
		</item>
		
		<item>
			<title>意义</title>
			<link>https://shenxiaobing.com/posts/2019/meaning/</link>
			<pubDate>Mon, 03 Sep 2018 15:12:31 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/meaning/</guid>
			<description>&lt;blockquote&gt;
&lt;p&gt;意义，就是对特定对象的价值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当这个词语被用到的时候，一般都会忽略到「特定对象」。“要过有意义的人生”，“人生没有意义”，这种泛指的用法让人迷惑。有意义的人生，对谁或者对什么有意义呢？对自己本人，对家庭，对族群，对国家？对世界和平、自由平等？对耶稣佛陀？&lt;/p&gt;
&lt;p&gt;厘清定义之后，意义不再令人困惑。没有意义，也不再令人恐惧。「我的人生」的意义，如果有，注定是为「第三方」提供价值。如果只是对我自己有价值，那这就是所有人的现状，自为的状态。因此，当提到「我的人生」的意义时，一定会指向第三方。&lt;/p&gt;
&lt;p&gt;第三方的可能性是什么？&lt;/p&gt;</description>
			<content type="html"><![CDATA[<blockquote>
<p>意义，就是对特定对象的价值。</p>
</blockquote>
<p>当这个词语被用到的时候，一般都会忽略到「特定对象」。“要过有意义的人生”，“人生没有意义”，这种泛指的用法让人迷惑。有意义的人生，对谁或者对什么有意义呢？对自己本人，对家庭，对族群，对国家？对世界和平、自由平等？对耶稣佛陀？</p>
<p>厘清定义之后，意义不再令人困惑。没有意义，也不再令人恐惧。「我的人生」的意义，如果有，注定是为「第三方」提供价值。如果只是对我自己有价值，那这就是所有人的现状，自为的状态。因此，当提到「我的人生」的意义时，一定会指向第三方。</p>
<p>第三方的可能性是什么？</p>
<p>第一类，就是大词。自由平等博爱民主法治伟大高尚慈善智慧和平，他们的共同点就是足够抽象，这样的标的可以接受无限的价值提供，整个生命都会充满意义感。</p>
<p>第二类，宗教。宗教的本义就是无条件的相信。「我的人生」全部都可以献给我的唯一的神。</p>
<p>第三类，极致的专业。绘画、音乐、物理、数学等，这种艺术类和研究类的专业领域，有无止境的追求深度。</p>
<p>这些是足够贯穿一生接受意义注入的对象。还有一些，比如保护亚文化、保护某个弱势群体，我想可以归入到第一类中。</p>
<p>既然意义是身外之物，我们要来何用？</p>
<blockquote>
<p>意义本身提供了人生持久的动力。</p>
</blockquote>
<p>对自由、对宗教、对音乐的追求，会让人持续地保持向上的状态。即使在低谷有迷茫的时候，也明确地知道自己的方向。</p>
<p>所以，意义对于个人来说还是有意义的。但没有意义的生活，也可以一样的精彩。因为，到最后，你还有对自己的意义。你的意义不依赖于外物，而在于你自己。</p>
<p>同时，我们也可以看到，选择一个有深度的专业领域，可以成为一个未来潜在的意义之源。</p>
<p>有时候的很多烦恼，都是来自于对个人现状的不满。比如，我处在一个自私自为的状态，烦恼于为什么我不是一个为国为民或者天地境界这种更高的层次。为什么天地境界就比自私自为更高级？</p>
<p>安心地做一个自私的人。安心地做一个不为外物提供意义的人。是啊，我对大词、宗教、专业都没有什么价值，那有怎样呢？我为什么要为这些事物提供价值呢？回答不出这个问题，我为什么要烦恼呢？我们本来就天然没有价值联系啊！</p>
<p>人生有没有天然的意义？有！你的父母盼望你的降生，国家想要一个劳动力，人类希望你传播基因&hellip;</p>
<p>但你没必要去回应这些意义。一个人不必刻意地去追求大词和宗教，期望他们给自己带来有意义的人生。反倒是可以选择一个有深度的专业，为自己谋得一个富足的人生，而且可能会提供持久的意义。有些事情不是靠个人选择，而是水到渠成。</p>
<p>「没有意义」没什么大不了，只要你知道它对你自己的意义。</p>]]></content>
		</item>
		
		<item>
			<title>《爱上跑步的13周》专属App软件</title>
			<link>https://shenxiaobing.com/posts/2019/app-for-13-week-run-program/</link>
			<pubDate>Sat, 04 Aug 2018 23:05:26 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/app-for-13-week-run-program/</guid>
			<description>&lt;p&gt;《爱上跑步的13周》提供了完整的13周跑步训练计划。该计划核心在于循序渐进地提升运动量，在避免运动受伤的前提下，用13周让几乎任何体能状况的人完成自己的10公里跑。&lt;/p&gt;
&lt;p&gt;心动不如行动。&lt;/p&gt;
&lt;p&gt;但实际行动起来，却发现要完全跟随计划有点困难，因为这套训练计划的核心是跑步与走路相结合。我们需要知道什么时候该跑步，什么时候该走路。&lt;/p&gt;
&lt;p&gt;《爱跑十三周》这个工具型app就是为此而生。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载地址：&lt;a href=&#34;https://itunes.apple.com/cn/app/id1403686503&#34;&gt;https://itunes.apple.com/cn/app/id1403686503&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;或苹果商店搜索「爱跑十三周」下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;《爱跑十三周》的主要功能如下：&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>《爱上跑步的13周》提供了完整的13周跑步训练计划。该计划核心在于循序渐进地提升运动量，在避免运动受伤的前提下，用13周让几乎任何体能状况的人完成自己的10公里跑。</p>
<p>心动不如行动。</p>
<p>但实际行动起来，却发现要完全跟随计划有点困难，因为这套训练计划的核心是跑步与走路相结合。我们需要知道什么时候该跑步，什么时候该走路。</p>
<p>《爱跑十三周》这个工具型app就是为此而生。</p>
<ul>
<li>下载地址：<a href="https://itunes.apple.com/cn/app/id1403686503">https://itunes.apple.com/cn/app/id1403686503</a></li>
<li>或苹果商店搜索「爱跑十三周」下载。</li>
</ul>
<p>《爱跑十三周》的主要功能如下：</p>
<h3 id="一内置完整13周训练计划">一、内置完整13周训练计划</h3>
<p>《爱跑十三周》100%还原《爱上跑步的13周》中制定的训练计划，包括中后期的「跑步多一些」和「走路多一些」选项，也都可以在《爱跑十三周》中进行设定。除了基础计划，还包括进阶的13周维持计划和13周快跑计划，完全还原原书计划。</p>
<p><img src="/images/program.jpg" alt=""></p>
<h3 id="二后台语音提示践行计划无压力">二、后台语音提示，践行计划无压力</h3>
<p>根据训练计划，在跑步与走路需要切换时，会有语音提示。再也不用担心跟不上计划了。</p>
<p>同时，每满1公里，还会有语音提示。即使熄灭手机跑步，一样可以在切换跑步走路时进行语音提示。</p>
<h3 id="三实时gps数据一目了然">三、实时GPS数据，一目了然</h3>
<p>基于GPS，可以实时看到自己跑步的速度、距离、卡路里。跑完，还可以看到自己跑步的路线。</p>
<p><img src="/images/IMG_0008.PNG" alt=""></p>
<h3 id="四详细运动记录方便回顾">四、详细运动记录，方便回顾</h3>
<p>每次运动，这款专属《爱上跑步的13周》的工具软件都会记录详细的跑步数据以及跑步路线。</p>
<p><img src="/images/record.jpg" alt=""></p>
<h3 id="五跑步提醒规律运动">五、跑步提醒，规律运动</h3>
<p>每隔2天，系统会提醒你该进行下一次训练了。就是这样。</p>
<blockquote>
<p>如果你想践行《爱上跑步的13周》跑步计划，这就是你最佳的工具软件App。</p>
</blockquote>
<h3 id="下载地址">下载地址</h3>
<p>最后，再发一次下载地址，仅支持苹果手机哦！</p>
<ul>
<li>下载地址：<a href="https://itunes.apple.com/cn/app/id1403686503">https://itunes.apple.com/cn/app/id1403686503</a></li>
<li>或苹果商店搜索「爱跑十三周」下载。</li>
</ul>]]></content>
		</item>
		
		<item>
			<title>我的App审核简史</title>
			<link>https://shenxiaobing.com/posts/2019/a-brief-history-of-app-review/</link>
			<pubDate>Fri, 27 Jul 2018 12:33:33 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/a-brief-history-of-app-review/</guid>
			<description>&lt;p&gt;两款应用终于过审了。记录下过程，以备参考。&lt;/p&gt;
&lt;p&gt;先交代下两款应用的背景：&lt;/p&gt;
&lt;p&gt;应用一：爱跑十三周，跑步应用，本地化为3种语言，没有开关隐藏、热更、第三方支付等常见违规问题；&lt;/p&gt;
&lt;p&gt;应用二：魔板拼图，解谜游戏应用，本地化为3种语言，没有开关隐藏、热更、第三方支付等常见违规问题。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>两款应用终于过审了。记录下过程，以备参考。</p>
<p>先交代下两款应用的背景：</p>
<p>应用一：爱跑十三周，跑步应用，本地化为3种语言，没有开关隐藏、热更、第三方支付等常见违规问题；</p>
<p>应用二：魔板拼图，解谜游戏应用，本地化为3种语言，没有开关隐藏、热更、第三方支付等常见违规问题。</p>
<h2 id="爱跑十三周审核来往记录">「爱跑十三周」审核来往记录</h2>
<p>6月29日，首次提交审核；
6月30日，进入审核，元数据被拒；原因主要有两点：</p>
<ol>
<li>需要确认并声明遵守Guideline 2.1，因为这个类型的应用被认为可能会违反苹果审核规定。</li>
<li>苹果截图中不能包含价格或者免费字样。因为我的一张截图提到了免费字眼。</li>
</ol>
<p>6月30日，修改截图，并在待审核版本备注上声明遵守协议；重新提交审核。</p>
<p>7月3日，进入In Review状态。
7月17日，审核状态一直没变化。于是参考晚上的建议，将应用撤回，修改为1元付费应用，并重新提交审核。</p>
<p>7月20日，进入In Review状态。
7月21日，被拒绝，原因是：App在iPv6网络下点击某个菜单按键会闪退。我查看了他们附带的崩溃日志，没看到代码相关的报错。而且实际利用Mac创建iPv6网络测试，也没有问题。不过实际测试时，确实发现了因为没有及时移除KVO观察导致的崩溃，于是修复了这个Bug。但依然不确定，苹果审核人员的闪退是不是由这个Bug导致的。</p>
<p>7月23日，重新提交应用审核。
7月24日，进入In Review状态。
7月24日，元数据被拒，理由是：应用的中文名，包含了关键词或者描述语句。我的中文名是：爱跑 - 爱上跑步的13周。于是，我把中文名直接改成了爱跑十三周。并重新提交审核。</p>
<p>7月25日，再次进入In Review，并当天被拒，理由是：</p>
<ol>
<li>爱跑十三周，依然被认为是关键词或者描述语句，需要修改；</li>
<li>应用请求用户的位置但没有说明使用目的。</li>
</ol>
<p>我直接回复，爱跑十三周就是正式的app名字；同时截图给他看了我的本地化后的关于InfoPlist.string中与获取位置权限相关的描述。</p>
<p>7月26日，苹果回复说，中文名翻译以后是Love running for thirteen weeks，如果这是本意的话，则需要修改英文名字。当前的英文名是Into Run。
我回复说，在13周内爱上跑步就是本意。对于英文名来说，Into Run意思就是Love Running，英文名太长，不能完全照搬中文名的含义。同时举例微信和Wechat的例子来说明我的观点。最后，总结说这个名字是有效的。</p>
<p>7月26日下午，苹果回复说，中文名描述了在13周内跑步这个过程，但英文名却没有符合那个名字或过程。因此，要求修改名字，使之匹配。
我直接将英文名改为：Into Run: 13-week Run Program，然后回复说已经修改。</p>
<p>7月26日晚上将近12点左右，应用过审。</p>
<h2 id="魔板拼图审核来往记录">「魔板拼图」审核来往记录</h2>
<p>7月21日，首次提交审核；提审后大约2个小时，返回错误：Invalid Binary。原因是我用了Xcode 10 Beta去编译生成的包。
于是，重新下载Xcode 9正式版，调整了app里的Swift4.2的方法，编译测试通过后，重新提交。</p>
<p>7月24日，重新提交并进入In Review状态；
7月24日，被拒，原因是：元数据包含误导或者故意欺骗用户的信息。我猜测大概是因为截图，因为我在中国区和其他语言使用了不同的截图，app内实际也是这样的设定。于是，回复说明了这个情况。
大约10分钟，他们就回复了，当时是上午9点21分。回复提到了另一个问题：说中文名可能存在利用另一个类似app的情况，要求改名字。
我当时立刻修改了名字。然后，我又重新提交了一次应用。</p>
<p>7月27日，凌晨2点左右，应用过审。</p>
<h2 id="经验教训">经验教训</h2>
<ol>
<li>进入审核超过3天状态没有变化，可以撤掉重新提审，从记录来看，进入审核1-2天内就有结果；</li>
<li>主动声明绝无违反Guidline 2.1提到的那几个条款；</li>
<li>主动用iPv6测试App；</li>
<li>本地化的各个名字在实际含义上要匹配；</li>
<li>对于权限的请求，主动声明或者提供相关描述的截图；</li>
<li>应用名称中不要加各种看似关键词的东西；</li>
<li>不要使用Xcode的beta版本去打提审包；</li>
<li>对于不同地区使用不同截图的情况，可以主动说明情况；</li>
</ol>]]></content>
		</item>
		
		<item>
			<title>数字华容道怎样才能有解</title>
			<link>https://shenxiaobing.com/posts/2019/puzzle-random-algorithm/</link>
			<pubDate>Fri, 06 Jul 2018 00:01:16 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/puzzle-random-algorithm/</guid>
			<description>&lt;p&gt;数字华容道，是在4x4的格子中，依次从左到右，从上到下放置1-15这15个数字。经过一定的随机，必须将这15个数字复原。每个数字只能向相邻的唯一空格移动。难度更高的，格子和数字会更多，比如5x5。&lt;/p&gt;
&lt;p&gt;我在开发一个类数字华容道游戏时，发现自己3x3的格子，居然怎么都解不出来。比如：一排1、2、3，二排4、5、6，三排8，7。经过网上查询，才知道完全随机位置的数值华容道仅有50%的概率是有解的。而我就是用的完全随机方式去打乱次序。&lt;/p&gt;
&lt;p&gt;网上有两篇文章说的很好，以下是根据这两篇文章的总结。&lt;/p&gt;
&lt;h2 id=&#34;数字华容道必然有解的前提&#34;&gt;数字华容道必然有解的前提&lt;/h2&gt;
&lt;p&gt;首先，要弄清楚一个概念：逆序数。逆序数，即一个数字序列，将其中所有数字依次两两对比，若大数在前，小数在后，那么这就是一对逆序数。这里说到的逆序数，指的是数字序列中逆序数的数量。比如：上文提到的1、2、3、4、5、6、8、7，逆序数只有1个，即8和7。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>数字华容道，是在4x4的格子中，依次从左到右，从上到下放置1-15这15个数字。经过一定的随机，必须将这15个数字复原。每个数字只能向相邻的唯一空格移动。难度更高的，格子和数字会更多，比如5x5。</p>
<p>我在开发一个类数字华容道游戏时，发现自己3x3的格子，居然怎么都解不出来。比如：一排1、2、3，二排4、5、6，三排8，7。经过网上查询，才知道完全随机位置的数值华容道仅有50%的概率是有解的。而我就是用的完全随机方式去打乱次序。</p>
<p>网上有两篇文章说的很好，以下是根据这两篇文章的总结。</p>
<h2 id="数字华容道必然有解的前提">数字华容道必然有解的前提</h2>
<p>首先，要弄清楚一个概念：逆序数。逆序数，即一个数字序列，将其中所有数字依次两两对比，若大数在前，小数在后，那么这就是一对逆序数。这里说到的逆序数，指的是数字序列中逆序数的数量。比如：上文提到的1、2、3、4、5、6、8、7，逆序数只有1个，即8和7。</p>
<p>另外，还有一点要提出来。一般来讲，复原状态（初始状态）的数字华容道，会有一个空格，一般会设置在最末行的右下角。但也可以根据实际的需求，设置在其他行。请留意，初始空格所在的行数，是决定是否有解的一个重要因素。</p>
<p>数字华容道，必然有解，只存在于如下3个细分情形：</p>
<ol>
<li>若格子列数为奇数，则逆序数必须为偶数；</li>
<li>若格子列数为偶数，且逆序数为偶数，则当前空格所在行数与初始空格所在行数的差为偶数；</li>
<li>若格子列数为偶数，且逆序数为奇数，则当前空格所在行数与初始空格所在行数的差为奇数。</li>
</ol>
<p>实际的推演涉及到我一时难以彻底理解的数学推算，我只能用浅显的方式来理解这个问题。</p>
<h2 id="为什么">为什么？</h2>
<p>首先，有解的前提在于：当前空格回到初始空格所在行数时，逆序数一定得是偶数！为什么，我不清楚。</p>
<p>要想把空格移动到初始空格所在行，必须进行若干次上下移动和若干次左右移动。</p>
<p>左右移动，不会改变逆序数；上下移动，若格子列数为奇数，则每次增减偶数个逆序数，若格子列数为偶数，则每次增减奇数个逆序数。</p>
<p>也就是说：</p>
<ol>
<li>格子列数为奇数，怎么移动，都不会改变原始的逆序数。因为奇数加减偶数还是奇数，偶数加减偶数还是偶数。所以，只要保证逆序数是偶数即可，不必关心空格的位置。</li>
<li>格子列数为偶数，那么进行奇数次上下移动，会改变其逆序数的奇偶性。所以，如果当前逆序数是偶数，要想有解，就要保证实际上下移动会进行偶数次，也就是说空格所在行与初始空格所在行的差为偶数。</li>
<li>同理，若当前逆序数是奇数，要想有解，要进行奇数次的移动，才能保证最终逆序数是偶数。</li>
</ol>
<h2 id="如何转换逆序数奇偶性">如何转换逆序数奇偶性</h2>
<p>具体实现应该很简单，不多说了，就说一点。如果想更改一个数字序列的逆序数的奇偶性，只需要调换一对逆序数的位置即可。</p>
<h2 id="最后">最后</h2>
<p>可能是CS106A课程上的一句话，并不是原文：</p>
<blockquote>
<p>程序员要在不理解内在实现逻辑的情况下，也能顺畅地使用别人的成果。</p>
</blockquote>
<p>不理解没关系，会用就行。</p>
<p>参考文档：</p>
<ul>
<li><a href="https://www.guokr.com/article/54088/">https://www.guokr.com/article/54088/</a></li>
<li><a href="https://segmentfault.com/a/1190000013284274">用React写一个数字华容道，你需要知道的秘密 - 地铁上的小前端 - SegmentFault 思否</a></li>
</ul>]]></content>
		</item>
		
		<item>
			<title>I made an app</title>
			<link>https://shenxiaobing.com/posts/2019/i-made-an-app/</link>
			<pubDate>Fri, 29 Jun 2018 11:03:50 +0000</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/i-made-an-app/</guid>
			<description>&lt;p&gt;我的第一个App终于提审了。&lt;/p&gt;
&lt;p&gt;从2015年开始，我就念叨着要做一个App；而2016和2017年的年度目标之一就是上架一个App。但直到现在，2018年，我才真正完成我的第一款App。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>我的第一个App终于提审了。</p>
<p>从2015年开始，我就念叨着要做一个App；而2016和2017年的年度目标之一就是上架一个App。但直到现在，2018年，我才真正完成我的第一款App。</p>
<p>我看了下代码文档的创建时间最早是在4月23日，也就是说我用了2个月时间完成了一款简单的跑步App。这2个月一开始也是松松垮垮，直到最后几天才通宵达旦地冲着目标冲刺。</p>
<p>有时候，我会想，我是真的喜欢编程么？是的话，为何这几年都没有实质的进展；而不是的话，为何这几年都心心念念？理性地讲，如果时间回到我刚毕业那会，我可能会选择编程，毫无疑问。但现在，调转航道的成本和风险不能不让我三思。</p>
<p>不管怎样，至少这是一个里程碑。</p>]]></content>
		</item>
		
		<item>
			<title>iOS工程的本地化-Swift</title>
			<link>https://shenxiaobing.com/posts/2019/localization-of-ios-project/</link>
			<pubDate>Fri, 29 Jun 2018 14:20:39 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/localization-of-ios-project/</guid>
			<description>&lt;p&gt;应用如果需要根据设备语言显示不同的语言，就需要进行本地化的工作。就iOS工程而言，需要本地化的内容主要有：文字、图片、语音。一般而言，图片和语言的本地化，都可以转化为实质上的字符串的本地化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;info.plist本地化&lt;/li&gt;
&lt;li&gt;代码字符串本地化&lt;/li&gt;
&lt;li&gt;storyboard, xib文件本地化&lt;/li&gt;
&lt;li&gt;launchScreen.storyboard本地化&lt;/li&gt;
&lt;li&gt;图片本地化&lt;/li&gt;
&lt;li&gt;一次性导出本地化文件&lt;/li&gt;
&lt;li&gt;新增内容的本地化&lt;/li&gt;
&lt;li&gt;多人协作下使用自定义Localizable.strings文件&lt;/li&gt;
&lt;/ul&gt;</description>
			<content type="html"><![CDATA[<p>应用如果需要根据设备语言显示不同的语言，就需要进行本地化的工作。就iOS工程而言，需要本地化的内容主要有：文字、图片、语音。一般而言，图片和语言的本地化，都可以转化为实质上的字符串的本地化。</p>
<ul>
<li>info.plist本地化</li>
<li>代码字符串本地化</li>
<li>storyboard, xib文件本地化</li>
<li>launchScreen.storyboard本地化</li>
<li>图片本地化</li>
<li>一次性导出本地化文件</li>
<li>新增内容的本地化</li>
<li>多人协作下使用自定义Localizable.strings文件</li>
</ul>
<h2 id="本地化的前置配置">本地化的前置配置</h2>
<p>要进行任何本地化之前，需要先配置本地化语言。前往Project - Info - Localizations，添加本地化的目标语言。</p>
<h2 id="infoplist本地化">Info.Plist本地化</h2>
<p><code>Info.plist</code>文件中，有：应用显示名称，还有系统权限文字说明，比如：请求位置或者拍照时弹出系统提示，我们需要在那里显示请求权限的用途。这部分的文字，都在<code>info.plist</code>中。</p>
<h3 id="创建文件infopliststrings">创建文件InfoPlist.strings</h3>
<p>我们可以直接创建名为<code>InfoPlist.strings</code>的文件。文件名不能自定义。</p>
<h3 id="勾选本地化语言">勾选本地化语言</h3>
<p>创建后，选中文件，在Xcode右侧边栏<code>File Inspector</code>中可以找到<code>Localization</code>勾选项。勾选一个语言，就会自动生成一个对应那个语言的<code>InfoPlist.strings</code>文件。</p>
<h3 id="添加要修改键值对">添加要修改键值对</h3>
<p>在<code>InfoPlist.strings</code>文件中，我们可以直接像这样一样，去手动输入键和对应的本地化文本，最后用分号标识：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="cm">/*</span><span class="cm"> </span><span class="cm">B</span><span class="cm">u</span><span class="cm">n</span><span class="cm">d</span><span class="cm">l</span><span class="cm">e</span><span class="cm"> </span><span class="cm">d</span><span class="cm">i</span><span class="cm">s</span><span class="cm">p</span><span class="cm">l</span><span class="cm">a</span><span class="cm">y</span><span class="cm"> </span><span class="cm">n</span><span class="cm">a</span><span class="cm">m</span><span class="cm">e</span><span class="cm"> </span><span class="cm">*/</span>
<span class="s">&#34;</span><span class="s">CFBundleDisplayName</span><span class="s">&#34;</span> <span class="p">=</span> <span class="s">&#34;</span><span class="s">爱跑十三周</span><span class="s">&#34;</span><span class="p">;</span>
</code></pre></div><p>前提是你得知道要修改的文本对应的键是什么，比如`&quot;CFBundleDisplayName&quot;是应用的显示名称。</p>
<p>如果想知道键是什么，可以选中<code>info.plist</code>，右键选择<code>Open As - Source Code</code>。在那里可以到真实的键名。</p>
<h2 id="代码字符串的本地化">代码字符串的本地化</h2>
<h3 id="代码中调用nslocalizedstring">代码中调用NSLocalizedString</h3>
<p>要本地化代码字符串，在使用字符串时，不能直接用具体明文的<code>String</code>，而要把需要本地化显示的字符串写成<code>NSLolalizedString(string: String, comment: String)</code>。方法里第一个参数，可以理解为本地化的键，这个值应该是唯一的，是本地化字符串的唯一标识。comment，是字符串的注释，方便你进行后续的翻译。</p>
<p>比如：<code>label. text = NSLocalizedString(&quot;屏幕尺寸&quot;, comment: &quot;屏幕尺寸label的标题&quot;)</code></p>
<h3 id="创建文件localizablestrings">创建文件Localizable.Strings</h3>
<p>创建名为<code>Localizable</code>的<code>strings</code>文件，名称不能自定义。</p>
<h3 id="勾选本地化语言-1">勾选本地化语言</h3>
<p>创建后，选中文件，在Xcode右侧边栏<code>File Inspector</code>中可以找到<code>Localization</code>勾选项。勾选一个语言，就会自动生成一个对应那个语言的<code>Localizable.strings</code>文件。</p>
<h3 id="添加要修改的本地化键值对">添加要修改的本地化键值对</h3>
<p>添加如下代码进入<code>Localizable.strings</code>。<strong>请注意添加代码末尾的分号</strong></p>
<p>简体中文的<code>Localizable.strings</code></p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="cm">/*</span><span class="cm"> </span><span class="cm">屏</span><span class="cm">幕</span><span class="cm">尺</span><span class="cm">寸</span><span class="cm">l</span><span class="cm">a</span><span class="cm">b</span><span class="cm">e</span><span class="cm">l</span><span class="cm">的</span><span class="cm">标</span><span class="cm">题</span><span class="cm"> </span><span class="cm">*/</span>
<span class="s">&#34;</span><span class="s">屏幕尺寸</span><span class="s">&#34;</span> <span class="p">=</span> <span class="s">&#34;</span><span class="s">屏幕尺寸</span><span class="s">&#34;</span><span class="p">;</span>
</code></pre></div><p>繁体中文的<code>Localizable.strings</code></p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="cm">/*</span><span class="cm"> </span><span class="cm">屏</span><span class="cm">幕</span><span class="cm">尺</span><span class="cm">寸</span><span class="cm">l</span><span class="cm">a</span><span class="cm">b</span><span class="cm">e</span><span class="cm">l</span><span class="cm">的</span><span class="cm">标</span><span class="cm">题</span><span class="cm"> </span><span class="cm">*/</span> 
<span class="s">&#34;</span><span class="s">屏幕尺寸</span><span class="s">&#34;</span> <span class="p">=</span> <span class="s">&#34;</span><span class="s">熒幕尺寸</span><span class="s">&#34;</span><span class="p">;</span>
</code></pre></div><p>英文的<code>Localizable.strings</code></p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="cm">/*</span><span class="cm"> </span><span class="cm">屏</span><span class="cm">幕</span><span class="cm">尺</span><span class="cm">寸</span><span class="cm">l</span><span class="cm">a</span><span class="cm">b</span><span class="cm">e</span><span class="cm">l</span><span class="cm">的</span><span class="cm">标</span><span class="cm">题</span><span class="cm"> </span><span class="cm">*/</span>  
<span class="s">&#34;</span><span class="s">屏幕尺寸</span><span class="s">&#34;</span> <span class="p">=</span> <span class="s">&#34;</span><span class="s">Screen Size</span><span class="s">&#34;</span><span class="p">;</span>
</code></pre></div><p>这样那一处的字符串就完成了本地化。再对其他需要本地化的字符串做相同的处理即可。</p>
<h2 id="storyboard和xib的本地化">storyboard和xib的本地化</h2>
<p>有时我们创建的storyboard和xib上也有字符串需要本地化。要做也非常简单。</p>
<h3 id="勾选本地化语言-2">勾选本地化语言</h3>
<p>选中storyboard或者xib，在File Inspector中勾选Localization中需要本地化的语言。勾选后，就会在原来的文件下面生成本地化的strings文件，文件名是storyboard或者xib的名称。</p>
<h3 id="进入strings文件修改">进入strings文件修改</h3>
<p>进入自动生成的strings文件，可以看到里面把带有字符串的按钮都列出来了。我们可以直接去修改对应的数值即可。</p>
<h2 id="launchscreenstoryboard的本地化">LaunchScreen.storyboard的本地化</h2>
<p>上面本地化storboard的方法并不适用于<code>LaunchScreen.storyboard</code>。但要本地化也有办法。</p>
<h3 id="手动创建多个storyboard">手动创建多个storyboard</h3>
<p>手动创建多个针对不同语言的storyboard，设置其样式和外观。</p>
<h3 id="添加infopliststrings键值对">添加InfoPlist.strings键值对</h3>
<p>在上文提到的InfoPlist.strings中加入如下代码：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="cm">/*</span><span class="cm"> </span><span class="cm">L</span><span class="cm">a</span><span class="cm">u</span><span class="cm">c</span><span class="cm">h</span><span class="cm">S</span><span class="cm">c</span><span class="cm">r</span><span class="cm">e</span><span class="cm">e</span><span class="cm">n</span><span class="cm"> </span><span class="cm">s</span><span class="cm">t</span><span class="cm">o</span><span class="cm">r</span><span class="cm">y</span><span class="cm">b</span><span class="cm">o</span><span class="cm">a</span><span class="cm">r</span><span class="cm">d</span><span class="cm"> </span><span class="cm">f</span><span class="cm">o</span><span class="cm">r</span><span class="cm"> </span><span class="cm">t</span><span class="cm">h</span><span class="cm">e</span><span class="cm"> </span><span class="cm">l</span><span class="cm">a</span><span class="cm">n</span><span class="cm">g</span><span class="cm">u</span><span class="cm">a</span><span class="cm">g</span><span class="cm">e</span><span class="cm"> </span><span class="cm">*/</span>
<span class="s">&#34;</span><span class="s">UILaunchStoryboardName</span><span class="s">&#34;</span> <span class="p">=</span> <span class="s">&#34;</span><span class="s">LaunchScreenSC</span><span class="s">&#34;</span><span class="p">;</span>
</code></pre></div><p>为不同语言的InfoPlist.strings指定不同的用于启动的storyboard名称。</p>
<h2 id="图片的本地化">图片的本地化</h2>
<h3 id="使用本地化的图片名称">使用本地化的图片名称</h3>
<p>图片的调用一般是用图片名称，也就是字符串，因此图片本地化可以转化为字符串本地化问题。</p>
<h3 id="对图片资源设置本地化语言">对图片资源设置本地化语言</h3>
<p>像对xib那样在File Inspector中配置本地化语言，这样就会在不同的本地化文件夹中出现同名的图片。根据需要替换即可。</p>
<h2 id="一次性导出本地化文件">一次性导出本地化文件</h2>
<p>上面的这些方法都没问题，但如果要修改的文字很多，如果翻译需要多人去做，这样就很低效。Xcode提供了一个工具，可以导出所有本地化字符串。</p>
<h3 id="确认已配置本地化语言">确认已配置本地化语言</h3>
<ol>
<li>将需要本地化的storyboard和xib勾选本地化语言</li>
<li>在代码里添加需要本地化的NSLocalizedString</li>
</ol>
<h3 id="导出xliff文件">导出xliff文件</h3>
<p>选中<code>Target</code>，点击顶部<code>Editor</code>，然后点击<code>Export For Localization</code>。选择要导出的语言，即可导出<code>xliff</code>文件。</p>
<h3 id="导入xliff文件">导入xliff文件</h3>
<p>将xliff文件发给本地化小组完成本地化后，可以直接在<code>Editor</code> - <code>Import Localization</code>导入<code>xliff</code>文件。</p>
<h2 id="新增内容的本地化">新增内容的本地化</h2>
<p>应用出了新版本，又有了新的需要本地化的内容。这时，只需要重新导出<code>xliff</code>文件。原有的本地化内容在导出时会被保留，只需要对新的内容本地化。完成后，重新导入，即可。</p>
<h2 id="从指定自定义strings文件加载本地化字符串">从指定自定义strings文件加载本地化字符串</h2>
<p>如果多人需要操作字符串，那么可以自己创建一个专属于自己的strings字符串，不使用默认的Localizable.strings。比如，你创建了名为<code>MyLocalizable.strings</code>的文件。那么你在调用本地化字符串时，就应该这样写：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">let</span> <span class="nv">text</span> <span class="p">=</span> <span class="n">NSLocalziableString</span><span class="p">(</span><span class="s">&#34;</span><span class="s">屏幕尺寸</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">tableName</span><span class="p">:</span> <span class="s">&#34;</span><span class="s">MyLocalizable</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">comment</span><span class="p">:</span> <span class="s">&#34;</span><span class="s">屏幕尺寸</span><span class="s">&#34;</span><span class="p">)</span><span class="p">)</span>
</code></pre></div><p>即在参数中加入<code>tableName</code>，指定从哪个文件加载。</p>
<p>参考文档：</p>
<ul>
<li><a href="https://www.jianshu.com/p/88c1b65e3ddb">https://www.jianshu.com/p/88c1b65e3ddb</a></li>
</ul>]]></content>
		</item>
		
		<item>
			<title>仿照微信WebView实现ProgressBar</title>
			<link>https://shenxiaobing.com/posts/2019/progress-bar-like-wechat-webview/</link>
			<pubDate>Thu, 28 Jun 2018 10:03:47 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/progress-bar-like-wechat-webview/</guid>
			<description>&lt;h2 id=&#34;两种进度条逻辑&#34;&gt;两种进度条逻辑&lt;/h2&gt;
&lt;p&gt;在网页中，一般我们会用顶部进度条来表示当前网页加载的进度。这里最常见的就是像Safari或Chrome浏览器那样的，用真实的进度百分比来更新进度条。当网速较慢时，进度条几乎完全不动；当网速较快时，进度条则会从大约20%位置嗖一下快速变为100%。&lt;/p&gt;
&lt;p&gt;还有一种，就是微信App里的网页加载进度条。这里的进度条反映的不是真实的加载进度，其设计初衷应该就是让网页加载『看起来』更快。经过观察，大约是这样的一个逻辑：&lt;/p&gt;</description>
			<content type="html"><![CDATA[<h2 id="两种进度条逻辑">两种进度条逻辑</h2>
<p>在网页中，一般我们会用顶部进度条来表示当前网页加载的进度。这里最常见的就是像Safari或Chrome浏览器那样的，用真实的进度百分比来更新进度条。当网速较慢时，进度条几乎完全不动；当网速较快时，进度条则会从大约20%位置嗖一下快速变为100%。</p>
<p>还有一种，就是微信App里的网页加载进度条。这里的进度条反映的不是真实的加载进度，其设计初衷应该就是让网页加载『看起来』更快。经过观察，大约是这样的一个逻辑：</p>
<blockquote>
<p>打开网页，进度条就进到10%；</p>
<p>再用3秒钟，进度条从10%走到60%；</p>
<p>再用4秒钟，进度条从60%走到80%；</p>
<p>再用8秒钟，进度条从80%走到90%；</p>
<p>从90%位置开始，进度条开始反应真实的加载进度。若此时网络连接极差，那么将会在90%卡住很久。</p>
<p>在以上的15秒内，若真实进度超过90%，则直接切换到真实进度，所以2秒打开的网页，也只会用2秒，不会固定加载15秒。</p>
</blockquote>
<p>从用户提交角度，可以对比不同网速下打开网页时进度条的表现：</p>
<ul>
<li>网速快，那么微信用3秒就进到60%，然后第4秒刷一下到100%；而Safari则是慢慢地移动到30%左右，然后刷的进到100%。</li>
<li>网速慢，那么微信用15秒加载了90%，只差最后10%加载不出；而Safari则一直处于不足10%的加载状态。</li>
</ul>
<p>对于小白用户而言，微信的加载条让人『感觉』更快。</p>
<p>除了这一点，<code>WKWebView</code>的<code>estimatedProgress</code>并不会均匀地返回结果。很可能第一次返回结果就是0.5，然后就是0.1。这样Safari加载时，会看到进度条忽快忽慢。</p>
<p>总结起来：</p>
<ul>
<li><code>estimatedProgress</code>返回值不均匀，这样进度条进度并不平滑；</li>
<li>虚假进度给人『更好』的用户体验。</li>
</ul>
<h2 id="仿微信网页进度条实现方式swift4">仿微信网页进度条实现方式Swift4</h2>
<p>该实现依赖于对KVO有一定的了解，若不了解，可以参考另一篇：<a href="http://pkuflint.me/2018/understanding-kvo-in-swift/">理解KVO - 用Swift在WKWebView中添加进度条</a></p>
<p>首先，声明必要的变量。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">我</span><span class="c1">们</span><span class="c1">的</span><span class="c1">网</span><span class="c1">页</span><span class="c1">，</span><span class="c1">因</span><span class="c1">为</span><span class="c1">要</span><span class="c1">使</span><span class="c1">用</span><span class="c1">K</span><span class="c1">V</span><span class="c1">O</span><span class="c1">，</span><span class="c1">所</span><span class="c1">以</span><span class="c1">对</span><span class="c1">象</span><span class="c1">必</span><span class="c1">须</span><span class="c1">添</span><span class="c1">加</span><span class="c1">@</span><span class="c1">o</span><span class="c1">b</span><span class="c1">j</span><span class="c1">c</span>
<span class="kr">@objc</span> <span class="kd">var</span> <span class="nv">webView</span> <span class="p">=</span> <span class="n">WKWebView</span><span class="p">(</span><span class="p">)</span>
<span class="c1">//</span><span class="c1"> </span><span class="c1">我</span><span class="c1">们</span><span class="c1">要</span><span class="c1">监</span><span class="c1">听</span><span class="c1">的</span><span class="c1">另</span><span class="c1">一</span><span class="c1">个</span><span class="c1">对</span><span class="c1">象</span><span class="c1">，</span><span class="c1">即</span><span class="c1">网</span><span class="c1">页</span><span class="c1">加</span><span class="c1">载</span><span class="c1">时</span><span class="c1">间</span><span class="c1">，</span><span class="c1">同</span><span class="c1">样</span><span class="c1">因</span><span class="c1">为</span><span class="c1">要</span><span class="c1">使</span><span class="c1">用</span><span class="c1">K</span><span class="c1">V</span><span class="c1">O</span><span class="c1">，</span><span class="c1">属</span><span class="c1">性</span><span class="c1">要</span><span class="c1">添</span><span class="c1">加</span><span class="c1">@</span><span class="c1">o</span><span class="c1">b</span><span class="c1">j</span><span class="c1">c</span><span class="c1">和</span><span class="c1">d</span><span class="c1">y</span><span class="c1">n</span><span class="c1">a</span><span class="c1">m</span><span class="c1">i</span><span class="c1">c</span>
<span class="kr">@objc</span> <span class="kr">dynamic</span> <span class="kd">var</span> <span class="nv">loadTime</span><span class="p">:</span> <span class="nb">Double</span> <span class="p">=</span> <span class="mf">0.0</span>
<span class="c1">//</span><span class="c1"> </span><span class="c1">这</span><span class="c1">个</span><span class="c1">是</span><span class="c1">我</span><span class="c1">们</span><span class="c1">的</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span>
<span class="kd">var</span> <span class="nv">progressLayer</span><span class="p">:</span> <span class="n">CALayer</span><span class="p">!</span>
<span class="c1">//</span><span class="c1"> </span><span class="c1">统</span><span class="c1">计</span><span class="c1">页</span><span class="c1">面</span><span class="c1">加</span><span class="c1">载</span><span class="c1">时</span><span class="c1">间</span><span class="c1">的</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">r</span>
<span class="kd">var</span> <span class="nv">timer</span><span class="p">:</span> <span class="n">Timer</span><span class="p">?</span>

<span class="c1">//</span><span class="c1"> </span><span class="c1">这</span><span class="c1">是</span><span class="c1">用</span><span class="c1">于</span><span class="c1">监</span><span class="c1">听</span><span class="c1">w</span><span class="c1">e</span><span class="c1">b</span><span class="c1">V</span><span class="c1">i</span><span class="c1">e</span><span class="c1">w</span><span class="c1">.</span><span class="c1">e</span><span class="c1">s</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">a</span><span class="c1">t</span><span class="c1">e</span><span class="c1">d</span><span class="c1">P</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1">和</span><span class="c1">l</span><span class="c1">o</span><span class="c1">a</span><span class="c1">d</span><span class="c1">T</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">的</span><span class="c1">两</span><span class="c1">个</span><span class="c1">监</span><span class="c1">听</span><span class="c1">对</span><span class="c1">象</span>
<span class="kd">var</span> <span class="nv">progressObservation</span><span class="p">:</span> <span class="n">NSKeyValueObservation</span><span class="p">?</span>
<span class="kd">var</span> <span class="nv">loadTimeObservation</span><span class="p">:</span> <span class="n">NSKeyValueObservation</span><span class="p">?</span>
</code></pre></div><p>接着，创建进度条。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">setUpWebView</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">navigationDelegate</span> <span class="p">=</span> <span class="kc">self</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">autoresizingMask</span> <span class="p">=</span> <span class="p">[</span><span class="p">.</span><span class="n">flexibleWidth</span><span class="p">,</span> <span class="p">.</span><span class="n">flexibleHeight</span><span class="p">]</span>
    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">url</span> <span class="p">=</span> <span class="n">URL</span><span class="p">(</span><span class="n">string</span><span class="p">:</span> <span class="n">urlString</span><span class="p">!</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">url is nil</span><span class="s">&#34;</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">URLRequest</span><span class="p">(</span><span class="n">url</span><span class="p">:</span> <span class="n">url</span><span class="p">)</span><span class="p">)</span>

    <span class="kd">let</span> <span class="nv">progress</span> <span class="p">=</span> <span class="n">UIView</span><span class="p">(</span><span class="n">frame</span><span class="p">:</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span><span class="p">)</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">progress</span><span class="p">)</span>
    <span class="n">progressLayer</span> <span class="p">=</span> <span class="n">CALayer</span><span class="p">(</span><span class="p">)</span>
    <span class="n">progressLayer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="p">=</span> <span class="n">APPColor</span><span class="p">.</span><span class="n">orange</span><span class="p">.</span><span class="n">cgColor</span>
    <span class="n">progress</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">addSublayer</span><span class="p">(</span><span class="n">progressLayer</span><span class="p">!</span><span class="p">)</span>

    <span class="n">view</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">webView</span><span class="p">)</span>
    <span class="c1">//</span><span class="c1"> </span><span class="c1">设</span><span class="c1">置</span><span class="c1">初</span><span class="c1">始</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">位</span><span class="c1">置</span><span class="c1">为</span><span class="c1">1</span><span class="c1">0</span><span class="c1">%</span>
    <span class="n">progressLayer</span><span class="p">!</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="mf">0.1</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><p>声明遵循<code>WKNavigationDelegate </code>协议后，在协议方法中添加设置监听对象和包含对应处理方法的闭包。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">webView</span><span class="p">(</span><span class="kc">_</span> <span class="n">webView</span><span class="p">:</span> <span class="n">WKWebView</span><span class="p">,</span> <span class="n">decidePolicyFor</span> <span class="n">navigationAction</span><span class="p">:</span> <span class="n">WKNavigationAction</span><span class="p">,</span> <span class="n">decisionHandler</span><span class="p">:</span> <span class="p">@</span><span class="n">escaping</span> <span class="p">(</span><span class="n">WKNavigationActionPolicy</span><span class="p">)</span> <span class="p">-&gt;</span> <span class="nb">Void</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="n">navigationAction</span><span class="p">.</span><span class="n">navigationType</span> <span class="p">{</span>
    <span class="c1">//</span><span class="c1"> </span><span class="c1">o</span><span class="c1">t</span><span class="c1">h</span><span class="c1">e</span><span class="c1">r</span><span class="c1">类</span><span class="c1">型</span><span class="c1">，</span><span class="c1">直</span><span class="c1">接</span><span class="c1">从</span><span class="c1">外</span><span class="c1">部</span><span class="c1">赋</span><span class="c1">值</span><span class="c1">u</span><span class="c1">r</span><span class="c1">l</span><span class="c1">打</span><span class="c1">开</span><span class="c1">页</span><span class="c1">面</span><span class="c1">时</span><span class="c1">，</span><span class="c1">就</span><span class="c1">属</span><span class="c1">于</span><span class="c1">o</span><span class="c1">t</span><span class="c1">h</span><span class="c1">e</span><span class="c1">r</span>
    <span class="k">case</span> <span class="p">.</span><span class="n">other</span><span class="p">:</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">its an other situation</span><span class="s">&#34;</span><span class="p">)</span>
    <span class="k">case</span> <span class="p">.</span><span class="n">reload</span><span class="p">:</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">it&#39;s a reload situation</span><span class="s">&#34;</span><span class="p">)</span>
    <span class="k">case</span> <span class="p">.</span><span class="n">backForward</span><span class="p">:</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">its going back</span><span class="s">&#34;</span><span class="p">)</span>
    <span class="k">case</span> <span class="p">.</span><span class="n">formResubmitted</span><span class="p">:</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">resubmited</span><span class="s">&#34;</span><span class="p">)</span>
    <span class="k">case</span> <span class="p">.</span><span class="n">formSubmitted</span><span class="p">:</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">from submitted</span><span class="s">&#34;</span><span class="p">)</span>
    <span class="c1">//</span><span class="c1"> </span><span class="c1">点</span><span class="c1">击</span><span class="c1">当</span><span class="c1">前</span><span class="c1">页</span><span class="c1">面</span><span class="c1">连</span><span class="c1">接</span><span class="c1">打</span><span class="c1">开</span><span class="c1">新</span><span class="c1">连</span><span class="c1">接</span>
    <span class="k">case</span> <span class="p">.</span><span class="n">linkActivated</span><span class="p">:</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">link activited</span><span class="s">&#34;</span><span class="p">)</span>
    <span class="p">}</span>

    <span class="n">startProgress</span><span class="p">(</span><span class="p">)</span>	<span class="c1">//</span><span class="c1"> </span><span class="c1">设</span><span class="c1">置</span><span class="c1">p</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1">B</span><span class="c1">a</span><span class="c1">r</span><span class="c1">初</span><span class="c1">始</span><span class="c1">状</span><span class="c1">态</span><span class="c1">，</span><span class="c1">并</span><span class="c1">添</span><span class="c1">加</span><span class="c1">观</span><span class="c1">察</span><span class="c1">，</span><span class="c1">参</span><span class="c1">考</span><span class="c1">下</span><span class="c1">文</span>
    <span class="n">destroyTimer</span><span class="p">(</span><span class="p">)</span>	<span class="c1">//</span><span class="c1"> </span><span class="c1">保</span><span class="c1">险</span><span class="c1">起</span><span class="c1">见</span><span class="c1">，</span><span class="c1">再</span><span class="c1">摧</span><span class="c1">毁</span><span class="c1">一</span><span class="c1">次</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">r</span>
    <span class="n">startTimer</span><span class="p">(</span><span class="p">)</span>	<span class="c1">//</span><span class="c1"> </span><span class="c1">启</span><span class="c1">动</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">r</span><span class="c1">开</span><span class="c1">始</span><span class="c1">计</span><span class="c1">时</span>
	
    <span class="c1">//</span><span class="c1"> </span><span class="c1">是</span><span class="c1">否</span><span class="c1">允</span><span class="c1">许</span><span class="c1">访</span><span class="c1">问</span>
    <span class="n">decisionHandler</span><span class="p">(</span><span class="p">.</span><span class="n">allow</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">startTimer</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">//</span><span class="c1"> </span><span class="c1">设</span><span class="c1">置</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">r</span><span class="c1">为</span><span class="c1">每</span><span class="c1">0</span><span class="c1">.</span><span class="c1">1</span><span class="c1">秒</span><span class="c1">为</span><span class="c1">l</span><span class="c1">o</span><span class="c1">a</span><span class="c1">d</span><span class="c1">T</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">赋</span><span class="c1">值</span><span class="c1">，</span><span class="c1">这</span><span class="c1">样</span><span class="c1">可</span><span class="c1">以</span><span class="c1">大</span><span class="c1">约</span><span class="c1">0</span><span class="c1">.</span><span class="c1">1</span><span class="c1">秒</span><span class="c1">就</span><span class="c1">修</span><span class="c1">改</span><span class="c1">一</span><span class="c1">次</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">，</span><span class="c1">看</span><span class="c1">起</span><span class="c1">来</span><span class="c1">更</span><span class="c1">平</span><span class="c1">滑</span>
    <span class="n">timer</span> <span class="p">=</span> <span class="n">Timer</span><span class="p">.</span><span class="n">scheduledTimer</span><span class="p">(</span><span class="n">withTimeInterval</span><span class="p">:</span> <span class="mf">0.1</span><span class="p">,</span> <span class="n">repeats</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="n">block</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="n">timer</span><span class="p">)</span> <span class="k">in</span>
        <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
        <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">loadTime</span> <span class="o">+=</span> <span class="mf">0.1</span>
    <span class="p">}</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">destroyTimer</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">timer</span><span class="p">?</span><span class="p">.</span><span class="n">invalidate</span><span class="p">(</span><span class="p">)</span>
    <span class="n">loadTime</span> <span class="p">=</span> <span class="mf">0.0</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">startProgress</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">progressLayer</span><span class="p">.</span><span class="n">opacity</span> <span class="p">=</span> <span class="mi">1</span>
    <span class="n">progressLayer</span><span class="p">!</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="mf">0.1</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
    <span class="n">setupObservations</span><span class="p">(</span><span class="p">)</span>	<span class="c1">//</span><span class="c1"> </span><span class="c1">设</span><span class="c1">置</span><span class="c1">监</span><span class="c1">听</span>
<span class="p">}</span>

<span class="c1">//</span><span class="c1"> </span><span class="c1">设</span><span class="c1">置</span><span class="c1">监</span><span class="c1">听</span>
<span class="kd">func</span> <span class="nf">setupObservations</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">setupProgressObservation</span><span class="p">(</span><span class="p">)</span>
    <span class="n">setupLoadTimeObservation</span><span class="p">(</span><span class="p">)</span>
<span class="p">}</span>

<span class="c1">//</span><span class="c1"> </span><span class="c1">停</span><span class="c1">止</span><span class="c1">监</span><span class="c1">听</span>
<span class="kd">func</span> <span class="nf">stopObservations</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">progressObservation</span><span class="p">?</span><span class="p">.</span><span class="n">invalidate</span><span class="p">(</span><span class="p">)</span>
    <span class="n">loadTimeObservation</span><span class="p">?</span><span class="p">.</span><span class="n">invalidate</span><span class="p">(</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><p>下面是设置监听的具体方法，也是重头戏：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">监</span><span class="c1">听</span><span class="c1">w</span><span class="c1">e</span><span class="c1">b</span><span class="c1">V</span><span class="c1">i</span><span class="c1">e</span><span class="c1">w</span><span class="c1">.</span><span class="c1">e</span><span class="c1">s</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">a</span><span class="c1">t</span><span class="c1">e</span><span class="c1">d</span><span class="c1">P</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1">，</span><span class="c1">即</span><span class="c1">页</span><span class="c1">面</span><span class="c1">加</span><span class="c1">载</span><span class="c1">实</span><span class="c1">际</span><span class="c1">进</span><span class="c1">度</span>
<span class="kd">func</span> <span class="nf">setupProgressObservation</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">progressObservation</span> <span class="p">=</span> <span class="n">webView</span><span class="p">.</span><span class="n">observe</span><span class="p">(</span><span class="err">\</span><span class="p">.</span><span class="n">estimatedProgress</span><span class="p">,</span> <span class="n">options</span><span class="p">:</span> <span class="p">[</span><span class="p">.</span><span class="n">old</span><span class="p">,</span> <span class="p">.</span><span class="n">new</span><span class="p">]</span><span class="p">,</span> <span class="n">changeHandler</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="n">webView</span><span class="p">,</span> <span class="n">change</span><span class="p">)</span> <span class="k">in</span>
        <span class="kd">let</span> <span class="nv">newValue</span> <span class="p">=</span> <span class="n">change</span><span class="p">.</span><span class="n">newValue</span>  <span class="p">?</span><span class="p">?</span> <span class="mi">0</span>
        <span class="kd">let</span> <span class="nv">oldValue</span> <span class="p">=</span> <span class="n">change</span><span class="p">.</span><span class="n">oldValue</span>  <span class="p">?</span><span class="p">?</span> <span class="mi">0</span>

        <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
        <span class="c1">//</span><span class="c1"> </span><span class="c1"> </span><span class="c1">在</span><span class="c1">达</span><span class="c1">到</span><span class="c1">0</span><span class="c1">.</span><span class="c1">9</span><span class="c1">之</span><span class="c1">前</span><span class="c1">，</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">由</span><span class="c1">l</span><span class="c1">o</span><span class="c1">a</span><span class="c1">d</span><span class="c1">T</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">决</span><span class="c1">定</span><span class="c1">；</span><span class="c1">到</span><span class="c1">0</span><span class="c1">.</span><span class="c1">9</span><span class="c1">以</span><span class="c1">后</span><span class="c1">，</span><span class="c1">根</span><span class="c1">据</span><span class="c1">实</span><span class="c1">际</span><span class="c1">进</span><span class="c1">度</span><span class="c1">进</span><span class="c1">行</span><span class="c1">加</span><span class="c1">载</span>
        <span class="k">if</span> <span class="n">newValue</span> <span class="o">&gt;</span> <span class="n">oldValue</span> <span class="o">&amp;&amp;</span> <span class="n">newValue</span> <span class="o">&gt;</span> <span class="mf">0.9</span> <span class="p">{</span>
            <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="p">(</span><span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span><span class="p">)</span><span class="o">!</span> <span class="o">*</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">newValue</span><span class="p">)</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="n">newValue</span> <span class="p">=</span><span class="p">=</span> <span class="mf">1.0</span> <span class="p">{</span>
            <span class="c1">//</span><span class="c1"> </span><span class="c1">加</span><span class="c1">载</span><span class="c1">结</span><span class="c1">束</span><span class="c1">时</span><span class="c1">，</span><span class="c1">停</span><span class="c1">止</span><span class="c1">监</span><span class="c1">听</span><span class="c1">，</span><span class="c1">停</span><span class="c1">止</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">r</span>
            <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">stopObservations</span><span class="p">(</span><span class="p">)</span>
            <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">destroyTimer</span><span class="p">(</span><span class="p">)</span>

            <span class="c1">//</span><span class="c1"> </span><span class="c1">结</span><span class="c1">束</span><span class="c1">时</span><span class="c1">隐</span><span class="c1">藏</span><span class="c1">p</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1"> </span><span class="c1">b</span><span class="c1">a</span><span class="c1">r</span><span class="c1">并</span><span class="c1">回</span><span class="c1">到</span><span class="c1">初</span><span class="c1">始</span><span class="c1">位</span><span class="c1">置</span>
            <span class="kd">let</span> <span class="nv">time1</span> <span class="p">=</span> <span class="n">DispatchTime</span><span class="p">.</span><span class="n">now</span><span class="p">(</span><span class="p">)</span> <span class="o">+</span> <span class="mf">0.4</span>
            <span class="kd">let</span> <span class="nv">time2</span> <span class="p">=</span> <span class="n">time1</span> <span class="o">+</span> <span class="mf">0.1</span>
            <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">asyncAfter</span><span class="p">(</span><span class="n">deadline</span><span class="p">:</span> <span class="n">time1</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">opacity</span> <span class="p">=</span> <span class="mi">0</span>
            <span class="p">}</span>

            <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">asyncAfter</span><span class="p">(</span><span class="n">deadline</span><span class="p">:</span> <span class="n">time2</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span><span class="p">)</span>
<span class="p">}</span>

<span class="c1">//</span><span class="c1"> </span><span class="c1">监</span><span class="c1">听</span><span class="c1">l</span><span class="c1">o</span><span class="c1">a</span><span class="c1">d</span><span class="c1">T</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span>
<span class="kd">func</span> <span class="nf">setupLoadTimeObservation</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">loadTimeObservation</span> <span class="p">=</span> <span class="n">observe</span><span class="p">(</span><span class="err">\</span><span class="p">.</span><span class="n">loadTime</span><span class="p">,</span> <span class="n">changeHandler</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="kc">self</span><span class="p">,</span> <span class="n">changes</span><span class="p">)</span> <span class="k">in</span>
        <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
        <span class="c1">//</span><span class="c1"> </span><span class="c1">假</span><span class="c1">如</span><span class="c1">加</span><span class="c1">载</span><span class="c1">进</span><span class="c1">度</span><span class="c1">超</span><span class="c1">过</span><span class="c1">9</span><span class="c1">0</span><span class="c1">%</span><span class="c1">，</span><span class="c1">则</span><span class="c1">不</span><span class="c1">再</span><span class="c1">通</span><span class="c1">过</span><span class="c1">l</span><span class="c1">o</span><span class="c1">a</span><span class="c1">d</span><span class="c1">T</span><span class="c1">i</span><span class="c1">m</span><span class="c1">e</span><span class="c1">更</span><span class="c1">新</span>
        <span class="k">if</span> <span class="n">weakself</span><span class="p">!</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span> <span class="o">&gt;=</span> <span class="n">weakself</span><span class="p">!</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="mf">0.9</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>

        <span class="kd">var</span> <span class="nv">ratio</span> <span class="p">=</span> <span class="mf">0.0</span> <span class="c1">//</span><span class="c1"> </span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">的</span><span class="c1">进</span><span class="c1">度</span><span class="c1">比</span><span class="c1">例</span>
        <span class="k">guard</span> <span class="kd">let</span> <span class="nv">time</span> <span class="p">=</span> <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">loadTime</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
        <span class="k">if</span> <span class="n">time</span> <span class="o">&lt;=</span> <span class="mi">3</span> <span class="p">{</span>
            <span class="c1">//</span><span class="c1"> </span><span class="c1">前</span><span class="c1">3</span><span class="c1">秒</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">走</span><span class="c1">5</span><span class="c1">0</span><span class="c1">%</span><span class="c1">，</span><span class="c1">那</span><span class="c1">么</span><span class="c1">每</span><span class="c1">秒</span><span class="c1">是</span><span class="c1">走</span><span class="c1">0</span><span class="c1">.</span><span class="c1">5</span><span class="c1"> </span><span class="c1">/</span><span class="c1"> </span><span class="c1">3</span><span class="c1">；</span>
            <span class="c1">//</span><span class="c1"> </span><span class="c1">0</span><span class="c1">.</span><span class="c1">1</span><span class="c1">是</span><span class="c1">已</span><span class="c1">经</span><span class="c1">固</span><span class="c1">定</span><span class="c1">的</span><span class="c1">进</span><span class="c1">度</span><span class="c1">，</span><span class="c1">下</span><span class="c1">面</span><span class="c1">的</span><span class="c1">逻</span><span class="c1">辑</span><span class="c1">类</span><span class="c1">似</span>
            <span class="n">ratio</span> <span class="p">=</span> <span class="n">time</span> <span class="o">*</span> <span class="mf">0.5</span> <span class="o">/</span> <span class="mi">3</span> <span class="o">+</span> <span class="mf">0.1</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">time</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="o">&amp;&amp;</span> <span class="n">time</span> <span class="o">&lt;=</span> <span class="mi">7</span> <span class="p">{</span>
            <span class="n">ratio</span> <span class="p">=</span> <span class="p">(</span><span class="n">time</span> <span class="o">-</span> <span class="mi">3</span><span class="p">)</span> <span class="o">*</span> <span class="mf">0.2</span> <span class="o">/</span> <span class="mi">4</span> <span class="o">+</span> <span class="mf">0.6</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">time</span> <span class="o">&gt;</span> <span class="mi">7</span> <span class="o">&amp;&amp;</span> <span class="n">time</span> <span class="o">&lt;=</span> <span class="mi">15</span> <span class="p">{</span>
            <span class="n">ratio</span> <span class="p">=</span> <span class="p">(</span><span class="n">time</span> <span class="o">-</span> <span class="mi">7</span><span class="p">)</span> <span class="o">*</span> <span class="mf">0.1</span> <span class="o">/</span> <span class="mi">8</span> <span class="o">+</span> <span class="mf">0.8</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">time</span> <span class="o">&gt;</span> <span class="mi">15</span> <span class="o">&amp;&amp;</span> <span class="n">time</span> <span class="o">&lt;</span>  <span class="mi">25</span> <span class="p">{</span>
            <span class="n">ratio</span> <span class="p">=</span> <span class="mf">0.9</span>
        <span class="p">}</span>

        <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="n">weakself</span><span class="p">!</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">ratio</span><span class="p">)</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
    <span class="p">}</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><p>这样，进度条的全部实现已经完成。</p>
<p>如果对KVO有不理解，可以参考我的另一篇使用KVO的例子：<a href="http://pkuflint.me/2018/understanding-kvo-in-swift/">理解KVO - 用Swift在WKWebView中添加进度条</a>。在这篇文章中，我用于实现进度条的逻辑正是像Safari那样的真实进度。</p>
<blockquote>
<p>本人初学，有错误或疏漏之处，欢迎斧正！</p>
</blockquote>
<p>参考文档：</p>
<ul>
<li><a href="https://www.jianshu.com/p/24b3e3ddc946">https://www.jianshu.com/p/24b3e3ddc946</a></li>
</ul>]]></content>
		</item>
		
		<item>
			<title>理解KVO - 用Swift在WKWebView中添加进度条</title>
			<link>https://shenxiaobing.com/posts/2019/understanding-kvo-in-swift/</link>
			<pubDate>Thu, 28 Jun 2018 05:40:11 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/understanding-kvo-in-swift/</guid>
			<description>&lt;p&gt;KVO，即Key-value observation，是苹果提供的一种机制，它可以使监听对象在被监听对象的数值发生改变时收到通知，进而去进行响应的处理。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>KVO，即Key-value observation，是苹果提供的一种机制，它可以使监听对象在被监听对象的数值发生改变时收到通知，进而去进行响应的处理。</p>
<p>KVO实现起来比较简单，主要的流程只有3个：</p>
<ol>
<li>添加观察者</li>
<li>在监听方法中处理监听结果</li>
<li>监听结束后移除观察者</li>
</ol>
<p>下面我们用一个实际的例子来说明一下这3个步骤。在App里使用<code>WKWebView</code>来加载网页时，我们希望实现一个在页面顶部的进度条，来表示网页加载的进度。而恰好<code>WKWebView</code>的实例有一个<code>estimatedProgress</code>属性，我们可以在此基础上使用KVO来实现。</p>
<h2 id="添加观察者">添加观察者</h2>
<p>第一步，是要正确地声明变量。因为KVO是在Objective-C中提供的，要在Swift中使用，被观察的属性必须添加<code>@objc</code>和<code>dynamic</code>关键词，来确保可以正确地被观察到。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">声</span><span class="c1">明</span><span class="c1">属</span><span class="c1">性</span><span class="c1">，</span><span class="c1">我</span><span class="c1">们</span><span class="c1">的</span><span class="c1">网</span><span class="c1">页</span><span class="c1">视</span><span class="c1">图</span>
<span class="kr">@objc</span> <span class="kd">var</span> <span class="nv">webview</span><span class="p">:</span> <span class="n">WKWebView</span><span class="p">!</span>

<span class="c1">//</span><span class="c1"> </span><span class="c1">创</span><span class="c1">建</span><span class="c1">私</span><span class="c1">有</span><span class="c1">变</span><span class="c1">量</span><span class="c1">，</span><span class="c1">用</span><span class="c1">于</span><span class="c1">添</span><span class="c1">加</span><span class="c1">观</span><span class="c1">察</span><span class="c1">者</span><span class="c1">时</span><span class="c1">创</span><span class="c1">建</span><span class="c1">c</span><span class="c1">o</span><span class="c1">n</span><span class="c1">t</span><span class="c1">e</span><span class="c1">x</span><span class="c1">t</span><span class="c1">参</span><span class="c1">数</span>
<span class="kd">private</span> <span class="kd">var</span> <span class="nv">progressContext</span> <span class="p">=</span> <span class="mi">0</span>
</code></pre></div><p>第二步，就是在适合的位置添加观察者。一般来说在<code>viewDidLoad</code>中添加就可以。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">订</span><span class="c1">阅</span><span class="c1">观</span><span class="c1">察</span><span class="c1">w</span><span class="c1">e</span><span class="c1">b</span><span class="c1">V</span><span class="c1">i</span><span class="c1">e</span><span class="c1">w</span><span class="c1">.</span><span class="c1">e</span><span class="c1">s</span><span class="c1">t</span><span class="c1">i</span><span class="c1">m</span><span class="c1">a</span><span class="c1">t</span><span class="c1">e</span><span class="c1">d</span><span class="c1">P</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1">属</span><span class="c1">性</span>
<span class="n">webView</span><span class="p">.</span><span class="n">addObserver</span><span class="p">(</span><span class="kc">self</span><span class="p">,</span> <span class="n">forKeyPath</span><span class="p">:</span> <span class="p">#</span><span class="n">keyPath</span><span class="p">(</span><span class="n">estimatedProgress</span><span class="p">)</span><span class="p">,</span> <span class="n">options</span><span class="p">:</span> <span class="p">[</span><span class="p">.</span><span class="n">new</span><span class="p">,</span> <span class="p">.</span><span class="n">old</span><span class="p">]</span><span class="p">,</span> <span class="n">context</span><span class="p">:</span> <span class="p">&amp;</span><span class="n">progressContext</span><span class="p">)</span>
</code></pre></div><p>对于方法<code>func addObserver(_ observer: NSObject, forKeyPath keyPath: String, options: NSKeyValueObservingOptions = [], context: UnsafeMutableRawPointer?)</code>简单介绍下其参数：</p>
<ul>
<li>
<p>方法消息接受者，就是被监听的对象。不过就上面的代码而言，<code>webView</code>同样也是<code>self</code>当前controller的属性，所以这条消息也可以发送给<code>self</code>，但是<code>keyPath</code>就要相应地修改为<code>keyPath(webView.estimatedProgress)</code>。</p>
</li>
<li>
<p>观察者，即订阅观察的对象，在被观察者数值变化时收到通知。一般来说，就是当前的controller。</p>
</li>
<li>
<p>keyPath，即相对于接受者对象，需要观察的属性。可以直接用明确的字符串<code>&quot;estimatedProgress&quot;</code>来替代<code>#keyPath(estimatedProgress)</code>，但那样直接操作字符串出现打错，还是用#keyPath构造比较简单。</p>
</li>
<li>
<p>options，这里是接收对象时，选择接收的累类型。总共有4种，需要接受就添加其enum值进入数组参数传入：</p>
<ul>
<li><code>.new</code>，接收到变化后的新数值。</li>
<li><code>.old</code>，接收到变化前的老数值。</li>
<li><code>initial</code>，即要求立刻返回通知给观察者，在注册观察者方法返回之前。</li>
<li><code>.prior</code>，即是否需要在数值变化前和变化后各发送一条通知，而不是默认的只在变化后发送通知。</li>
</ul>
</li>
<li>
<p>context，这里的环境变量，一般用于在不同的观察者在观察相同的<code>keyPath</code>时用于区分。上面的添加观察者代码中，我其实没必要传入<code>context</code>，只是为了演示如何创建与传入<code>context</code>。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">首</span><span class="c1">先</span><span class="c1">是</span><span class="c1">声</span><span class="c1">明</span><span class="c1">私</span><span class="c1">有</span><span class="c1">变</span><span class="c1">量</span>
<span class="kd">private</span> <span class="kd">var</span> <span class="nv">myContext</span> <span class="p">=</span> <span class="mi">0</span>
  
<span class="c1">//</span><span class="c1"> </span><span class="c1">然</span><span class="c1">后</span><span class="c1">直</span><span class="c1">接</span><span class="c1">使</span><span class="c1">用</span><span class="c1">`</span><span class="c1">&amp;</span><span class="c1">m</span><span class="c1">y</span><span class="c1">C</span><span class="c1">o</span><span class="c1">n</span><span class="c1">t</span><span class="c1">e</span><span class="c1">x</span><span class="c1">t</span><span class="c1">`</span><span class="c1">作</span><span class="c1">为</span><span class="c1">`</span><span class="c1">c</span><span class="c1">o</span><span class="c1">n</span><span class="c1">t</span><span class="c1">e</span><span class="c1">x</span><span class="c1">t</span><span class="c1">`</span><span class="c1">参</span><span class="c1">数</span><span class="c1">传</span><span class="c1">入</span><span class="c1">。</span>
</code></pre></div></li>
</ul>
<h2 id="接收被观察者通知并响应处理">接收被观察者通知并响应处理</h2>
<p>我们的目的是实现进度条，因此需要先添加一条进度条。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">setUpWebView</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">view</span><span class="p">.</span><span class="n">bounds</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">navigationDelegate</span> <span class="p">=</span> <span class="kc">self</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">autoresizingMask</span> <span class="p">=</span> <span class="p">[</span><span class="p">.</span><span class="n">flexibleWidth</span><span class="p">,</span> <span class="p">.</span><span class="n">flexibleHeight</span><span class="p">]</span>
    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">url</span> <span class="p">=</span> <span class="n">URL</span><span class="p">(</span><span class="n">string</span><span class="p">:</span> <span class="n">urlString</span><span class="p">!</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">url is nil</span><span class="s">&#34;</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">URLRequest</span><span class="p">(</span><span class="n">url</span><span class="p">:</span> <span class="n">url</span><span class="p">)</span><span class="p">)</span>

    <span class="c1">//</span><span class="c1"> </span><span class="c1">创</span><span class="c1">建</span><span class="c1">名</span><span class="c1">为</span><span class="c1">p</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1">的</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span>
    <span class="kd">let</span> <span class="nv">progress</span> <span class="p">=</span> <span class="n">UIView</span><span class="p">(</span><span class="n">frame</span><span class="p">:</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span><span class="p">)</span>
    <span class="n">webView</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">progress</span><span class="p">)</span>
    <span class="c1">//</span><span class="c1"> </span><span class="c1">之</span><span class="c1">前</span><span class="c1">已</span><span class="c1">经</span><span class="c1">提</span><span class="c1">前</span><span class="c1">声</span><span class="c1">明</span><span class="c1">了</span><span class="c1">p</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1">L</span><span class="c1">a</span><span class="c1">y</span><span class="c1">e</span><span class="c1">r</span><span class="c1">作</span><span class="c1">为</span><span class="c1">实</span><span class="c1">例</span><span class="c1">变</span><span class="c1">量</span><span class="c1">，</span><span class="c1">方</span><span class="c1">便</span><span class="c1">作</span><span class="c1">为</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">修</span><span class="c1">改</span>
    <span class="n">progressLayer</span> <span class="p">=</span> <span class="n">CALayer</span><span class="p">(</span><span class="p">)</span>
    <span class="n">progressLayer</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="p">=</span> <span class="n">APPColor</span><span class="p">.</span><span class="n">orange</span><span class="p">.</span><span class="n">cgColor</span>
    <span class="n">progress</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">addSublayer</span><span class="p">(</span><span class="n">progressLayer</span><span class="p">!</span><span class="p">)</span>

    <span class="n">view</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">webView</span><span class="p">)</span>
    
    <span class="c1">//</span><span class="c1"> </span><span class="c1">设</span><span class="c1">置</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">进</span><span class="c1">度</span><span class="c1">的</span><span class="c1">方</span><span class="c1">法</span><span class="c1">，</span><span class="c1">这</span><span class="c1">里</span><span class="c1">直</span><span class="c1">接</span><span class="c1">在</span><span class="c1">打</span><span class="c1">开</span><span class="c1">网</span><span class="c1">页</span><span class="c1">时</span><span class="c1">，</span><span class="c1">设</span><span class="c1">置</span><span class="c1">1</span><span class="c1">0</span><span class="c1">%</span><span class="c1">的</span><span class="c1">加</span><span class="c1">载</span><span class="c1">进</span><span class="c1">度</span><span class="c1">，</span><span class="c1">让</span><span class="c1">页</span><span class="c1">面</span><span class="c1">加</span><span class="c1">载</span><span class="c1">看</span><span class="c1">起</span><span class="c1">来</span><span class="c1">更</span><span class="c1">快</span>
    <span class="n">progressLayer</span><span class="p">!</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="mf">0.1</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><p>进度条配置好了，下面就可以设置监听方法，来处理进度条了。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kr">override</span> <span class="kd">func</span> <span class="nf">observeValue</span><span class="p">(</span><span class="n">forKeyPath</span> <span class="n">keyPath</span><span class="p">:</span> <span class="nb">String</span><span class="p">?</span><span class="p">,</span> <span class="n">of</span> <span class="n">object</span><span class="p">:</span> <span class="nb">Any</span><span class="p">?</span><span class="p">,</span> <span class="n">change</span><span class="p">:</span> <span class="p">[</span><span class="n">NSKeyValueChangeKey</span> <span class="p">:</span> <span class="nb">Any</span><span class="p">]</span><span class="p">?</span><span class="p">,</span> <span class="n">context</span><span class="p">:</span> <span class="n">UnsafeMutableRawPointer</span><span class="p">?</span><span class="p">)</span> <span class="p">{</span>
<span class="k">if</span> <span class="n">keyPath</span> <span class="p">=</span><span class="p">=</span> <span class="p">#</span><span class="n">keyPath</span><span class="p">(</span><span class="n">webView</span><span class="p">.</span><span class="n">estimatedProgress</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">context</span> <span class="p">=</span><span class="p">=</span> <span class="p">&amp;</span><span class="n">progressContext</span> <span class="p">{</span>
    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">changes</span> <span class="p">=</span> <span class="n">change</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
    <span class="c1">//</span><span class="c1">	</span><span class="c1">请</span><span class="c1">注</span><span class="c1">意</span><span class="c1">这</span><span class="c1">里</span><span class="c1">读</span><span class="c1">取</span><span class="c1">o</span><span class="c1">p</span><span class="c1">t</span><span class="c1">i</span><span class="c1">o</span><span class="c1">n</span><span class="c1">s</span><span class="c1">中</span><span class="c1">数</span><span class="c1">值</span><span class="c1">的</span><span class="c1">方</span><span class="c1">法</span>
    <span class="kd">let</span> <span class="nv">newValue</span> <span class="p">=</span> <span class="n">changes</span><span class="p">[</span><span class="n">NSKeyValueChangeKey</span><span class="p">.</span><span class="n">newKey</span><span class="p">]</span> <span class="k">as</span><span class="p">?</span> <span class="nb">Double</span> <span class="p">?</span><span class="p">?</span> <span class="mi">0</span>
    <span class="kd">let</span> <span class="nv">oldValue</span> <span class="p">=</span> <span class="n">changes</span><span class="p">[</span><span class="n">NSKeyValueChangeKey</span><span class="p">.</span><span class="n">oldKey</span><span class="p">]</span> <span class="k">as</span><span class="p">?</span> <span class="nb">Double</span> <span class="p">?</span><span class="p">?</span> <span class="mi">0</span>

    <span class="c1">//</span><span class="c1"> </span><span class="c1">因</span><span class="c1">为</span><span class="c1">我</span><span class="c1">们</span><span class="c1">已</span><span class="c1">经</span><span class="c1">设</span><span class="c1">置</span><span class="c1">了</span><span class="c1">进</span><span class="c1">度</span><span class="c1">条</span><span class="c1">为</span><span class="c1">0</span><span class="c1">.</span><span class="c1">1</span><span class="c1">，</span><span class="c1">所</span><span class="c1">以</span><span class="c1">只</span><span class="c1">有</span><span class="c1">在</span><span class="c1">进</span><span class="c1">度</span><span class="c1">大</span><span class="c1">于</span><span class="c1">0</span><span class="c1">.</span><span class="c1">1</span><span class="c1">后</span><span class="c1">再</span><span class="c1">进</span><span class="c1">行</span><span class="c1">变</span><span class="c1">化</span>
    <span class="k">if</span> <span class="n">newValue</span> <span class="o">&gt;</span> <span class="n">oldValue</span> <span class="o">&amp;&amp;</span> <span class="n">newValue</span> <span class="o">&gt;</span> <span class="mf">0.1</span> <span class="p">{</span>
        <span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">newValue</span><span class="p">)</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="c1">//</span><span class="c1"> </span><span class="c1">当</span><span class="c1">进</span><span class="c1">度</span><span class="c1">为</span><span class="c1">1</span><span class="c1">0</span><span class="c1">0</span><span class="c1">%</span><span class="c1">时</span><span class="c1">，</span><span class="c1">隐</span><span class="c1">藏</span><span class="c1">p</span><span class="c1">r</span><span class="c1">o</span><span class="c1">g</span><span class="c1">r</span><span class="c1">e</span><span class="c1">s</span><span class="c1">s</span><span class="c1">L</span><span class="c1">a</span><span class="c1">y</span><span class="c1">e</span><span class="c1">r</span><span class="c1">并</span><span class="c1">将</span><span class="c1">其</span><span class="c1">初</span><span class="c1">始</span><span class="c1">值</span><span class="c1">改</span><span class="c1">为</span><span class="c1">0</span>
    <span class="k">if</span> <span class="n">newValue</span> <span class="p">=</span><span class="p">=</span> <span class="mf">1.0</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nv">time1</span> <span class="p">=</span> <span class="n">DispatchTime</span><span class="p">.</span><span class="n">now</span><span class="p">(</span><span class="p">)</span> <span class="o">+</span> <span class="mf">0.4</span>
        <span class="kd">let</span> <span class="nv">time2</span> <span class="p">=</span> <span class="n">time1</span> <span class="o">+</span> <span class="mf">0.1</span>
        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">asyncAfter</span><span class="p">(</span><span class="n">deadline</span><span class="p">:</span> <span class="n">time1</span><span class="p">)</span> <span class="p">{</span>
            <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
            <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">opacity</span> <span class="p">=</span> <span class="mi">0</span>
        <span class="p">}</span>
        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">asyncAfter</span><span class="p">(</span><span class="n">deadline</span><span class="p">:</span> <span class="n">time2</span><span class="p">)</span> <span class="p">{</span>
            <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
            <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span> 
</code></pre></div><h2 id="移除观察者">移除观察者</h2>
<p>在不需要监听时，或者至少在<code>观察者</code>要被释放之前，需要移除观察者身份。</p>
<p>在<code>viewDidDisappear</code>或者其他适当的位置，调用：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="n">removeObserver</span><span class="p">(</span><span class="kc">self</span><span class="p">,</span> <span class="n">forKeyPath</span><span class="p">:</span> <span class="p">#</span><span class="n">keyPath</span><span class="p">(</span><span class="n">webView</span><span class="p">.</span><span class="n">estimatedProgress</span><span class="p">)</span><span class="p">)</span>
</code></pre></div><p>这样利用KVO实现加载进度条的目的已经达成了。</p>
<h2 id="更swifty的实现方式block-based-kvo">更Swifty的实现方式：Block-based KVO</h2>
<p>在Swift4里，官方推荐了另外Key-value Oberservation的实现方式。简单来说，就是创建一个变量observation、给obervation赋值。赋值实现了既添加观察者又实现响应通知的功能。最后在不需要观察时，直接把observation设置为<code>nil</code>即可。</p>
<p>针对上面的进度加载条，实现代码如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">声</span><span class="c1">明</span><span class="c1">变</span><span class="c1">量</span><span class="c1">，</span><span class="c1">被</span><span class="c1">观</span><span class="c1">察</span><span class="c1">的</span><span class="c1">属</span><span class="c1">性</span><span class="c1">依</span><span class="c1">然</span><span class="c1">还</span><span class="c1">需</span><span class="c1">要</span><span class="c1">添</span><span class="c1">加</span><span class="c1">@</span><span class="c1">o</span><span class="c1">b</span><span class="c1">j</span><span class="c1">c</span><span class="c1">和</span><span class="c1">d</span><span class="c1">y</span><span class="c1">n</span><span class="c1">a</span><span class="c1">m</span><span class="c1">i</span><span class="c1">c</span>
<span class="kr">@objc</span> <span class="kd">var</span> <span class="nv">webView</span> <span class="p">=</span> <span class="n">WKWebView</span><span class="p">(</span><span class="p">)</span>
<span class="kd">var</span> <span class="nv">progressLayer</span><span class="p">:</span> <span class="n">CALayer</span><span class="p">!</span>
<span class="kd">var</span> <span class="nv">progressObervation</span><span class="p">:</span> <span class="n">NSKeyValueObservation</span><span class="p">?</span>

<span class="c1">//</span><span class="c1"> </span><span class="c1">设</span><span class="c1">置</span><span class="c1">观</span><span class="c1">察</span>
<span class="kd">func</span> <span class="nf">setupObserver</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">//</span><span class="c1"> </span><span class="c1">请</span><span class="c1">务</span><span class="c1">必</span><span class="c1">注</span><span class="c1">意</span><span class="c1">方</span><span class="c1">法</span><span class="c1">的</span><span class="c1">写</span><span class="c1">法</span>
    <span class="n">progressObservation</span> <span class="p">=</span> <span class="n">observe</span><span class="p">(</span><span class="err">\</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="n">estimatedProgress</span><span class="p">,</span> <span class="n">options</span><span class="p">:</span> <span class="p">[</span><span class="p">.</span><span class="n">old</span><span class="p">,</span> <span class="p">.</span><span class="n">new</span><span class="p">]</span><span class="p">,</span> <span class="n">changeHandler</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="kc">self</span><span class="p">,</span> <span class="n">change</span><span class="p">)</span> <span class="k">in</span>
        <span class="kd">let</span> <span class="nv">newValue</span> <span class="p">=</span> <span class="n">change</span><span class="p">.</span><span class="n">newValue</span>  <span class="p">?</span><span class="p">?</span> <span class="mi">0</span>
        <span class="kd">let</span> <span class="nv">oldValue</span> <span class="p">=</span> <span class="n">change</span><span class="p">.</span><span class="n">oldValue</span>  <span class="p">?</span><span class="p">?</span> <span class="mi">0</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">new value is </span><span class="si">\(</span><span class="n">newValue</span><span class="si">)</span><span class="s">&#34;</span><span class="p">)</span>
        <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">new value is </span><span class="si">\(</span><span class="n">oldValue</span><span class="si">)</span><span class="s">&#34;</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">newValue</span> <span class="o">&gt;</span> <span class="n">oldValue</span> <span class="o">&amp;&amp;</span> <span class="n">newValue</span> <span class="o">&gt;</span> <span class="mf">0.1</span> <span class="p">{</span>
            <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">time to reset new value</span><span class="s">&#34;</span><span class="p">)</span>
            <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
            <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="p">(</span><span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span><span class="p">)</span><span class="o">!</span> <span class="o">*</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">newValue</span><span class="p">)</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="n">newValue</span> <span class="p">=</span><span class="p">=</span> <span class="mf">1.0</span> <span class="p">{</span>
            <span class="kd">let</span> <span class="nv">time1</span> <span class="p">=</span> <span class="n">DispatchTime</span><span class="p">.</span><span class="n">now</span><span class="p">(</span><span class="p">)</span> <span class="o">+</span> <span class="mf">0.4</span>
            <span class="kd">let</span> <span class="nv">time2</span> <span class="p">=</span> <span class="n">time1</span> <span class="o">+</span> <span class="mf">0.1</span>
            <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">asyncAfter</span><span class="p">(</span><span class="n">deadline</span><span class="p">:</span> <span class="n">time1</span><span class="p">)</span> <span class="p">{</span>
                <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
                <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">opacity</span> <span class="p">=</span> <span class="mi">0</span>
            <span class="p">}</span>

            <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">asyncAfter</span><span class="p">(</span><span class="n">deadline</span><span class="p">:</span> <span class="n">time2</span><span class="p">)</span> <span class="p">{</span>
                <span class="kr">weak</span> <span class="kd">var</span> <span class="nv">weakself</span> <span class="p">=</span> <span class="kc">self</span>
                <span class="n">weakself</span><span class="p">?</span><span class="p">.</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">frame</span> <span class="p">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="n">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">destroyObserver</span><span class="p">(</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">progressObservation</span> <span class="p">=</span> <span class="kc">nil</span>
    
    <span class="n">progressObserver</span><span class="p">?</span><span class="p">.</span><span class="n">invalidate</span><span class="p">(</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><p>这样看来是不是很简单？而且一个NSKeyValueObservation对象只负责观察一个<code>keyPath</code>，非常清晰。同时只用一行代码和闭包，更简洁。</p>
<p>这里介绍下给observation赋值的方法参数。</p>
<ul>
<li>
<p>receiver，即方法的接受者。上面的方法可以改成：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="n">progressObserver</span> <span class="p">=</span> <span class="n">webView</span><span class="p">.</span><span class="n">observe</span><span class="p">(</span><span class="err">\</span><span class="p">.</span><span class="n">estimatedProgress</span><span class="p">,</span> <span class="n">options</span><span class="p">:</span> <span class="p">[</span><span class="p">.</span><span class="n">old</span><span class="p">,</span> <span class="p">.</span><span class="n">new</span><span class="p">]</span><span class="p">,</span> <span class="n">changeHandler</span><span class="p">:</span> <span class="p">{</span> <span class="p">(</span><span class="n">webView</span><span class="p">,</span> <span class="n">change</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">//</span><span class="c1"> </span><span class="c1">c</span><span class="c1">o</span><span class="c1">d</span><span class="c1">e</span>
<span class="p">}</span>
</code></pre></div></li>
<li>
<p>keyPath，这里的<code>keyPath</code>与上文中的<code>keyPath</code>接收的参数类型不同。这里是<code>KeyPath</code>类型，而上面<code>addObserver</code>方法中的<code>keyPath</code>是字符串。写法是<code>\.property</code>，这里的<code>property</code>是相对于<code>receiver</code>的，所以当<code>receiver</code>是controller时，<code>keyPath</code>就是<code>\.webView.estimatedProgress</code>；而当<code>receiver</code>是<code>webView</code>时，keyPath则是<code>\.estimatedProgress</code>。</p>
</li>
<li>
<p>options，与上文一样，传入可选的<code>.new, .old, .initial, .prior</code>。可不传入options，这样的话，不能从闭包中接收到的<code>change</code>里的<code>newValue</code>和<code>oldValue</code>都是0。</p>
</li>
<li>
<p>closure，闭包接收2个参数，即<code>receiver</code>和作为<code>NSKeyValueObservedChange</code>类型的<code>change</code>。从change可以读取其<code>newValue</code>和<code>oldValue</code>。</p>
</li>
</ul>
<p>最后关于停止监听，有两个办法可选：</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">销</span><span class="c1">毁</span>
<span class="n">progressObserver</span> <span class="p">=</span> <span class="kc">nil</span>

<span class="c1">//</span><span class="c1"> </span><span class="c1">不</span><span class="c1">销</span><span class="c1">毁</span><span class="c1">，</span><span class="c1">仅</span><span class="c1">仅</span><span class="c1">停</span><span class="c1">止</span><span class="c1">监</span><span class="c1">听</span>
<span class="n">progressObserver</span><span class="p">?</span><span class="p">.</span><span class="n">invalidate</span><span class="p">(</span><span class="p">)</span>
</code></pre></div><p>如果不需要停止，可以不用处理，也不用刻意去移除监听，<code>controller</code>作为<code>observation</code>的<code>owner</code>会自动处理。</p>
<blockquote>
<p>本人初学，有错误或疏漏之处，欢迎斧正！</p>
</blockquote>
<p>参考文档：</p>
<ul>
<li><a href="http://swifter.tips/kvo/">http://swifter.tips/kvo/</a></li>
<li><a href="https://cocoacasts.com/key-value-observing-kvo-and-swift-3">https://cocoacasts.com/key-value-observing-kvo-and-swift-3</a></li>
<li><a href="https://www.jianshu.com/p/24b3e3ddc946">https://www.jianshu.com/p/24b3e3ddc946</a></li>
<li><a href="https://developer.apple.com/documentation/swift/cocoa_design_patterns/using_key_value_observing_in_swift">Using Key-Value Observing in Swift | Apple Developer Documentation</a></li>
<li><a href="https://nshipster.com/key-value-observing/">https://nshipster.com/key-value-observing/</a></li>
</ul>]]></content>
		</item>
		
		<item>
			<title>苹果内购接入的坑与核心流程 - Swift</title>
			<link>https://shenxiaobing.com/posts/2019/swift-iap-pitfalls/</link>
			<pubDate>Wed, 27 Jun 2018 19:56:09 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/swift-iap-pitfalls/</guid>
			<description>&lt;p&gt;通过苹果开发文档、搜索与挣扎摸索，我已经在App上实现了【消耗型商品】的内购。总结流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完成必须的准备工作&lt;/li&gt;
&lt;li&gt;用有效的商品id创建&lt;code&gt;SKProductRequest&lt;/code&gt;请求苹果服务器返回商品（&lt;code&gt;SKProduct&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;用返回的有效的商品创建payment，并将payment加入苹果的支付队列。&lt;/li&gt;
&lt;li&gt;监听队列，并根据监听到的交易状态进行适当的处理，尤其需要在交易完毕时关闭交易。&lt;/li&gt;
&lt;/ol&gt;</description>
			<content type="html"><![CDATA[<p>通过苹果开发文档、搜索与挣扎摸索，我已经在App上实现了【消耗型商品】的内购。总结流程如下：</p>
<ol>
<li>完成必须的准备工作</li>
<li>用有效的商品id创建<code>SKProductRequest</code>请求苹果服务器返回商品（<code>SKProduct</code>）。</li>
<li>用返回的有效的商品创建payment，并将payment加入苹果的支付队列。</li>
<li>监听队列，并根据监听到的交易状态进行适当的处理，尤其需要在交易完毕时关闭交易。</li>
</ol>
<p>这方面的文档，我觉得苹果官方的Programming Guide就写的很好。可以仔细读一下。</p>
<h2 id="我实际遇到的坑">我实际遇到的坑</h2>
<ol>
<li>
<p>必须先签署协议才能进行内购开发，否则无法返回商品。</p>
</li>
<li>
<p>创建沙箱测试员时，密码必须是强密码，即同时包含大写字母、小写字母和数字。否则，会报错：Unknown Errors while creating Sandbox Tester, Please check Error Log, email=xxx。</p>
</li>
<li>
<p>请求商品的<code>SKProductRequest</code>实例的<code>delegate</code>必须在离开页面时<code>viewDidDisappear</code>设置为<code>nil</code>，因为即使你已经离开了页面，苹果依然会尝试向<code>SKProductRequest</code>的代理发送消息，然后App就崩溃了。</p>
</li>
<li>
<p>必须在<code>AppDelegate</code>中声明遵守<code>SKPaymentTransactionObserver</code>协议、实现协议方法<code>updatedTransactions</code>、并在<code>didFinishLaunching</code>方法中加入如下代码<code>SKPaymentQueue.default().add(self)</code>。</p>
<p>这一行代码是将AppDelegate作为内购队列的监听者。这样，即使你离开了内购页面、即使上次支付未完成等情况，都能够在这里得到及时的处理。</p>
<p>如果不在这里这么做，可能的报错有：
<code>This In-App purchase has already been bought. It will be restored for free.</code></p>
<p>如果需要在内购页面上实现交互，可以也在内购界面上添加监听，并进行交互上面适当的处理。但无路如何，不能省掉<code>AppDelegate</code>中的那部分。</p>
</li>
</ol>
<h2 id="内购接入核心流程">内购接入核心流程</h2>
<p>以下是我实际接入中使用的代码。</p>
<!-- raw HTML omitted -->
<h3 id="请求商品">请求商品</h3>
<p>商品是由苹果服务器返回的，请求有三个步骤：获取商品id字符串、发起请求、代理协议中处理结果。</p>
<h4 id="获取商品id">获取商品id</h4>
<p>获取商品id，这个可以请求服务器，也可以保存在App上。我的App是用的后者。</p>
<p>首先创建一个名为<code>ProductID</code>的<code>plist</code>文件。文件内容是一个<code>Array</code>，里面是保存的商品id字符串。</p>
<blockquote>
<p>这里需要说明的是，商品id，即product identifier，就是你在iTunes Connect 内购列表页面上看到的商品id，不需要再拼接包名bundle identifier。</p>
</blockquote>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//</span><span class="c1"> </span><span class="c1">G</span><span class="c1">e</span><span class="c1">t</span><span class="c1"> </span><span class="c1">p</span><span class="c1">r</span><span class="c1">o</span><span class="c1">d</span><span class="c1">u</span><span class="c1">c</span><span class="c1">t</span><span class="c1"> </span><span class="c1">i</span><span class="c1">d</span><span class="c1"> </span><span class="c1">f</span><span class="c1">r</span><span class="c1">o</span><span class="c1">m</span><span class="c1"> </span><span class="c1">p</span><span class="c1">l</span><span class="c1">i</span><span class="c1">s</span><span class="c1">t</span><span class="c1">.</span>
<span class="kd">func</span> <span class="nf">predefinedProductIdentifiers</span><span class="p">(</span><span class="p">)</span> <span class="p">-&gt;</span> <span class="p">[</span><span class="nb">String</span><span class="p">]</span><span class="p">?</span> <span class="p">{</span>
    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">url</span> <span class="p">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">url</span><span class="p">(</span><span class="n">forResource</span><span class="p">:</span> <span class="s">&#34;</span><span class="s">ProductID</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">withExtension</span><span class="p">:</span> <span class="s">&#34;</span><span class="s">plist</span><span class="s">&#34;</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">nil</span> <span class="p">}</span>
    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">productIdentifiers</span> <span class="p">=</span> <span class="n">NSArray</span><span class="p">(</span><span class="n">contentsOf</span><span class="p">:</span> <span class="n">url</span><span class="p">)</span> <span class="k">as</span><span class="p">?</span> <span class="p">[</span><span class="nb">String</span><span class="p">]</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="kc">nil</span> <span class="p">}</span>
    <span class="k">return</span> <span class="n">productIdentifiers</span>
<span class="p">}</span>
</code></pre></div><h4 id="验证商品id">验证商品id</h4>
<p>请求苹果服务器验证我们提供的商品id是否有效。不过记得要把内购Controller设置为遵循<code>SKProductsRequestDelegate</code>协议，否则无法收到通知。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">validateProductIdentifers</span><span class="p">(</span><span class="n">with</span> <span class="n">productIdentifiers</span><span class="p">:</span> <span class="p">[</span><span class="nb">String</span><span class="p">]</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">guard</span> <span class="kd">let</span> <span class="nv">set</span> <span class="p">=</span> <span class="n">NSSet</span><span class="p">(</span><span class="n">array</span><span class="p">:</span> <span class="n">productIdentifiers</span><span class="p">)</span> <span class="k">as</span><span class="p">?</span> <span class="n">Set</span><span class="p">&lt;</span><span class="nb">String</span><span class="p">&gt;</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
    <span class="kd">let</span> <span class="nv">productRequest</span> <span class="p">=</span> <span class="n">SKProductsRequest</span><span class="p">(</span><span class="n">productIdentifiers</span><span class="p">:</span> <span class="kr">set</span><span class="p">)</span>
    <span class="n">request</span> <span class="p">=</span> <span class="n">productRequest</span>	<span class="c1">//</span><span class="c1"> </span><span class="c1">将</span><span class="c1">r</span><span class="c1">e</span><span class="c1">q</span><span class="c1">u</span><span class="c1">e</span><span class="c1">s</span><span class="c1">t</span><span class="c1">强</span><span class="c1">引</span><span class="c1">用</span><span class="c1">，</span><span class="c1">避</span><span class="c1">免</span><span class="c1">在</span><span class="c1">完</span><span class="c1">成</span><span class="c1">前</span><span class="c1">被</span><span class="c1">提</span><span class="c1">前</span><span class="c1">释</span><span class="c1">放</span><span class="c1">；</span><span class="c1">不</span><span class="c1">过</span><span class="c1">也</span><span class="c1">务</span><span class="c1">必</span><span class="c1">在</span><span class="c1">离</span><span class="c1">开</span><span class="c1">页</span><span class="c1">面</span><span class="c1">后</span><span class="c1">，</span><span class="c1">将</span><span class="c1">r</span><span class="c1">e</span><span class="c1">q</span><span class="c1">u</span><span class="c1">e</span><span class="c1">s</span><span class="c1">t</span><span class="c1">.</span><span class="c1">d</span><span class="c1">e</span><span class="c1">l</span><span class="c1">e</span><span class="c1">g</span><span class="c1">a</span><span class="c1">t</span><span class="c1">e</span><span class="c1">设</span><span class="c1">置</span><span class="c1">为</span><span class="c1">n</span><span class="c1">i</span><span class="c1">l</span>
    <span class="n">productRequest</span><span class="p">.</span><span class="n">delegate</span> <span class="p">=</span> <span class="kc">self</span>
    <span class="n">productRequest</span><span class="p">.</span><span class="n">start</span><span class="p">(</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h4 id="在协议中处理商品">在协议中处理商品</h4>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">productsRequest</span><span class="p">(</span><span class="kc">_</span> <span class="n">request</span><span class="p">:</span> <span class="n">SKProductsRequest</span><span class="p">,</span> <span class="n">didReceive</span> <span class="n">response</span><span class="p">:</span> <span class="n">SKProductsResponse</span><span class="p">)</span> <span class="p">{</span>
    <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">received product response</span><span class="s">&#34;</span><span class="p">)</span>
    <span class="n">products</span> <span class="p">=</span> <span class="n">response</span><span class="p">.</span><span class="n">products</span>	<span class="c1">//</span><span class="c1"> </span><span class="c1">将</span><span class="c1">获</span><span class="c1">取</span><span class="c1">到</span><span class="c1">的</span><span class="c1">商</span><span class="c1">品</span><span class="c1">存</span><span class="c1">储</span><span class="c1">在</span><span class="c1">界</span><span class="c1">面</span><span class="c1">实</span><span class="c1">例</span><span class="c1">变</span><span class="c1">量</span><span class="c1">，</span><span class="c1">再</span><span class="c1">次</span><span class="c1">购</span><span class="c1">买</span><span class="c1">时</span><span class="c1">不</span><span class="c1">需</span><span class="c1">要</span><span class="c1">重</span><span class="c1">复</span><span class="c1">请</span><span class="c1">求</span><span class="c1">商</span><span class="c1">品</span>

  <span class="c1">//</span><span class="c1"> </span><span class="c1">下</span><span class="c1">面</span><span class="c1">是</span><span class="c1">继</span><span class="c1">续</span><span class="c1">进</span><span class="c1">行</span><span class="c1">支</span><span class="c1">付</span><span class="c1">请</span><span class="c1">求</span>
</code></pre></div><h3 id="请求支付">请求支付</h3>
<p>在获取了有效商品后，就可以用商品创建<code>SKPayment</code>，并将<code>payment</code>实例加入苹果支付队列中。</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">func</span> <span class="nf">requestPayment</span><span class="p">(</span><span class="n">with</span> <span class="n">product</span><span class="p">:</span> <span class="n">SKProduct</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nv">payment</span> <span class="p">=</span> <span class="n">SKPayment</span><span class="p">(</span><span class="n">product</span><span class="p">:</span> <span class="n">product</span><span class="p">)</span>
    <span class="n">SKPaymentQueue</span><span class="p">.</span><span class="k">default</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">payment</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div><h3 id="处理支付">处理支付</h3>
<p>这个步骤核心的点就是创建并添加<code>SKPaymentTransactionObserver</code>。</p>
<h4 id="appdelegate添加observer">AppDelegate添加observer</h4>
<ol>
<li>在AppDelegate声明遵循<code>SKPaymentTransactionObserver</code>协议。</li>
<li>实现协议方法，实现后实现者就可以作为observer。</li>
</ol>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="o">*//</span> <span class="n">MARK</span><span class="p">:</span> <span class="o">-</span> <span class="n">SK</span> <span class="n">Product</span> <span class="n">Request</span> <span class="n">Delegate</span><span class="o">*</span>
<span class="kd">func</span> <span class="nf">paymentQueue</span><span class="p">(</span><span class="kc">_</span> <span class="n">queue</span><span class="p">:</span> <span class="n">SKPaymentQueue</span><span class="p">,</span> <span class="n">updatedTransactions</span> <span class="n">transactions</span><span class="p">:</span> <span class="p">[</span><span class="n">SKPaymentTransaction</span><span class="p">]</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="n">transaction</span> <span class="k">in</span> <span class="n">transactions</span> <span class="p">{</span>
        <span class="k">switch</span> <span class="n">transaction</span><span class="p">.</span><span class="n">transactionState</span> <span class="p">{</span>
        <span class="k">case</span> <span class="p">.</span><span class="n">purchasing</span><span class="p">:</span>
            <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">async</span> <span class="p">{</span>
                <span class="n">SVProgressHUD</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">withStatus</span><span class="p">:</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="s">&#34;</span><span class="s">订单处理中</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">comment</span><span class="p">:</span> <span class="s">&#34;</span><span class="s">请求支付提示</span><span class="s">&#34;</span> <span class="p">)</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="k">case</span> <span class="p">.</span><span class="n">deferred</span><span class="p">:</span>
            <span class="n">SVProgressHUD</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">withStatus</span><span class="p">:</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="s">&#34;</span><span class="s">订单处理中</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">comment</span><span class="p">:</span> <span class="s">&#34;</span><span class="s">请求支付提示</span><span class="s">&#34;</span> <span class="p">)</span><span class="p">)</span>
        <span class="k">case</span> <span class="p">.</span><span class="n">purchased</span><span class="p">:</span>
        <span class="c1">//</span><span class="c1"> </span><span class="c1">购</span><span class="c1">买</span><span class="c1">成</span><span class="c1">功</span><span class="c1">，</span><span class="c1">此</span><span class="c1">处</span><span class="c1">需</span><span class="c1">要</span><span class="c1">发</span><span class="c1">送</span><span class="c1">玩</span><span class="c1">家</span><span class="c1">道</span><span class="c1">具</span><span class="c1">、</span><span class="c1">保</span><span class="c1">存</span><span class="c1">凭</span><span class="c1">证</span><span class="c1">等</span><span class="c1">动</span><span class="c1">作</span><span class="c1">。</span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span>

        <span class="c1">//</span><span class="c1"> </span><span class="c1">当</span><span class="c1">然</span><span class="c1">交</span><span class="c1">易</span><span class="c1">完</span><span class="c1">毕</span><span class="c1">后</span><span class="c1">，</span><span class="c1">一</span><span class="c1">定</span><span class="c1">要</span><span class="c1">手</span><span class="c1">动</span><span class="c1">关</span><span class="c1">闭</span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span>
        <span class="n">SKPaymentQueue</span><span class="p">.</span><span class="k">default</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="n">finishTransaction</span><span class="p">(</span><span class="n">transaction</span><span class="p">)</span>

        <span class="k">case</span> <span class="p">.</span><span class="n">failed</span><span class="p">:</span>
        <span class="c1">//</span><span class="c1"> </span><span class="c1">交</span><span class="c1">易</span><span class="c1">失</span><span class="c1">败</span><span class="c1">，</span><span class="c1">也</span><span class="c1">要</span><span class="c1">关</span><span class="c1">闭</span><span class="c1">交</span><span class="c1">易</span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span><span class="c1"> </span>
        <span class="n">SKPaymentQueue</span><span class="p">.</span><span class="k">default</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="n">finishTransaction</span><span class="p">(</span><span class="n">transaction</span><span class="p">)</span>

        <span class="k">case</span> <span class="p">.</span><span class="n">restored</span><span class="p">:</span>
        <span class="c1">//</span><span class="c1"> </span><span class="c1">恢</span><span class="c1">复</span><span class="c1">订</span><span class="c1">单</span>
        <span class="n">SKPaymentQueue</span><span class="p">.</span><span class="k">default</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="n">finishTransaction</span><span class="p">(</span><span class="n">transaction</span><span class="p">)</span>
        <span class="k">default</span><span class="p">:</span>
            <span class="bp">print</span><span class="p">(</span><span class="s">&#34;</span><span class="s">other situation</span><span class="s">&#34;</span><span class="p">)</span>
        <span class="n">SKPaymentQueue</span><span class="p">.</span><span class="k">default</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="n">finishTransaction</span><span class="p">(</span><span class="n">transaction</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div><ol start="3">
<li>在<code>didFinishLaunchingWithOptions</code>方法中添加观察者：
<code>SKPaymentQueue.default().add(self)</code></li>
</ol>
<h4 id="其他界面添加observer">其他界面添加observer</h4>
<p>假如用户一直呆在内购界面等待结束，我们很可能需要在内购界面也要一套前端的展示机制。跟AppDelegate的流程一样，我们将内购界面也作为<code>SKPaymentTransactionObserver</code>添加到队列中。这样，内购界面也能收到通知了。</p>
<blockquote>
<p>离开其他界面时，记得调用<code>SKPaymentQueue.default().remove(self)</code>来移除observer，否则可能会崩溃。</p>
</blockquote>
<p>当内购界面可用的时候，就可以让内购界面去处理一些前端交互，比如弹出窗口，关闭当前界面等。</p>
<h3 id="恢复支付">恢复支付</h3>
<p>如果用户购买的是非消耗型商品，比如是一个去广告服务。用户卸载后，如果重新安装回来，是可以申请恢复记录的。我使用的办法比较简陋，没有用加密和服务端验证，只是对比了下<code>transaction.payment.productIdentifier</code>。</p>
<p>首先，在用户发起「恢复购买记录」后，调用<code>SKPaymentQueue.default().restoreCompletedTransactions()</code>。</p>
<p>然后，在<code>updateTransactions</code>协议方法中，在<code>case .restored</code>中验证用户的<code>transaction.payment.productIdentifier</code>，若符合，则修改<code>UerDefaults</code>中的去广告标记。</p>
<blockquote>
<p>本人初学，有不当或错漏之处，感谢斧正！</p>
</blockquote>]]></content>
		</item>
		
		<item>
			<title>自学路上的坑01 - Scheme勾选项带来的一些列问题</title>
			<link>https://shenxiaobing.com/posts/2019/self-taught-swift-lesson-01/</link>
			<pubDate>Wed, 20 Jun 2018 07:43:51 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/self-taught-swift-lesson-01/</guid>
			<description>&lt;blockquote&gt;
&lt;p&gt;如果你的问题在网上找不到，那一定是你犯了一个低级错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Edit Scheme&lt;/code&gt;中勾选&lt;code&gt;Malloc Stack&lt;/code&gt;会导致每次Xcode覆盖安装App都预先占用一定量的数据存储空间，且由于某种原因，本来每次存储几十KB的数据结果占用了几十MB；同时，这个勾选项还会导致&lt;code&gt;Instrument - Leak&lt;/code&gt;界面出现名为&lt;code&gt;&amp;lt;Allocated Prior To Attach&amp;gt;&lt;/code&gt;的Leak。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Edit Scheme&lt;/code&gt;中&lt;code&gt;Zombie Object&lt;/code&gt;调试结束要记得关掉，否则会在&lt;code&gt;Instrument - Leak&lt;/code&gt;界面产生大量的名为&lt;code&gt;Zombie Object&lt;/code&gt;的Leak。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<blockquote>
<p>如果你的问题在网上找不到，那一定是你犯了一个低级错误。</p>
</blockquote>
<h2 id="结论">结论</h2>
<blockquote>
<p><code>Edit Scheme</code>中勾选<code>Malloc Stack</code>会导致每次Xcode覆盖安装App都预先占用一定量的数据存储空间，且由于某种原因，本来每次存储几十KB的数据结果占用了几十MB；同时，这个勾选项还会导致<code>Instrument - Leak</code>界面出现名为<code>&lt;Allocated Prior To Attach&gt;</code>的Leak。</p>
</blockquote>
<p><code>Edit Scheme</code>中<code>Zombie Object</code>调试结束要记得关掉，否则会在<code>Instrument - Leak</code>界面产生大量的名为<code>Zombie Object</code>的Leak。</p>
<h2 id="过程">过程</h2>
<p>有天突然发现iPhone储存空间管理界面，显示我的App占用了3.7GB的文稿数据空间。震惊之余，立马用模拟器和真机重新安装，边跑边记录文稿数据变化情况。经过整理如下有2个问题表现：</p>
<ol>
<li>真机每次跑完一次步，会增加10几MB的文稿数据存储空间。</li>
<li>真机每次Xcode覆盖安装都会额外增加8MB的文稿数据存储空间。</li>
<li>在<code>Instruments - Leak</code>中有数不尽的Leaks，其中占比最大的是叫做<code>&lt;Allocated Prior To Attach&gt;</code>的Leak。</li>
</ol>
<p>一通搜索，尝试了以下几个方案：</p>
<ol>
<li>将工程代码中闭包里的被强引用的<code>self</code>全部改为弱引用。虽然这点学了点东西，不过对于当前的问题，没有实际效果。</li>
<li>在<code>Leak</code>界面看到了<code>Zombie Object</code>，想到之前修改过<code>Scheme</code>，于是前往将<code>Zombie Object</code>反选。之后Leak界面一下子少了很多所谓的<code>Leak</code>。</li>
<li>数据量大的问题，一筹莫展之际，去看了<code>Xcode</code>运行状态中的<code>Disk</code>，发现确实每次都有7MB新增的空间，于是拿这个界面的关键词进行搜索，结果还是<code>Scheme</code>的锅。在<code>Edit Scheme</code>中反选<code>Malloc Stack</code>，问题立马解决了。</li>
<li>步骤三做了以后，<code>Leak</code>界面就没有<code>&lt;Allocated Prior To Attach&gt;</code>的Leak名称了。</li>
</ol>
<h2 id="收获">收获</h2>
<p>整个过程，前后搜索、尝试、验证，花了我大约5个小时。就是这样的时刻，让我觉得新手自学有太多的艰难。有些东西，对于别人几乎像是常识般；而对于新手，就是一个有待解决的问题，而正因为在别人眼里是常识，导致新手很难在网络上找到现成的答案。</p>
<blockquote>
<p>如果你的问题在网上找不到答案，那一定是你犯了一个低级错误。</p>
</blockquote>
<p>我之前就有这样的意识了，也许以后可以考虑先把问题搁置起来，而不必第一时间就要找到解决方案，尤其是网上搜不到同类问题的时候。</p>
<p>不过，今天这番至少知道了：要在闭包里用弱引用，怎样使用Instrument - Leak，以及查看Xcode的运行状态。</p>]]></content>
		</item>
		
		<item>
			<title>自学编程6年，从入门到放弃</title>
			<link>https://shenxiaobing.com/posts/2019/from-zero-to-quit/</link>
			<pubDate>Wed, 20 Jun 2018 02:49:00 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/from-zero-to-quit/</guid>
			<description>&lt;blockquote&gt;
&lt;p&gt;我会用4种编程语言写出Hello World！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2013年-c语言&#34;&gt;2013年 C语言&lt;/h2&gt;
&lt;p&gt;自学编程的想法，最早应该可以追溯到2013年，证据就是我于当时写下的博客，以及博客中提到的新买的、后来被村长带走的《C语言编程》。我已经记不得当时为何要学编程，为何要从C语言开始，以及那本书我看了多少。&lt;/p&gt;
&lt;p&gt;不过，打出上面最后一句话后，我还是想起来了：当时我没能用C语言打出&lt;code&gt;Hello World!&lt;/code&gt;就放弃了，因为没弄好编译器。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<blockquote>
<p>我会用4种编程语言写出Hello World！</p>
</blockquote>
<h2 id="2013年-c语言">2013年 C语言</h2>
<p>自学编程的想法，最早应该可以追溯到2013年，证据就是我于当时写下的博客，以及博客中提到的新买的、后来被村长带走的《C语言编程》。我已经记不得当时为何要学编程，为何要从C语言开始，以及那本书我看了多少。</p>
<p>不过，打出上面最后一句话后，我还是想起来了：当时我没能用C语言打出<code>Hello World!</code>就放弃了，因为没弄好编译器。</p>
<h2 id="2014年-购入macbook">2014年 购入Macbook</h2>
<p>这一年，我花了六千大洋买了最低配的Macbook Air 11.6英寸版本。</p>
<p>为什么要买？在我的记忆里，应该就是为了编写iOS App。不过，我并没有在这一年留下任何的学习笔记。</p>
<h2 id="2015年-java语言">2015年 Java语言</h2>
<p>这一年工作中略有些空闲。在工作时间间隙和下班后，我开始学习Java。这时候学的是网易公开课上的斯坦福大学的CS106A课程。</p>
<p>我清晰地记得这波自学最后一次编程是用Java语言在画布上画出三节火车车厢。而印象笔记显示我只学到了教材第6章：Methods。</p>
<h2 id="2016年-objective-c语言">2016年 Objective-C语言</h2>
<p>机缘巧合，凭借我学到的这点皮毛，我从游戏运营岗位跳到一家云计算公司做售后技术支持，平时就是解答下我们的商业SDK和其他产品使用和接入中的一些问题。我有了工作时间学习编程的理由和一定的时间。</p>
<p>我开始跟随王寒翻译的Ray Wenderlich的iOS学习教材学习，接着跟着我自己买的书籍，也看过一点网易公开课上的斯坦福大学白胡子老师的课。</p>
<p>最后的成果，就是我用Objective-C模仿【雨时】开发了一个天气App。基本的界面、天气请求、设置等都已经做的差不多了，大约完成度有7成。</p>
<p>不过，项目一旦搁置，可能就永远捡不起了。现在这个做了一半的项目还在我的电脑上。</p>
<h2 id="2017年-python语言">2017年 Python语言</h2>
<p>在做技术支持的最后一段日子，我开始学习Python。我想用Python写一些工作上可以用到的工具，比如：接口检测脚本，但Objective-C做不到。</p>
<p>我找到了网上的廖雪峰的Python课程开始学习，基本完成了教程的内容并进行笔记，不过并未完成最后的实战。</p>
<p>我很快就离职了，最终也没有找到实际使用Python的场景。</p>
<h2 id="2018年-swift语言">2018年 Swift语言</h2>
<p>我从Udemy上购买了一套Swift课程。我用了一个多月的时间跟着完成了Swift开发相关的部分。我开始开发自己的App，这次是一个跑步App。现在App的开发进度也基本上有八成了。</p>
<p>现在我又开始复习学过的Python内容。</p>
<h2 id="我该学什么语言">我该学什么语言？</h2>
<p>我也曾经有这样的疑问，而且上面提到的几乎每一年我应该都有这样的疑问，即使我已经在学习某种语言的时候，我还是会有疑问，尤其是当我遇到瓶颈和阻碍的时候。</p>
<p>大约是2018年初，我可能再次提出了这个疑问。我看到廖雪峰也回答说Java开始学习编程。于是，我又捡起了斯坦福大学CS106A网络课程。这次，我学到了第19节课，第19节的标题是：Interface &amp; Map。</p>
<p>但是，这个问题重要吗？你看了我的经历，你还觉得重要吗？6年了，从自学编程的想法萌发直到现在，我学习了4种编程语言的基本语法。但这有什么用呢？</p>
<p>中肯地说，我这次在学Swift时，很多概念就很快就能理解，因为之前学过Objective-C，所以通用的代理、通知、第三方库、界面等都不再是问题。所以，实际上每段学习，都有它的价值。这是肯定的，只是，就结果而言，都不能令人满意。毕竟，精通一门语言比仅仅熟悉10门语言的语法要强上10倍吧。</p>]]></content>
		</item>
		
		<item>
			<title>一天</title>
			<link>https://shenxiaobing.com/posts/2019/one-day/</link>
			<pubDate>Mon, 14 May 2018 16:30:02 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/one-day/</guid>
			<description>&lt;p&gt;我下楼去买可乐。&lt;/p&gt;
&lt;p&gt;走下楼梯时，看到楼梯上靠墙坐着一个头发花白的中年人。他低着头，在玩开心消消乐。我走过了，却还是忍不住回头看了他一样。他很严肃。&lt;/p&gt;
&lt;p&gt;这是我今天喝的第三罐可乐。可乐倒进嘴里，苦味已经盖过了甜味。我只能喝可乐。喝酒太辣太苦，而我也没有配得上酒的忧愁或把酒言欢的朋友。我有的只是这种说不出是甜还是苦的平常生活。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>我下楼去买可乐。</p>
<p>走下楼梯时，看到楼梯上靠墙坐着一个头发花白的中年人。他低着头，在玩开心消消乐。我走过了，却还是忍不住回头看了他一样。他很严肃。</p>
<p>这是我今天喝的第三罐可乐。可乐倒进嘴里，苦味已经盖过了甜味。我只能喝可乐。喝酒太辣太苦，而我也没有配得上酒的忧愁或把酒言欢的朋友。我有的只是这种说不出是甜还是苦的平常生活。</p>
<p>是不是太平常了呢？我七点二十起床，有时会赖到七点半。如果前一天晚上没洗澡，那么早上会洗个澡。妈在这里帮忙带孩子，早上她也会准备早饭。吃完早饭，大约八点到八点十分之间离家去上班。我先走十几分钟到一个停放了功能正常的共享单车的公司门口，然后骑车5分钟到地铁站。如果是上一周，进了地铁，我会掏出Kindle来读我下载的古龙小说。今天我却不想。我不关心七种武器那最后一种是怎样的。</p>
<p>话说回来，是古龙小说不合我的胃口，还是我已经过了为武侠小说着迷的年纪？我看了《多情剑客无情剑》和《七种武器》的前75%部分，并没有欲罢不能的感觉，在思想深度与触动人方面，连同时阅读的另一本《无声告白》都比不上。</p>
<p>继续说回地铁上，今天我没有掏出Kindle。我今天起来心情就不好，好像又忘记了自己的目标，或者说，又开始在意自己的没有目标的状态。我想要不就随便想点事儿吧，就在这地铁碾压铁轨的有规律的声响中。要不要记录下自己的想法呢？我伸手进口袋掏出了手机。我什么也没有记录，却看了一路的火影漫画，昨天晚上刚下载的APP。</p>
<p>三忍大战，当时多么激动人心的情节。在漫画上，缺少了音乐、配音、画面的渲染，让感染力减弱了不少。而且我还是二刷，几乎是无感，只是会想起当时自己应该是很激动的。</p>
<p>到公司后去楼下的自动售卖机买可乐。想着这次要不用支付宝吧。结果用支付宝扫描后反而报错了。</p>
<p>今天的主要任务就是测试一个新开发完成的麻将玩法。其他同事可以搞定，我就安排与追踪下进度。产品还是有很多小问题，让人有点无可奈何。我又列了下当前主要的模块，安排了下优先级。</p>
<p>然后，我又开始出离，观察自己现在的这个状态。我需要一罐可乐。</p>
<p>于是，我下楼去买可乐，今天的第三罐可乐。</p>]]></content>
		</item>
		
		<item>
			<title>Core Data入门</title>
			<link>https://shenxiaobing.com/posts/2019/beginning-core-data/</link>
			<pubDate>Thu, 26 Apr 2018 13:49:23 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/beginning-core-data/</guid>
			<description>&lt;p&gt;在iOS App中，如果要存储的数据量比较大，就会使用Core Data。这里汇总了下使用Core Data的基本方式。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>在iOS App中，如果要存储的数据量比较大，就会使用Core Data。这里汇总了下使用Core Data的基本方式。</p>
<ol>
<li>添加Core Data</li>
<li>配置Core Data中的Entity</li>
<li>添加新数据</li>
<li>读取与修改数据</li>
<li>使用NSPredicate筛选数据</li>
<li>删除数据</li>
<li>保存数据</li>
<li>一份NSPredicate使用备忘清单</li>
</ol>
<h2 id="添加core-data">添加Core Data</h2>
<p>如果在创建项目时没有勾选Using Core Data，可以手动创建Core Data。手动创建Core Data的方式如下：</p>
<ol>
<li>在项目中创建新的文件，类型为：Core Data。</li>
<li>添加相关的预设方法进入<code>AppDelegate</code>中，相关方法如下：</li>
</ol>
<pre><code>func applicationWillTerminate(_ application: UIApplication) {
    self.saveContext()
}
	
// MARK: - Core Data stack
    
lazy var persistentContainer: NSPersistentContainer = {
    let container = NSPersistentContainer(name: &quot;DataModel&quot;)
    container.loadPersistentStores(completionHandler: { 
    (storeDescription, error) in
        if let error = error as NSError? {
            fatalError(&quot;Unresolved error \(error), \(error.userInfo)&quot;)
        }
    })
    return container
}()
    
// MARK: - Core Data Saving support
    
func saveContext () {
    let context = persistentContainer.viewContext
    if context.hasChanges {
        do {
            try context.save()
        } catch {
            let nserror = error as NSError
            fatalError(&quot;Unresolved error \(nserror), \(nserror.userInfo)&quot;)
        }
    }
}
</code></pre><p>这两个方法是Xcode为使用Core Data的新项目自动创建的，我这里只是拷贝了进来。</p>
<h2 id="配置core-data中的entity">配置Core Data中的Entity</h2>
<p>点击创建的Core Data文件，我们在界面中配置Entity。Core Data中的Entity，就相当于编程语言中的Class，类比数据库就是一个Table。Entity的Attribute，就是Class的Property，Table中的Field。</p>
<p>举个例子：
我的To-do App中需要两个类，一个是Category，代表清单的类别；一个是Item，代表清单中的具体事项。</p>
<p>在Core Data中创建2个Entity分别是Category和Item。Category设置1个Attribute：name，类型为String；Item设置2个Attribute：title和done，分别是String和Bool类型。</p>
<p>然后配置Category和Item的关系，将Category对Item的关系设置为一对多，而Item对Category的关系设置为一对一，毕竟一个事项只有一个类别。</p>
<h2 id="添加新数据">添加新数据</h2>
<p>无论要对Core Data做什么，都需要用到<code>context</code>，因此需要在用到Core Data的类中添加一个实例变量：</p>
<pre><code>let context = (UIApplication.shared.delegate
	as! AppDelegate).persistentContainer.viewContext
</code></pre><p>我要添加一个新的Category，那么从Core Data的Entity中创建对象是这样的：</p>
<pre><code>let newCategory = Category(context: self.context)   // 用Core Data中的Entity创建对象

newCategory.name = &quot;Work&quot; // 设置Entity对象的必要attribute

// 将新的category对象加入categoryList，而categoryList则指向是从数据库中读取的数据。
categoryList.append(newCategory)  
</code></pre><h2 id="读取与修改数据">读取与修改数据</h2>
<p>从Core Data中读取全部数据：</p>
<pre><code>func fetchData() {
    let request: NSFetchRequest&lt;Category&gt; = Category.fetchRequest()
    
    do {
    	// 将实例变量categoryList指向读取的数据
        categoryList = try context.fetch(request)  
    } catch {
        print(&quot;Error fetching request, \(error)&quot;)
    }
}
</code></pre><p>而要修改数据，则可以选择使用以下两种方式之一：</p>
<pre><code>// 将刚加入的Work改为Shopping
categoryList[0].name = &quot;Shopping&quot; 

// 将刚才的Shopping category的name attribute改为&quot;Chores&quot;
categoryList[0].setValue(&quot;Chores&quot;, forKey: &quot;name&quot;) 
</code></pre><h2 id="使用predicate筛选数据">使用Predicate筛选数据</h2>
<p>有时我们不需要读取数据库中的所有数据，比如我只想读取：Category是Work的所有待办事项Item；或者我想搜索Work类别里待办事项中名字里包含&quot;urgent&quot;的事项，这时，我们这样写：</p>
<pre><code>let selectedCategory = &quot;Work&quot;  // 清单类别
let searchKeyword = &quot;urgent&quot;  // 搜索筛选的关键词

let request: NSFetchRequest&lt;Item&gt; = Item.fetchRequest()

// 此处parentCategory是Core Data中Item的一个关系设定，将关系指向Category并命名为parentCategory。
let predicate1 = NSPredicate(format: &quot;parentCategory.name MATCHES %@&quot;, selectedCategory) 

let predicate2 = NSPredicate(format: &quot;title CONTAINS[cd] %@&quot;, searchKeyword)

let compoundPredicate = NSCompoundPredicate(andPredicateWithSubpredicates: [predicate1, predicate2])

request.predicate = compoundPredicate
request.sortDescriptors = [NSSortDescriptor(key: &quot;title&quot;, ascending: true)]

do {
    self.selectedItems = try context.fetch(request)
} catch {
    print(&quot;Error fetching data, \(error)&quot;)
}       
</code></pre><h2 id="删除数据">删除数据</h2>
<p>读取数据后，直接从指向数据的变量中，删除对应的数据即可。</p>
<pre><code>self.context.delete(selectedItems[1]) // 从数据中移除
selectedItems.remove(at: 1) // 接着更新下指向数据的实例变量
</code></pre><h2 id="保存数据">保存数据</h2>
<p>对Core Data进行新增、修改、删除后，都要进行保存才能生效。</p>
<pre><code>do {
    try context.save()
} catch {
    print(&quot;Error saving data, \(error)&quot;)
}
</code></pre><h2 id="nspredicate使用备忘">NSPredicate使用备忘</h2>
<p>关于Predicate的一份备忘清单，可以随时查看：<a href="https://academy.realm.io/posts/nspredicate-cheatsheet/">NSPredicate备忘清单</a></p>]]></content>
		</item>
		
		<item>
			<title>我现在相信的</title>
			<link>https://shenxiaobing.com/posts/2019/things-i-believe/</link>
			<pubDate>Mon, 26 Mar 2018 16:15:11 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/things-i-believe/</guid>
			<description>&lt;p&gt;尽管对立的理论都能找到足够多的论据和拥趸，每个人，包括我，还是会对某一方的理论更为认同。尽管这种认同并不能增加理论的正确性，理清自己认同的东西还是很有必要。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>尽管对立的理论都能找到足够多的论据和拥趸，每个人，包括我，还是会对某一方的理论更为认同。尽管这种认同并不能增加理论的正确性，理清自己认同的东西还是很有必要。</p>
<ol>
<li>
<p>有钱很好。</p>
<p>有了钱，可以为父母实现愿望，让他们高兴；有了钱，可以购买更多的选项；有了钱，甚至可以为父母或自己买来更长的寿命；有了钱，可以免除相当一部分的忧虑和恐惧。</p>
</li>
<li>
<p>幸福不是终点，也不是绝对的。</p>
<p>幸福只可能是短暂的。一开始你觉得幸福，适应后，你不再有幸福感。面对相同的一种情形，有人会觉得幸福，有人会觉得难以忍受。追求幸福，其实就像是追求一个泡影，一个注定会迅速消逝的东西。</p>
<p>追求幸福，不如平静。</p>
</li>
<li>
<p>追寻意义有意义。</p>
<p>对于个体的人，意义不是天赋的，不是不证自明的。换成有一部分人的话来说，人生本来没有意义。但对于个体，至少是对于部分个体，追寻意义是植入底层的，是从小到大受到的教育的结果。即使不断地对自己说，意义都是假的，人还是不愿意接受一个毫无意义的世界。</p>
<p>如果世界上没有意义，我的存在还有什么意义？所以，尽管我们可以说，很多人所谓的意义不过是自我欺骗或者大众合谋，但我们还是无法否认意义感的意义。「我相信」跟「这是真的」，哪个更有意义呢？</p>
</li>
<li>
<p>爱情也许存在，但本质上是短暂的。</p>
<p>爱情，必须转化为其他形态的关系，才能长久。我不相信天长地久的爱情，我相信某种长久的关系，但你很难称之为爱情。</p>
</li>
</ol>
<p>未完待续&hellip; &hellip;</p>]]></content>
		</item>
		
		<item>
			<title>做事靠系统——读《小强升职记》</title>
			<link>https://shenxiaobing.com/posts/2019/getting-things-done/</link>
			<pubDate>Wed, 07 Mar 2018 17:15:20 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/getting-things-done/</guid>
			<description>&lt;p&gt;《小强升职记》是一本关于时间管理方面的小书，以故事和对话的形式展开，非常易读易懂易用。&lt;/p&gt;
&lt;p&gt;书中主要的核心内容有以下三点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何制作待办任务清单&lt;/li&gt;
&lt;li&gt;如何完成复杂项目&lt;/li&gt;
&lt;li&gt;如何专注地工作&lt;/li&gt;
&lt;/ol&gt;</description>
			<content type="html"><![CDATA[<p>《小强升职记》是一本关于时间管理方面的小书，以故事和对话的形式展开，非常易读易懂易用。</p>
<p>书中主要的核心内容有以下三点：</p>
<ol>
<li>如何制作待办任务清单</li>
<li>如何完成复杂项目</li>
<li>如何专注地工作</li>
</ol>
<h2 id="如何制作待办任务清单">如何制作待办任务清单</h2>
<p>任务清单可以让我们专注于做事，而不用时时刻刻去挂念其他任务。清单让我们清空大脑专注在某个事情上面。</p>
<p>制作任务清单主要有以下3个步骤：</p>
<ol>
<li>用事务篮收集所有想到的被交付的或大或小的待办项目</li>
<li>将以上待办项目整理为三份清单加一份日程表</li>
<li>专注于行动清单，要事为先</li>
</ol>
<h3 id="收集任务">收集任务</h3>
<p>我们平时会接到工作上领导派发的需求，以及自己职责内的事务。它们经常在我们正在忙于另一件事情时出现，我们不应当打断正在做的事情，而是要把这件事情加入待办事务篮。待办事务篮里面可能有打电话这样的小事，也可能有准备某项目的运营计划这样的大事。</p>
<p>收集的作用是为了不打断当前工作且不遗忘重要的事务，同时也是为后续正确地归类最准备。</p>
<h3 id="归类清单">归类清单</h3>
<p>将收集到任务根据「可行动」以及「时间」属性，分类添加到3个清单和1份日程表中。</p>
<ul>
<li>行动清单，该清单里都是直接行动的事项，有空就去做；任务是有多个行动组成的，由任务分解后的「下一步行动」也直接写进行动清单。比如：找工作，本身是不能立刻行动的，需要拆分为：写简历、投简历、准备面试等可行动事务。</li>
<li>项目清单，该清单类似任务清单，由多个行动组成。与任务的区别在于，任务多是靠一个人可以完成，而项目则需要与他人协作。比如：新游戏上线最终确认这个事情，就需要联合多部门进行。</li>
<li>将来清单，该清单上的事务是不确定某个时间要做，先记录上，待时机成熟时，会转变为行动清单或日程表或者被丢进垃圾箱。</li>
<li>日程表，就是在确定的未来某个时间需要做的行动，所以这里的行动要写的非常具体，免得过了一段时间忘记。需要转交给其他人完成的事务，也写在日程表里，提醒追踪和验收。</li>
</ul>
<p>任务和项目分解后，应该包含着多个「下一步行动」，这个拆分后的行动添加进入行动清单。</p>
<p>如果有2分钟内就可以解决的事，那么应该立刻去做，不用写进行动清单里，比如：填个报销单。</p>
<p>有了以上的3个清单，我们脑袋里就不用装着沉甸甸的包袱，专注于清单中的事务就行。</p>
<h3 id="要事为先">要事为先</h3>
<p>在行动清单里，列出了我们一天中（或某个时间段）需要做的事情。如何安排他们的优先顺序呢？要事为先！</p>
<p>把事务根据「重要性」和「紧急性」分类为四类：</p>
<ol>
<li>重要且紧急</li>
<li>重要但不紧急</li>
<li>不重要但紧急</li>
<li>不重要也不紧急</li>
</ol>
<p>重要且紧急的事情，当然是优先完成；不重要但紧急的事情如果可以转交别人完成，或者有礼貌地拒绝别人丢过来的任务；不重要也不紧急的就不要做了。</p>
<p>关键是重要而不紧急的行动，这个是关键。如果这类行动做的好，那么「重要且紧急」的事情就会少很多，多数的「重要且紧急」的事情都是因为没有处理好「重要但不紧急」的事情导致的。</p>
<p>怎么判断「重要性」呢？书中说是依据自己的职业价值观，即某事按照你的职业价值观能最大化你的收益，就是最重要的；不过我觉得一般不牵涉价值观，而仅仅涉及到工作中实际的效用，即业务的实际情况。</p>
<p>怎么判断「紧急性」呢？依据事务的截止日期。比如：这个需求很简单，你看着办，明天给我。如果说这句话的是某个产品，你可能想怼他；但如果是老板，立马变成了一个「紧急性」超高的任务。</p>
<!-- raw HTML omitted -->
<h2 id="如何完成复杂项目">如何完成复杂项目</h2>
<p>面对复杂项目或复杂任务，我们往往拖延症发作，焦虑，不知道从何入手，一直拖延到死线降至，潦草完事。</p>
<p>系统的方法则是：确认目标与任务分解。</p>
<h3 id="确认目标">确认目标</h3>
<p>目标要落地，在制定时就要合理，可以采用SMART原则：</p>
<ul>
<li>Specific，目标明确，不能模糊；</li>
<li>Measurable，可衡量，有实现的标准；</li>
<li>Attainable，可实现性，经过努力可以实现；</li>
<li>Relevant，与其他目标有相关性，对其他目标有帮助；</li>
<li>Time-based，有时限，在规定时间内达成。</li>
</ul>
<h3 id="任务分解的步骤">任务分解的步骤</h3>
<p>对项目或任务进行分解，可以采用以下三个步骤：</p>
<ol>
<li>确认项目或任务的主要事项，可以先分出模块，在大类里面想这个模块里面的具体的小的任务。这个环节，可以利用「思维导图」来完成。</li>
<li>将步骤一中确定的各类任务，确定对应的成本、周期、负责人以及里程碑，并通过「甘特图」的形式展现。「甘特图」可以用Excel也可以用微软的Project软件来做。</li>
<li>最后，就是制定奖励规则，就是里程碑达成的奖励并且兑现，这样可以对自己或团队有相当的激励。</li>
</ol>
<h3 id="下一步行动的原则">下一步行动的原则</h3>
<p>任务最终需要分解为「下一步行动」，这样我们才能真的去执行。分解的要素为：</p>
<ul>
<li>动词开头</li>
<li>内容清晰</li>
<li>描述结果</li>
<li>设置开始时间、周期、最后期限</li>
</ul>
<p>这样就非常清晰地知道自己下一步要做什么了。</p>
<h3 id="像打游戏一样做项目">像打游戏一样做项目</h3>
<ul>
<li>明确的目标，这样可以进行行动；</li>
<li>明确的规则</li>
<li>即时反馈，比如里程碑奖励；</li>
<li>尽量做到自愿参与，来自规则的约束不如来自内在的动力</li>
</ul>
<p>以上这几点，同样适用于培养习惯。说到培养习惯，书中说：</p>
<blockquote>
<p>培养习惯的秘诀是少而慢，而不是多和快。</p>
<p>再微不足道的成就，都要大肆庆祝。培养习惯可以不是一个人的事，可以找到同道互相支持鼓励。</p>
</blockquote>
<h2 id="如何专注高效工作">如何专注高效工作</h2>
<p>专注工作的目的是提高效率，因此主要手段在于：不受打扰以及精力充沛。</p>
<ul>
<li>番茄工作法</li>
<li>挑选时间段</li>
<li>拒绝别人的猴子</li>
</ul>
<h3 id="番茄工作法">番茄工作法</h3>
<p>番茄工作法，就是专注工作一段时间并休息一段时间，专注工作的这段时间称为一个番茄。这里的关键点是：专注。</p>
<p>一般来说，可以采用一个番茄20分钟，然后休息5分钟；连续三个番茄，休息15分钟的方式。在番茄时间内，专注工作，不受打扰；主动休息是为了劳逸结合。</p>
<p>番茄时间根据实际情况可以调整，比如早上精力充沛，可以设置40分钟的番茄时间。</p>
<h3 id="挑选时间段">挑选时间段</h3>
<p>我们得承认，某些时间段我们的工作效率就是高，也许是因为那时的精力充沛，也许是因为那个时间段内比较不被人打扰，比如早上刚上班以及快下班那会。</p>
<p>找到这样的时段，安排要事去完成。</p>
<h3 id="拒绝别人的猴子">拒绝别人的猴子</h3>
<p>猴子，就是别人的事。别人的事，可能变成你的事。他解脱了，你就要背着这只猴子。</p>
<p>所以，要懂得用适当的、委婉的方式去处理别人可能丢给你的事，否则你需要做的事务可能会越来越多，且多半没有什么价值，最重要会浪费你自己的时间。</p>]]></content>
		</item>
		
		<item>
			<title>那一刻，我感觉到一种疼痛 —— 观《你好，波拉德》</title>
			<link>https://shenxiaobing.com/posts/2019/hello-brad/</link>
			<pubDate>Thu, 08 Feb 2018 18:04:56 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/hello-brad/</guid>
			<description>&lt;blockquote&gt;
&lt;p&gt;当我在电视上看到我的同学时，我清楚地感觉到，那是一种疼痛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;小波睡不着觉了。&lt;/p&gt;
&lt;p&gt;同学小西之前在做白宫的顾问，现在出了畅销书，在大学任教，隔几天上一次电视。小西，有名。&lt;/p&gt;
&lt;p&gt;同学小东在运营一个私募基金，盘子百亿美金，住豪宅，坐私人飞机。小东，有钱。&lt;/p&gt;
&lt;p&gt;同学小北的互联网公司被数千万美元收购，跑到海岛上整日逍遥。小北，有闲。&lt;/p&gt;
&lt;p&gt;小波不断地想着这几个同学，想着今天在电视上看到的小西，想着在私人飞机上的小东，以及在阳光沙滩上搂着两个年轻姑娘的小北。小波想着在大学时他们都还是竞争对手，他们还经常在一起混。小波想到前几天自己的公益组织唯一的雇员，自己很看重且全力培养的下属，跟他提离职，说这个工作没什么价值，天天去找人捐钱，还不如他先去挣钱然后自己捐钱呢。小波想到自己现在社交圈里这些庸人，想到聚会上他们一起把酒言欢而自己若有所失。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<blockquote>
<p>当我在电视上看到我的同学时，我清楚地感觉到，那是一种疼痛。</p>
</blockquote>
<p>小波睡不着觉了。</p>
<p>同学小西之前在做白宫的顾问，现在出了畅销书，在大学任教，隔几天上一次电视。小西，有名。</p>
<p>同学小东在运营一个私募基金，盘子百亿美金，住豪宅，坐私人飞机。小东，有钱。</p>
<p>同学小北的互联网公司被数千万美元收购，跑到海岛上整日逍遥。小北，有闲。</p>
<p>小波不断地想着这几个同学，想着今天在电视上看到的小西，想着在私人飞机上的小东，以及在阳光沙滩上搂着两个年轻姑娘的小北。小波想着在大学时他们都还是竞争对手，他们还经常在一起混。小波想到前几天自己的公益组织唯一的雇员，自己很看重且全力培养的下属，跟他提离职，说这个工作没什么价值，天天去找人捐钱，还不如他先去挣钱然后自己捐钱呢。小波想到自己现在社交圈里这些庸人，想到聚会上他们一起把酒言欢而自己若有所失。</p>
<p>床上熟睡的妻子轻哼了一声，接着翻身睡去。哦，小东的老婆很漂亮，小波想到，而且还对小东的事业帮助很大。小波想到当时在大学里跟自己老婆的相遇。他被老婆当时的理想所吸引，为了公益的理想，他成立了自己的公益组织。</p>
<p>周末，他要跟儿子一起去波士顿参观大学。儿子马上就要高考了，填报志愿之前先去学校看看。</p>
<p>小波在机场又想起了他的那3个同学，跟儿子说，今天我们飞商务舱。于是去到柜台办升舱。升舱要1600美元，他咬咬牙，从钱包找一个有足够余额的卡给到柜员。柜台说，他的机票是廉价机票，不能升舱；又补刀说，他的卡里也没有足够的钱。</p>
<p>他俩最后还是飞的经济舱。</p>
<p>小波跟他儿子说，斯坦福也没什么了不起，我当初报考斯坦福，没考上；最后在塔夫大学也不错。儿子说他有希望上哈佛，他有音乐特长，而且成绩不错，老师也觉得他能上。小波很惊讶，不得不为儿子感到高兴。正好今天是去哈佛参加面试。他在外面等待，最后儿子出来告诉他，他把时间记错了，面试是昨天，而不是今天。</p>
<p>你有能进哈佛的头脑，怎么可能会记不住哈佛的面试时间？小波忍不住责骂。小波想为儿子出头，但是儿子不想让他大庭广众下吵闹。小波想到了同学小西，他肯定认识哈佛的教授，可以帮忙安排面试。</p>
<p>小波打了小西的电话，是空号。</p>
<p>小波打了小北的号码寒暄了一番。小北炫耀了他在海岛的神仙般的生活，每天遛遛狗，打打炮，还开了酒吧连锁。小北还说，上次小东结婚时，我们还聊起了你。我们那时有人说，小波呢？</p>
<p>原来小东结婚了我都不知道，曾经我们那么熟络，现在结婚居然都不叫我？我已经不在他们的社交层次里了吗？小波心中翻腾，但不忘正事，问他要小西的电话，小北说一会发给他。</p>
<p>这个一会真的好久，小波等不了，又拨打了小东的电话。电话里的小东听起来很焦虑，亲人住院了，说一会还要去赶飞机。小波顺口说到，你不是有私人飞机吗？小东严肃地说到，谁说我有私人飞机？小波觉得自己说错了话一样，赶紧道歉。</p>
<p>最终他要到了小西的电话。电话里他们聊得很欢乐，正事也都安排了，改天直接跟教务主任面试。而且小西也和小波约定后天一起见面吃饭。</p>
<p>事办妥了，小波和儿子很高兴。晚上儿子要去酒吧见哈佛的朋友，小波一起去了。来者是一个漂亮的女孩，学音乐的。女孩的另一个朋友，一会也坐过来了，是一个亚洲女孩，年轻漂亮。他们聊的挺嗨。小波幻想着，在海岛沙滩上上搂着这两个女孩，幻想她俩都是自己的女友，幻想着他的生活像同学小北一样美好。要走时，女孩跟他说，晚上他们还在，可以一起来继续嗨。小波说不了。</p>
<p>确认了儿子熟睡后，他轻手轻脚地出门去了那家酒吧。他看到了白天时那个女孩。他们一起聊。女孩对他从事公益事业很感兴趣，因为她也是，至少现在也是，一个天真的理想主义者。女孩问小波，如果你回到过去，你会做出什么不同的决定？</p>
<p>小波很坦诚。他说，我会尝试去赚更多的钱。那一刻，他明显地感受到了女孩的鄙夷。他开始解释。他跟女孩说了自己跟同学一开始都差不多，后来同学个个都比他成功。用他自己的话说，让他看到小西上电视时，那一刻，他清楚地感觉到一种疼痛！他说他一开始也是理想主义者，但现在他希望自己可以像他的同学那样。他说他现在很痛苦，因为没有同学成功。</p>
<p>小波的解释没有意义，反而更糟。女孩彻底地蔑视他，说他不知足，这点小屁心思真的很没意思。小波欲言又止。</p>
<p>第二天，跟儿子一起吃饭。他开始想，也许是自己把儿子培养的这么好，居然能够上哈佛了。到时儿子会不会反过来不承认他？会不会去否认他所做的一切？他开始嫉妒儿子了。</p>
<p>儿子的面试很成功。他们一起去小波的母校塔夫大学参观。小波特意去找大学时代的恩师，却得知他几个月前已经去世了。他居然不知道。</p>
<p>晚上，他换上了西服，去到跟小西约定的餐厅。服务员把他安排到一个边角位置。他指着大厅中间的一个桌子说，这个是空的。服务员说，是的，但是不可用。过了一会，小西来了，非常精神。服务员把他们领到刚才小波想要的那张桌子那里，请他们落座。小波不甘心地挖苦到，现在这个桌子可用了？服务员说，是的。</p>
<p>小西说他前几个月参加过恩师的葬礼。小西说小东确实有私人飞机。小西说小北有精神疾病。都是猛料。他试着问小西，问他是不是像自己一样，会有意地跟对方竞争呢？小西说，没有。小波说，一点都没有？小西说，好吧，也许在学校里时有那么一段时间，但之后&hellip; &hellip; 小西没有说完，但表达得非常清楚。他一点都不把小波认为是竞争对手。小波不想再聊下去了。</p>
<p>晚上他跟儿子一起去看了哈佛音乐社团的演出，酒吧里认识的那个女孩一个在拉琴，一个在弹琴。他看着她们，听着看着台上的演出。有那么一瞬间，他似乎放下了，放下了与同学竞争落败的焦虑苦闷。就在那一刻，他觉得生活有另一番滋味。为什么呢？</p>
<p>也许只有放下的人才明白。</p>]]></content>
		</item>
		
		<item>
			<title>关于调试的11个真相</title>
			<link>https://shenxiaobing.com/posts/2019/11-truths-of-debugging/</link>
			<pubDate>Fri, 26 Jan 2018 15:31:59 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/11-truths-of-debugging/</guid>
			<description>&lt;p&gt;原文来自斯坦福 cs106a 课程的一份讲义。因为翻译能力有限，所以原文也一并贴在下面了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直觉和预感很好，只是你还得去验证它们。当预感和事实冲突时，事实总是胜出。这就是生活！&lt;/li&gt;
&lt;/ol&gt;</description>
			<content type="html"><![CDATA[<p>原文来自斯坦福 cs106a 课程的一份讲义。因为翻译能力有限，所以原文也一并贴在下面了。</p>
<ol>
<li>直觉和预感很好，只是你还得去验证它们。当预感和事实冲突时，事实总是胜出。这就是生活！</li>
</ol>
<ol start="2">
<li>
<p>不要寻找复杂的解释。即使是最简单的疏忽或错别字都会造成非常诡异的行为。认真地看代码，不要想着代码太简单不可能出错，就对简单语句一扫而过。</p>
</li>
<li>
<p>代码出问题的线索在你变量的值以及条件语句的流程中。尽力去看事实是怎样的。电脑不会误导你。从事实出发。</p>
</li>
<li>
<p>要有系统性，要坚持不懈。别慌张！Bug 又不会在你的代码里乱动，也不会去欺骗或者躲避你。它只是呆在那个地方，每次都以相同的方式做着错误的事情。</p>
</li>
<li>
<p>如果你的代码一分钟前还好好的，现在却出问题了，那么你最后一次改动了什么？这是条超级可靠的经验法则，也就是为什么你的小组长告诉你代码要边写边测试，而不是到最后一起测试。</p>
</li>
<li>
<p>不要为了追踪 bug 去随意地改动代码。这就好像科学家在做实验时一次性更改了不止一个变量。这会让我们更难解释观察到的行为，而且你可能会引入新的 bug。</p>
</li>
<li>
<p>如果你发现有些代码错误，但是看起来跟你要追踪的 bug 并不相关，也要顺手修复这些代码错误。许多时候错误的代码与 bug 是相关联的或者是以你没有想象到的方式掩盖了bug。</p>
</li>
<li>
<p>你应当能够像福尔摩斯一样解释一系列的事实，测试和最终引导你找到 bug 的推论。而如果有一个 bug 而你又无法定位它，你应当尝试去跟一个认真的第三方论证为什么你的每一个函数不可能有 bug。其中一份论证会有漏洞，因为你的某个函数事实上有 bug。尝试构建论证可能会帮助你发现这个漏洞。</p>
</li>
<li>
<p>对自己代码的信心要有批判心态。当你直觉某个函数是无辜的，那几乎不可能发现这个函数中的 bug。只有当事实证明毫无疑问某个函数不是问题的源头，你才可以假定它是正确的。</p>
</li>
<li>
<p>尽管你需要系统地 debug，但还是会需要信心、预感和猜测等。在你系统性地搜寻 bug 时，用你的直觉去指导搜寻的顺序。先去检查你最怀疑的函数。好的直觉从经验中获得。</p>
</li>
<li>
<p>debug 依靠客观和理性的路径。它依赖对你的代码作用的理解以及全局的合理判断。debug 比写代码还要耗费心智。当你尝试追踪 bug 而无果的时间越长，你会越不能理智判断。当你意识到无法对你的代码 debug 进行理智判断时，休息一下，睡个觉。当你思路不清时你没法 debug。很多时候一个程序员在深夜花费数个小时去定位 bug 却最终在凌晨4点放弃。第二天他们10分钟内就找到了 bug。什么让他们能够在第二天这么快地找到 bug？也许他们只是需要睡眠以及合理判断恢复的时间。或者可能他们的潜意识在他们睡觉的时候想出来了。不管怎样，「去干会别的事情，回来，然后立即找到 bug 」这样的场景太常见，不可能只是意外。</p>
</li>
</ol>
<p>以下是原文：</p>
<ol>
<li>
<p>Intuition and hunches are great—you just have to test them out. When a hunch and a fact collide, the fact wins. That's life in the city.</p>
</li>
<li>
<p>Don’t look for complex explanations. Even the simplest omission or typo can lead to very weird behavior. Everyone is capable producing extremely simple and obvious errors from
time to time. Look at code critically—don’t just sweep your eye over that series of simple statements assuming that they are too simple to be wrong.</p>
</li>
<li>
<p>The clue to what is wrong in your code is in the values of your variables and the flow of
control. Try to see what the facts are pointing to. The computer is not trying to mislead
you. Work from the facts.</p>
</li>
<li>
<p>Be systematic and persistent. Don’t panic. The bug is not moving around in your code,
trying to trick or evade you. It is just sitting in one place, doing the wrong thing in the same
way every time.</p>
</li>
<li>
<p>If you code was working a minute ago, but now it doesn’t—what was the last thing you
changed? This incredibly reliable rule of thumb is the reason your section leader told you
to test your code as you go rather than all at once.</p>
</li>
<li>
<p>Do not change your code haphazardly trying to track down a bug. This is sort of like a
scientist who changes more than one variable in an experiment at a time. It makes the
observed behavior much more difficult to interpret, and you tend to introduce new bugs.</p>
</li>
<li>
<p>If you find some wrong code that does not seem to be related to the bug you were tracking,
fix the wrong code anyway. Many times the wrong code was related to or obscured the bug
in a way you had not imagined.</p>
</li>
<li>
<p>You should be able to explain in Sherlock Holmes style the series of facts, tests, and
deductions that led you to find a bug. Alternately, if you have a bug but can’t pinpoint it,
then you should be able to give an argument to a critical third party detailing why each one
of your functions cannot contain the bug. One of these arguments will contain a flaw since
one of your functions does in fact contain a bug. Trying to construct the arguments may
help you to see the flaw.</p>
</li>
<li>
<p>Be critical of your beliefs about your code. It’s almost impossible to see a bug in a function
when your instinct is that the function is innocent. Only when the facts have proven
without question that the function is not the source of the problem should you assume it to
be correct.</p>
</li>
<li>
<p>Although you need to be systematic, there is still an enormous amount of room for beliefs,
hunches, guesses, etc. Use your intuition about where the bug probably is to direct the
order that you check things in your systematic search. Check the functions you suspect the
most first. Good instincts will come with experience.</p>
</li>
<li>
<p>Debugging depends on an objective and reasoned approach. It depends on overall
perspective and understanding of the workings of your code. Debugging code is more
mentally demanding than writing code. The longer you try to track down a bug without
success, the less perspective you tend to have. Realize when you have lost the perspective
on your code to debug. Take a break. Get some sleep. You cannot debug when you are not
seeing things clearly. Many times a programmer can spend hours late at night hunting for a
bug only to finally give up at 4:00A.M. The next day, they find the bug in 10 minutes. What
allowed them to find the bug the next day so quickly? Maybe they just needed some sleep
and time for perspective. Or maybe their subconscious figured it out while they were asleep.
In any case, the ―go do something else for a while, come back, and find the bug
immediately‖ scenario happens too often to be an accident.</p>
<p>— Nick Parlante, Stanford University</p>
</li>
</ol>]]></content>
		</item>
		
		<item>
			<title>我所知的地方棋牌</title>
			<link>https://shenxiaobing.com/posts/2019/an-overview-of-local-board-game/</link>
			<pubDate>Wed, 03 Jan 2018 15:35:45 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/an-overview-of-local-board-game/</guid>
			<description>&lt;p&gt;从业内所知的2016年几宗大的地方棋牌收购案之后，地方棋牌开始火爆起来，可以说是遍地开花。由于开发成本低、开发门槛低加上闲徕、乐玩等大的地方棋牌厂商的财富示范效应，在中国二三四线城市出现了无数的地方棋牌公司。而其他行业的老板，眼馋闲徕、乐玩在被收购时漂亮的盈利数据，也纷纷往这方面投资。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>从业内所知的2016年几宗大的地方棋牌收购案之后，地方棋牌开始火爆起来，可以说是遍地开花。由于开发成本低、开发门槛低加上闲徕、乐玩等大的地方棋牌厂商的财富示范效应，在中国二三四线城市出现了无数的地方棋牌公司。而其他行业的老板，眼馋闲徕、乐玩在被收购时漂亮的盈利数据，也纷纷往这方面投资。</p>
<h2 id="地方棋牌的特征">地方棋牌的特征</h2>
<p>经过了2017年一整年的爆炸式发展，棋牌游戏呈现出如下特征：</p>
<ol>
<li>
<p>要活下来不难，要做大不易。</p>
<p>针对一个竞争还没那么激励的地级市甚至县级市，做好这个地方的玩法，基本上可以保证团队能够生存下来。但同时，无数的团队在产出地级市、县级、甚至某个更细小地区的玩法，几乎没有哪个地区能够幸免于这种产品泛滥的竞争。</p>
<p>与此同时，几乎每个省市都有几个巨头存在。错过了先发优势，要做大的难度很大。</p>
</li>
<li>
<p>竞争激烈，不择手段。</p>
<p>地方棋牌在某个市或者某个县直接正面竞争，与以往在线游戏在全国层面的竞争相比，眼前的这个敌人无比明确。于是，不择手段。</p>
<p>几乎没有哪家做得好的棋牌没有遭遇过网络攻击。甚至只是在某个地区做得好，你都有可能遭受到其他公司的打击。我甚至见过攻击方不知道你服务器的明确地址所在，就索性把某个区域的服务器全部挨个攻击一遍。</p>
</li>
<li>
<p>产品根据遇到的挑战不断演进。</p>
<p>这个是理所当然的，一成不变就是等死。</p>
<p>越来的越多的棋牌游戏增加了比赛场模式、增加了俱乐部模式、增加了第三方聊天功能，每个变化都在应对一个具体的问题。</p>
</li>
</ol>
<!-- raw HTML omitted -->
<h2 id="地方棋牌的产品形态">地方棋牌的产品形态</h2>
<p>从产品方面来说，地方棋牌主要覆盖了麻将、扑克和桥牌等国内最常见的游戏道具。一些更为地方性的棋牌道具，比如河南的「推饼」用的饼牌等也都有人在做。所以可以说，地方棋牌无所不包，不管你在哪个省、哪个市，玩什么，都能被产品化为一款产品的一个玩法。相对来说，湖南和四川是地方棋牌红海中的红海。</p>
<p>地方棋牌从闲来游戏开始做房卡模式，就是游戏开房要消耗房卡。一开始，由「代理」低价批发房卡，转售给玩家，代理赚取差价。但现实中的「赌博」群，群主是要抽成的，所以没必要再收房卡钱，于是就有了代开房功能，即群主代理开好房，让别人去打，打完大赢家给钱。代理非要手动去开房不胜其烦，于是市场出现了第三方服务「开房机器人」，在群里的人直接用指令自动开房，不用再劳烦群主代理。再后来，出现了俱乐部模式，凡是加入了俱乐部的玩家，可以自由创建游戏房间，直接扣除俱乐部主人的房卡，俱乐部主人根据俱乐部提供的游戏战绩去找对应的玩家进行结算。现在，俱乐部几乎成了标配。可以看出，地方棋牌在根据现实中的规则去修改自己游戏中的规则，一点点地提高代理的效率，一点点地降低玩家实际买卡的成本（接近于0）。</p>
<p>地方棋牌除了开房，一般会有匹配场和比赛场，作为开放模式的辅助，一般是用来活跃用户。近来线下比赛越拉越多，通过线下比赛提升品牌，也称为地方棋牌运营的一个方式。</p>
<h2 id="地方棋牌的运营手法">地方棋牌的运营手法</h2>
<p>翻遍当前市面上主流的地方棋牌，见不到一个在游戏内做大量运营活动的游戏。常见的运营活动有：</p>
<ul>
<li>内置抽奖，用于刺激活跃或分享</li>
<li>内置红包，用于刺激活跃或分享</li>
<li>内置比赛，用于激励活跃和玩法补充</li>
<li>内置礼品兑换，用于激励活跃</li>
<li>公众号活动，因为游戏没有配套运营工具，大部分自发的活动只能手动去进行</li>
<li>线下比赛，这个有些游戏会专门开发线下比赛的工具，方便合伙人和代理去拓展用户</li>
</ul>
<h2 id="地方棋牌的推广体系">地方棋牌的推广体系</h2>
<p>这里的推广方式，主要说下地方棋牌的推广体系。</p>
<h3 id="闲来模式">闲来模式</h3>
<p>普通玩家，只有拥有一个微信群，就可以成为闲来的代理。代理批发买房卡，有相当的折扣。普通玩家要想拥有房卡，除了游戏内高价购买、自己成为代理，就只能通过代理的二次销售了。</p>
<p>不确定在普通代理上面，是否有地区总代之类的角色。</p>
<p>总的来说，闲来模式就是只有一层代理、代理低买高卖。</p>
<h3 id="提成模式">提成模式</h3>
<p>玩家，充值成为代理，代理便宜买房卡。同时，代理可以发展下级玩家。下级充值，上级可以拿到提成。一般提成可以拿到二级或三级。代理买到的便宜房卡则通过俱乐部内代开房进行消耗。</p>
<p>就是说，在提成模式下，代理的收益来自于提成、以及为用户代开房的抽成收益。</p>
<h3 id="混合模式">混合模式</h3>
<p>一般就是在上述两种主要模式之间的混合。</p>
<p>由于群主代理有抽水收加上拿钻成本低，代理再次销售房卡时的价格会定的极低，造成所谓「乱价」现象。乱价会影响代理整体的利益。同时，相对提成模式，代理少了一部分发展下级用户的动力。</p>
<p>而提成模式，则主要是有传销和赌博的法律风险。</p>
<h2 id="地方棋牌的风险和常见问题">地方棋牌的风险和常见问题</h2>
<h3 id="违法违规风险">违法违规风险</h3>
<p>做地方棋牌的人都知道，玩家在进行赌博，而且越多人赌博、赌的频繁，他们越挣钱。所以，他们不可能去彻底打击赌博，只能是去表明赌博与他们无关。地方棋牌的运营商会尽可能地撇清与赌博者和赌博组织者的联系。比如，在宣传上，大张旗鼓地宣传赌博违法，违者封号，但实际上，没人真的去做，至多会做做样子。</p>
<p>但常在河边走哪有不湿鞋，我在公众号上看到两家被公安局端掉的棋牌公司。大家都是游走在灰色地带，一不留神，可能就越界了。这个界，据说就是：不参与代理组局。</p>
<h3 id="网络攻击风险">网络攻击风险</h3>
<p>两家棋牌商在一个县城狭路相逢，敌人只有一个且无比具体，不择手段的结果就是：用网络攻击，让它几天无法访问，进而“搞死它”。</p>
<p>于是一场场的互相的攻防来来往往，只有一旁的阿里云笑呵呵地看着他们互殴，兜售着自己的高防服务器方案。</p>
<h3 id="微信封号问题">微信封号问题</h3>
<p>地方棋牌推广的基础就是微信，如果没有微信，就没有今天的地方棋牌。赌博会给地方棋牌带来利益，但对微信来说，这些全部都是额外的负担：监管负担和法律风险。</p>
<p>每隔几天，就有代理的账号或群被微信封禁，多半都是微信认为这个账号异常，一般是有频繁的红包行为。</p>
<p>为了应对微信封号问题，棋牌室也给出了自己的对策：将群或红包转移到别的地方。</p>
<ol>
<li>
<p>自己开发聊天软件</p>
<p>开发一个聊天软件并不难，毕竟只给自己用户使用，并不需要高并发。在聊天软件中接入第三方支付红包，同时打通与游戏账号的关联。</p>
<p>于是，玩家直接在新聊天软件中开房、结算。</p>
</li>
<li>
<p>接入第三方聊天软件</p>
<p>开发一个软件毕竟麻烦，索性直接接入别人的软件。别人的软件需要用户，而棋牌商需要一个微信的替代品。</p>
<p>第三方聊天软件可能就没有第三方支付红包这样的功能，但好歹用户可以互相聊天。</p>
</li>
<li>
<p>在游戏中内置聊天功能</p>
<p>地方棋牌的俱乐部功能现在成为了标配，有些俱乐部里就可以直接进行聊天。</p>
</li>
</ol>
<h3 id="苹果审核不通过问题">苹果审核不通过问题</h3>
<p>地方棋牌相对于其他网络游戏，苹果商店的通过率更低。对此，没有特别好的办法，只能是认真阅读苹果审核要点，进行相应的修改。大部分的棋牌游戏，都是用了 lua 语言进行热更新，可以很容易规避一些审核的问题。</p>
<p>我们自己遇到过的审核问题有：</p>
<ol>
<li>定位权限问题：苹果认为我们不需要定位功能，再三沟通也不行。</li>
<li>支付功能：苹果不允许使用第三方微信支付。</li>
<li>重复 app 问题：使用两个账号提审同一个包</li>
<li>基础网络协议问题：最后我们还是从 udp 改成了 tcp</li>
</ol>
<h3 id="微信朋友圈分享屏蔽问题">微信朋友圈分享屏蔽问题</h3>
<p>地方棋牌无一例外，靠游戏内的微信分享去进行裂变。但分享的内容多是一个链接，也有用图片分享的。无论哪种形式，只要分享的人多了，都会被微信屏蔽。之后你再去分享，好友完全看不到。</p>
<p>对此，我们也没招。我看到闲来已经把所有的游戏内分享改成了分享给好友，不发朋友圈了。</p>
<h3 id="热更新功能问题">热更新功能问题</h3>
<p>无一例外，地方棋牌都需要热更新功能，这样可以不用重新提审，就能增加新玩法。如果你的棋牌游戏没有，基本上可以确定这个游戏游戏和开发商是坑。</p>
<h2 id="地方棋牌使用的第三方服务">地方棋牌使用的第三方服务</h2>
<p>地方棋牌运营过程中难免会用到第三方服务，这些是我们实际用到的。</p>
<h3 id="云服务器">云服务器</h3>
<p>这个自不必说。游戏都需要服务器，现在几乎都是直接买云服务器，没人去自己搭建服务器了。</p>
<h3 id="苹果企业签名">苹果企业签名</h3>
<p>如果你的苹果版本没有通过审核，但又需要上线，就只能使用企业签名打包。没有自己的苹果企业账号可以找第三方提供签名打包服务。大概是每款游戏每月300元。</p>
<h3 id="高防服务器">高防服务器</h3>
<p>网络攻击的频繁使高防服务器成为一个刚性需求。高防服务器，可以承载几百 Gbps 的流量攻击，但价格也相当昂贵。</p>
<h3 id="红包支付功能">红包支付功能</h3>
<p>从游戏内发放红包或者是给代理提现等，需要在网页端或者游戏内实现红包发放和提取功能。这些也都有第三方厂家在提供支持。</p>
<h3 id="在线客服工具">在线客服工具</h3>
<p>直接购买第三方的服务，直接将一个链接集成在游戏内，玩家点击后进入一个网页，跟客服进行交流。这个网页，以及背后的客服后台，直接由第三方提供。当然你要自己写一个，也是可以的。</p>
<h3 id="代开房机器人">代开房机器人</h3>
<p>有些棋牌游戏还没有俱乐部这种自动代开房功能，手动代开房又太费事，于是就有了这种第三方工具的用武之地。按照第三方工具提供的 API 去实现接口，就可以在群里直接发送文本指令开房。开房消耗群主的房卡，同时开完后会自动发送战绩到群里以方便结算。</p>
<p>我调查的其中一个，是按照每天每群6元收费的。</p>
<h3 id="软著和版号待办">软著和版号待办</h3>
<p>这个所有网络游戏都需要的，跟着党走，才有汤喝。</p>
<h2 id="结语">结语</h2>
<p>地方棋牌的神话还在上演，几天前一家浙江的地方棋牌公司又被几十亿收购了。市场上永远不缺乏「别人家的公司」，但实际上自己家的公司呢？苦乐自知吧。</p>]]></content>
		</item>
		
		<item>
			<title>看呐，那个人在玩《王者荣耀》</title>
			<link>https://shenxiaobing.com/posts/2019/a-man-playing-wangzherongyao/</link>
			<pubDate>Wed, 02 Aug 2017 16:23:56 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/a-man-playing-wangzherongyao/</guid>
			<description>&lt;p&gt;那个人在玩《王者荣耀》。&lt;/p&gt;
&lt;p&gt;他眼睛死死地盯着屏幕，双手死死地握着手机，右手拇指不停地点着屏幕。他不自觉地把伸出了下嘴唇，包住了上嘴唇。他自己都没有意识到他自己的这个习惯。他表情严肃，看不出游戏中的战况如何。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>那个人在玩《王者荣耀》。</p>
<p>他眼睛死死地盯着屏幕，双手死死地握着手机，右手拇指不停地点着屏幕。他不自觉地把伸出了下嘴唇，包住了上嘴唇。他自己都没有意识到他自己的这个习惯。他表情严肃，看不出游戏中的战况如何。</p>
<p>妻子跟他说了句话，他没有应答，也许“嗯”了一声，也许没有。十个月大的儿子在沙发上爬着玩，看到了他手里发亮的手机，兴奋地爬了过来。他扶着沙发的边缘站起来，兴奋且满怀期望地伸手去抓手机。那个人正打到紧要处，丝毫不敢怠慢。他挪动椅子，转过头去，好让儿子看不到。那小孩子一点也不气馁，他越过沙发边缘爬到了相邻的工作台上。那个人知道这样不安全，趁着等待复活的时间把儿子抱到地上。在地上爬，肯定没啥事，他这么想着。</p>
<p>妻子要去洗澡，让他看着儿子。他赶紧说，你先等等，等我打完这一局。妻子无奈，继续跟儿子一起玩着。儿子又爬到了沙发上，又伸手来夺手机。他一把将他推倒，儿子倒在沙发上的抱枕堆里，自己翻身，站了起来，又要来拿。妻子看见了，作势对儿子说，来，咱们进里屋吹空调去，别影响你爸。不然一会他打输了，又要发脾气。</p>
<p>那个人听到这番揶揄的话，并没有任何反应。他当然不会因为打输了就去对亲人发脾气，至少他自己是这么想的。现在，他正忙于一场团战，他正拼命地按着1-2-3和攻击键。现在地方只剩下两个残血的家伙，自己还有大半管血。正好，来个双杀，他心里想。于是他按了技能1，希望能把这俩家伙晕住，然后自己一顿疯狂扫射。不过预判有问题，没有晕到人。敌人没有因为残血就打算撤退，反而丢了一套技能过来。这下不妙。好在闪现还在，他开始后退打算走到墙边，闪现穿墙逃走。可惜他们眼看着就追上来了，一着急直接闪现撞墙，伴随着屏幕上“团灭”的提示，他也回到了等待复活的基地。</p>
<p>FUUUUUUUUUUUUUCK!他痛苦地喊着，却没有发出声音，只能看到他紧闭的双眼，张大的嘴巴和绷紧的脸。他把手机摔倒了沙发的另一端，用力地握紧拳头砸在新买的工作台上。桌子看起来没事，手也没事，就是有点疼。在等待复活快结束时，他去把手机捡了回来，叹了一口气，继续双手握紧手机拼命点着屏幕。</p>
<p>妻子在里面叫了他一声，他没听清她说的是什么。妻子又叫了一声，他听清了，是叫他拿一个玩具进去给儿子玩。他没空，右手拇指拼命地点着。操！他骂了一声，他又死了回到基地等待复活。放下手机，他拿了玩具，把它丢到了床上，差一点砸到儿子。妻子赶紧拍拍儿子说，你爸爸又打输了，咱别惹他，来玩玩具吧。</p>
<p>他心里苦笑，却一刻没停立刻回到了原来的位置，拿起手机继续。在接下来的10分钟里，他又砸桌子1次，双手掰手机一次（我想他肯定不会用到真能把手机败坏的力气），用牙咬沙发一次，咬手一次（只是疼不见血，他知道自己在做什么，应该是吧）。每次发泄之后，他又会叹口气，拿起手机继续。</p>
<p>最后一波团战，他的2技能成功命中一个残血敌人，拿下击杀，剩下的3个队友，趁机推了地方基地，胜利了。我的作用还是蛮大的，他心里想着，虽然MVP应该不是我。确实不是他，他的评分全队第四，队友给他点了“给力队友”的赞。</p>
<p>在他脸上出现短暂的放松之后，又开始紧张起来。新的一局开始了。妻子在里屋喊，打完了没有？我还要洗澡呢。</p>
<p>哦！忘记了！等这局打完！他回复道。</p>
<p>里屋没有回应。</p>]]></content>
		</item>
		
		<item>
			<title>读《寻路中国》</title>
			<link>https://shenxiaobing.com/posts/2019/reading-notes-country-driving/</link>
			<pubDate>Sun, 30 Jul 2017 13:59:59 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/reading-notes-country-driving/</guid>
			<description>&lt;p&gt;《寻路中国-从乡村到工厂的自驾之旅》，讲述了2001-2007年间作者在中国西北、北京农村以及浙江工厂的见闻。作者彼得海斯勒（中文名：何伟）是一个美国记者，长期住在中国。读他的书，就好像是将自己对中国的视角由第一人称变成了第三人称，借由这个转变，你会看到之前视而不见的东西。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>《寻路中国-从乡村到工厂的自驾之旅》，讲述了2001-2007年间作者在中国西北、北京农村以及浙江工厂的见闻。作者彼得海斯勒（中文名：何伟）是一个美国记者，长期住在中国。读他的书，就好像是将自己对中国的视角由第一人称变成了第三人称，借由这个转变，你会看到之前视而不见的东西。</p>
<p>全书分为三个部分，分别是作者在西部自驾的经历、北京农村居住的经历以及浙江工厂开发区的经历。总体来说，作者并不想刻意地给出一个笼统的结论，来表明自己的观点。他只是作为旁观者去观察，偶尔发表自己的看法，或者用别的方式表达自己的不同意见。</p>
<p>从另一个角度讲，书的三部分就是中国农村在在过去以及现在的三种归宿。算上书中没有写而现实中发生的，则有4种。</p>
<p>西北颓败的古长城脚下的村落，地处偏远，中国的城镇化进程绝无可能辐射到的地区，最终的结局只有荒芜。</p>
<p>北京北郊的三岔村，一开始的迹象跟西北农村一样，全村只有一个小孩儿。因为年轻人都搬去了怀柔或者北京或者去了别的城市打工。但因为北京的发展和汽车的发展，这里成了城市人放松的乡村之旅的目的地。村支书还与某些投资者有一些私下的产权交易。虽然这里还是只有一个小孩儿，但陆续地开通了公路，建起了多个旅馆和饭馆。</p>
<p>浙江丽水农村，这里则是被规划成了制造业的开发区。政府卖地、从银行贷款、修路，在原本的农村建起了连绵的厂房。老板们来这里制造胸罩扣、钢圈、仿皮、鞋子、打火机、体育用品等。温州这块，本来地就不好种，因此当地的人们头脑活络，倾向于经商。</p>
<p>最后，就是我们经常在大城市扩张过程中看到的，农村变成了城市的一部分。不过作者没有写到这种情况。</p>
<p>从这个角度看，作者写的就是中国飞速发展这10年的农村和工厂，以及这其中的人、以及与人有关的东西。</p>
<p>飞速发展这10年，我刚好是在中学和大学之间。书中讲到的，我很多其实没看到。我没有注意到房价、没有注意到广东和浙江的制造业工厂、没有意识到中国的城镇化。我是两耳不闻窗外事，一心不知在干啥。但是通过作者，一个外国人的描述，我看到的比我自己可能经历过的还要多，他就是有能力让你看到司空见惯之外的事情。比如，作者说到中国教育制度过于强调背诵，尤其是毫无意义的信息，比如顾拜旦哪一年做了什么事情；他冷静地描写了一桌子的男人都在抽烟，旁边的6个月大的小孩儿则快哭了，一个男人拿起筷子蘸了啤酒给孩子去吮吸；他描写了在城市里城市人对打扮老土的农村人的漠视。在打工族在工厂求职时问到工作时间时，作者这样描述老板的回答：”他保证让大家每天有是个小时的活儿干，每个月放假的时间不超过一天。“</p>
<p>其实，书里面记录的全是小事。正是因为都是小事，既真实又立体。这些小事穿插在当代中国的时代主题里，让经历过和不曾经历过的人，看见了。</p>]]></content>
		</item>
		
		<item>
			<title>一晃四个月</title>
			<link>https://shenxiaobing.com/posts/2019/how-time-flies/</link>
			<pubDate>Mon, 10 Jul 2017 18:09:35 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/how-time-flies/</guid>
			<description>&lt;h2 id=&#34;better-slow-than-never&#34;&gt;Better slow than never&lt;/h2&gt;
&lt;p&gt;四个月前的二三月份，我都仅仅写了一篇博文。四个月后的现在，四五六月完全没有写任何东西。曾经你为懈怠而自责，没想到那竟是你最勤奋状态最好的时候。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<h2 id="better-slow-than-never">Better slow than never</h2>
<p>四个月前的二三月份，我都仅仅写了一篇博文。四个月后的现在，四五六月完全没有写任何东西。曾经你为懈怠而自责，没想到那竟是你最勤奋状态最好的时候。</p>
<p>我用iHour记录自己编程的时间。工作期间，看到一个月也才投入了10-12小时，觉得太过懒散，起码每天可以挤出3小时，一个月至少也有将近100小时的投入。现在呢，4-7月没有任何时间投入。</p>
<p>就好像我前一段时间去跑步，觉得跑得好慢好累，还有时想偷个懒。总觉得那个状态不够好。现在有好几个月没去跑过了。</p>
<p>所以，当我在做事而觉得自己做的不够好时，反而是我最好的状态。否则，就是完全不做事的状态。</p>
<p>当你觉得自己做的不够好时，别自责和焦虑，放宽心，因为这代表你还在做事。</p>
<p>做了总比不做好，好太多。</p>
<h2 id="关于王者荣耀">关于《王者荣耀》</h2>
<p>几个月前开始尝试《王者荣耀》。同事们天天中午在一起开黑，我起初都不为所动。当我注意到这些同事之前都是几乎没玩过游戏的，我开始尝试这块社交工具。</p>
<p>到现在，我累积已经卸载过5次了，当然现在手机上也还安装着。</p>
<p>我打的不好，有时侥幸，有时判断失误，有时不过脑子，有时操作太差，有时缺乏意识。在游戏的过程中，胜率略高于50%，仅此而已。</p>
<p>在晚上不受打扰的时候，捧着手机，晚上三四个小时，结果排位愣是从黄金4星变成了黄金3星。不是你坑，就是别人坑，或者敌人太狡猾。</p>
<p>如果每局比赛，都对应一个人的重大事件，那么这个人恐怕早已看透人生。我以为看透了这个游戏后，就会去卸载他。是啊，赢一局输一局，为何？为乐趣？输多赢少，动怒气，伤神伤身，影响家庭（玩游戏时一般不想被打扰），而且还会消耗大量的时间。</p>
<p>但是，每次卸载后，又都会装回来。或者是忘记了那些痛苦，或者是社交目的，或者是想也许通过练习能够提升水平。或许，是真心觉得好玩，真的喜欢玩，虽然有那么多的不爽。</p>
<p>我得承认，那些痛苦都是我自己的选择。我可以在被偷袭时候，不去捶墙；我可以在该睡觉的时候放下手机；我可以在该学习的时候，拿起书本；我可以在几局之后稍事游戏；我可以在平时熟悉英雄技能，提升水平。</p>
<p>我选择了这些痛苦。也许，我可以尝试在面临选择时，选择更为理智的路。我需要这种锻炼。</p>]]></content>
		</item>
		
		<item>
			<title>在中国买房子——读《欧成效文集》</title>
			<link>https://shenxiaobing.com/posts/2019/about-real-estate/</link>
			<pubDate>Sat, 18 Mar 2017 20:57:38 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/about-real-estate/</guid>
			<description>&lt;p&gt;我是从同学那里获得的《欧成效文集》，是两个pdf文件。在此之前，我从未听说过这个人。作者是上海的一个炒房者，应该是颇有成就，在这个行业内威望颇高。文集里的文章几乎都是以论坛文章的风格写就的，肆意却不够严谨。不过，几乎从未关注过房地产的我，还是大开眼界。&lt;/p&gt;
&lt;p&gt;以下就是《欧成效文集》中的主要观点。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>我是从同学那里获得的《欧成效文集》，是两个pdf文件。在此之前，我从未听说过这个人。作者是上海的一个炒房者，应该是颇有成就，在这个行业内威望颇高。文集里的文章几乎都是以论坛文章的风格写就的，肆意却不够严谨。不过，几乎从未关注过房地产的我，还是大开眼界。</p>
<p>以下就是《欧成效文集》中的主要观点。</p>
<ol>
<li>
<p>要不要买房？买！</p>
<p>国家每年的印钞量惊人，而超发的货币，并没有因此造成物价飞涨，因为这个钞票被房地产吸收了。因此：钱不值钱，必须找到合理的资产去进行保值，而房产是最有效的工具；国家可能还会继续印钞，而有房产者才可以利用房产获得这部分超发货币；房地产还会继续上涨，尤其是超一线城市，据他的计算，上海的房价见顶是在25万一平。</p>
</li>
<li>
<p>政府调控房价会跌么？长期一定会助涨</p>
<p>交易产生财富。而举凡增加交易成本的措施，都会降低交易的效率。政府调控，就是人为地设置障碍，增加交易成本，不管是限购、限贷、重税等，最终这些成本都会反映到房价上去。也许房产交易会因为政府干预而暂时冻结，但房产价格不会因此下跌，在稳定一段时间后，房价会报复性上涨。</p>
<p>这里有一个所谓”二阶经济学“概念，是说要考虑到对面的反制措施。比如，政府加重税，结果是卖房者不买账，由买房者承担或者直接加到房价里；比如限购限贷，这样可购房的群体变小，那卖房者也不会因此降价，他会一直等到自己满意的价格出现，这时短期看来房价没涨，因为没有成交，但一旦成交量放大，就会发现房价噌噌地涨。</p>
<p>而房价在政府不调控也飞涨的原因就是：房子真的值这么多钱。至于为什么一个每年耗损2%的资产会持续增值，还是要回到政府的滥发钞票上去。</p>
</li>
<li>
<p>房价可能会崩盘吗？可能会</p>
<p>作者参考香港楼市崩盘的例子，猜测崩盘的话，首年大跌30%，后续2-3年继续叠20%-30%；后面国家就会出来救市，房子起底回升，回到比崩盘前还要高的位置。</p>
<p>为了避免崩盘蒙受损失，要尽量买笋盘，避开注定涨幅不足的盘，比如：装修超好溢价超高的豪华楼盘。</p>
</li>
<li>
<p>买房自住要考虑升值吗？要！</p>
<p>不管自住还是投资，房产最主要的属性就是金融资产，不升值就是赔钱买卖。</p>
</li>
<li>
<p>买房子的钱从哪里来？借！</p>
<ul>
<li>多认识有钱人，直接借；</li>
<li>信用贷款</li>
<li>房产二次抵押贷款</li>
<li>信用卡循环套利</li>
<li>等等</li>
</ul>
</li>
<li>
<p>房价是炒房者炒上去的么？不是。</p>
<ul>
<li>炒房者并没有想象的那么多</li>
<li>超一线城市投入几乎整个国家的资源，房价现在是低不是高</li>
<li>国家大量印钞并引入房地产</li>
<li>需求</li>
<li>政府调控加剧或者提前引起了房价的上涨</li>
</ul>
</li>
<li>
<p>房地产有泡沫吗？有！</p>
<p>因此，不要买太远的，不要没有人口净流入城市的，不要买溢价过高的；尽量买笋盘，量力而行。</p>
</li>
<li>
<p>贷款怎么选？选等额本息，选最长还款期的</p>
<p>这里说的贷款是商业银行的房贷。因为利息超低还有折扣，因此无论实际情况如何，都可以直接选还款期最长的且使用等额本息方式还款。</p>
</li>
</ol>
<p>这两本pdf没有目录，因此看完后，只能凭印象整理出印象最深的几点，并且跟炒房有关的实际技巧和太繁琐的我都略过了，只写了跟普通购房者相关的一些东西。</p>]]></content>
		</item>
		
		<item>
			<title>《CDN技术详解》笔记——CDN是什么</title>
			<link>https://shenxiaobing.com/posts/2019/reading-notes-what-is-cdn/</link>
			<pubDate>Wed, 08 Feb 2017 15:52:25 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/reading-notes-what-is-cdn/</guid>
			<description>&lt;p&gt;最近粗略地读完了《CDN技术详解》这本书。书中有一部分几乎完全是只看得懂文字而看不懂意思，附录的技术实操部分也直接跳过。尽管如此，读完了还是很有收获，不仅仅对CDN的理解更深了一些，对网络相关的内容如DNS协议、SSL协议等也顺带地了解了一些。&lt;/p&gt;
&lt;p&gt;本文根据该书的阅读笔记整理而成，简要地介绍了CDN的作用、原理和类型等。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>最近粗略地读完了《CDN技术详解》这本书。书中有一部分几乎完全是只看得懂文字而看不懂意思，附录的技术实操部分也直接跳过。尽管如此，读完了还是很有收获，不仅仅对CDN的理解更深了一些，对网络相关的内容如DNS协议、SSL协议等也顺带地了解了一些。</p>
<p>本文根据该书的阅读笔记整理而成，简要地介绍了CDN的作用、原理和类型等。</p>
<h2 id="cdn是什么">CDN是什么</h2>
<p>CDN，英文名Content Distribute Network或者Content Delivery Network，中文名内容分发网络。顾名思义，就是协助网络内容的分发。CDN本质上是服务器集群和一套调度系统。通过服务器集群，覆盖更广的用户；通过调度系统分配最合适的服务器给用户访问，从而能够让最广大的用户群体更快地访问到网络内容。</p>
<h2 id="为什么需要cdn">为什么需要CDN</h2>
<p>网站A的服务器架在广州电信机房，如果没有CDN，全国各地的用户都会直接向这台服务器请求内容，就有可能出现以下几个问题：</p>
<ol>
<li>同时访问量大了，网站的服务器性能不足或者带宽不足。</li>
<li>从较远的物理位置（比如哈尔滨电信）来请求，经过大量中间节点造成延时。</li>
<li>如果用户不是电信网络，那么可能又会有延迟发生，因为不同宽带运营商互联互通的带宽有限，是经常发生拥堵的地方。</li>
<li>这种直接访问会占用中心节点带宽，造成拥堵，同样可能会影响体验。</li>
</ol>
<p>这些都是体验上的问题，同样还有成本上的考量。假如网站A想要自己动手搭建更多遍布全国的服务器来解决问题的话，成本非常高。除非网站A是流量巨大的网站，否则自建都不划算。</p>
<p>在CDN出现之前，解决这些问题的办法有：自建服务器集群、镜像技术和缓存技术。而CDN就是缓存技术的发展，可以认为是缓存技术的分布式集群实现。</p>
<h2 id="cdn的加速原理">CDN的加速原理</h2>
<p>CDN将网站的内容分发到（缓存到）遍布全部各个城市和地区的边缘节点上，同时通过调度系统（负载均衡系统）将不同地区不同运营商的用户合理调度到最适合的边缘节点以及节点内的服务器。</p>
<p>这样，CDN承载了网站的大部分流量，降低了网站压力；同时利用边缘节点，不走骨干网络减少骨干网络拥堵；而CDN的调度又避开了不同运营商互联互通；大量的分布全国的边缘节点实现了就近访问；同时，网站不需要承载巨量的CDN建设成本，只需要按照带宽付费即可。</p>
<h3 id="网站接入cdn">网站接入CDN</h3>
<p>以下是网站接入CDN的典型步骤：</p>
<ol>
<li>将需要加速的域名，添加一个由CDN提供的CNAME。这样用户在访问加速域名时，实际上会访问到这个CNAME。</li>
<li>CNAME在解析时会使用CDN的权威域名服务器。在那里根据DNS，去判断用户的物理位置和运营商情况等，然后返回边缘节点服务器ip客户端。</li>
<li>客户端再次请求返回的ip，边缘节点服务器由本地负载均衡服务器根据用户请求内容、节点服务器状态等动态因素去判断哪台服务器可以提供服务，通过302重定向到那台服务器。</li>
</ol>
<h2 id="cdn的架构">CDN的架构</h2>
<p>CDN从组成架构上主要由四个部分组成：分发系统、负载均衡系统、网络管理系统和运营系统。分发系统，就是由各级节点组成；负载均衡系统，就是根据节点情况和用户请求情况按照既定负载均衡策略进行合理调度的系统；网络管理系统，是给运维进行操作，同时也会收集各个节点的信息，为负载均衡系统的运行提供依据；运营系统，则是CDN商业化所需，提供各类查询服务。</p>
<p>CDN在以上组成部分中，又有多级架构，即：中心层-区域层-边缘层。每层的每个节点都有对应的分发系统、负载均衡系统和网络管理系统。设置多级架构的初衷是，减少向源站请求的次数。</p>
<p>CDN的一大作用就是降低源站的压力，尤其是视频网站，因为流量巨大。采用多级架构，则在每个层级都有所请求内容的缓存，如果边缘没有，就去查询区域层，如果有，就取回来；如果区域层也没有，就去中心层；如果中心层也没，就去源站请求，然后缓存在中心层。这种架构可以有效地降低需要去源站请求（回源）的频次。当然了，缓存本身也是有存储成本的，实际也不会把全部内容都缓存，即使缓存也不会每个边缘节点都缓存。这方面会综合性能和成本做平衡的考量。</p>
<h3 id="负载均衡策略">负载均衡策略</h3>
<p>负载均衡分为基于四层和基于七层的，基于四层的不了解请求内容，基于七层的可以根据请求内容解析结果更为精准地完成调度。</p>
<p>负载均衡需要考虑的因素有：</p>
<ul>
<li>物理距离（基于本地DNS判断，如果DNS配置错误，则会调度不合理）</li>
<li>ip地址</li>
<li>服务器健康状况</li>
<li>会话保持：相同客户的连贯业务解析到相同服务器</li>
<li>响应时间</li>
<li>会话能力阈值</li>
<li>服务器本身权重：比如费用</li>
<li>往返时间</li>
<li>其他信息：比如服务器当前可用会话数，最少选择次数</li>
</ul>
<p>基于以上因素，可以有静态策略和动态策略。静态策略是实现就固定的策略，动态策略则会考虑用户请求内容以及服务器状态等因素。一般情况下，会是两类策略的结合。</p>
<h2 id="cdn加速类型">CDN加速类型</h2>
<p>CDN加速类型，基本上分为静态内容加速和动态内容加速。静态内容，就是大家访问时看到的都一样，比如视频、图片、网页等；而动态内容，就是不一样的，比如社交网站的时间线、购物网站的搜索结果等动态网页。</p>
<p>静态内容加速，又分为了：网页加速、流媒体加速、文件传输加速和应用协议加速。应用协议加速，指的是企业应用在局域网和广域网传输的加速，也包括HTTPS的SSL加速。</p>
<p>不同加速类型的特点不同，所使用的服务器配置也不同，因此一般针对不同加速类型都是配置独立的系统，一般不共用。</p>
<h3 id="不同加速类型的实现原理">不同加速类型的实现原理</h3>
<p>这里特别要说的是SSL加速和动态加速。</p>
<p>HTTPS的实现方式要求在请求期间有较大量的计算，因此实现SSL加速一般是通过硬件来实现的。通过在服务器上添加SSL加速版或者将SSL加速板加在专用的SSL加速设备上来实现。</p>
<p>动态网页，一般包括4个部分：网页表现层（静态）、业务逻辑层、业务数据层、用户数据层。要想实现部分或者全部的动态网页加速的话，就要在边缘节点服务器中复制业务逻辑层来实现“边缘计算”，以及业务数据层和用户数据层。这样，用户在边缘节点就可以完成动态页面的访问。不过，这个方式要注意边缘节点数据库与中心节点的同步与一致。</p>
<h3 id="流媒体加速原理">流媒体加速原理</h3>
<p>流媒体，分为直播和点播加速。点播的话，基本上是将点播文件切成小块，然后根据实际情况分散缓存到边缘节点。</p>
<p>直播的话，内容无法提前缓存，在实际请求中，边缘节点会向上级节点去请求然后分发。虽然这个过程中没有了提前缓存带来的效率，但同样可以降低源站的压力，同样可以将用户调度到最合适的节点来提升效率。</p>
<h2 id="cdn未来的发展">CDN未来的发展</h2>
<p>CDN与云计算在混搭产生新的业务，比如云主机直接搭载CDN服务，比如未云主机服务的CDN等。
CDN与P2P技术也可以进行融合，来实现降低成本与提高效率。</p>
<p>相对于外国的顶尖CDN公司，国内CDN公司的增值较低，基本上就是转卖IDC资源。在CDN行业已成蓝海的情况下，为长尾用户推出特色服务，增加更多服务特色才有服务增值的可能。</p>
<p>这本书读起来挺难的，里面有很多偏技术的内容，无法理解；还有一些，只能熟悉下相关的名词；好一点的，就是能够理解其表达的逻辑。</p>
<p>即使是如此，这个依然是CDN行业的必读书，其他介绍CDN的一般性书籍基本上就不用读了。</p>]]></content>
		</item>
		
		<item>
			<title>《富爸爸穷爸爸》——从转变观念开始</title>
			<link>https://shenxiaobing.com/posts/2019/reading-notes-rich-dad-poor-dad/</link>
			<pubDate>Fri, 27 Jan 2017 03:21:09 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/reading-notes-rich-dad-poor-dad/</guid>
			<description>&lt;p&gt;这是一本早就听说过、早就想读、但迟迟没读、直到今天才读完的书。符合这个标准的书，应该还有很多，我会一本一本地补上。&lt;/p&gt;
&lt;p&gt;《富爸爸穷爸爸》是一个系列的书。当我在京东读书APP上搜索“富爸爸”这个关键词时，我发现仅仅是原作者（罗伯特清崎）自己写的就有十几本：&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>这是一本早就听说过、早就想读、但迟迟没读、直到今天才读完的书。符合这个标准的书，应该还有很多，我会一本一本地补上。</p>
<p>《富爸爸穷爸爸》是一个系列的书。当我在京东读书APP上搜索“富爸爸”这个关键词时，我发现仅仅是原作者（罗伯特清崎）自己写的就有十几本：</p>
<ul>
<li>富爸爸穷爸爸</li>
<li>富爸爸穷爸爸：实践篇</li>
<li>富爸爸的财务自由之路</li>
<li>富爸爸点石成金（财商教育版）</li>
<li>富爸爸富人的阴谋：关于金钱的八条新规则</li>
<li>富爸爸房地产投资指南</li>
<li>富爸爸提高你的财商</li>
<li>富爸爸投资指南</li>
<li>富爸爸致富需要做的6件事</li>
<li>富爸爸21世纪的生意</li>
<li>富爸爸年轻享受生活</li>
<li>富爸爸商学院</li>
<li>富爸爸财富大趋势</li>
<li>富爸爸孩子财商靠父母</li>
<li>富爸爸发现你孩子的财富基因</li>
<li>富爸爸不公平的优势：财商教育的力量</li>
<li>富爸爸我和埃米的富足之路</li>
<li>富爸爸成功创业的10堂必修课</li>
<li>富爸爸给你的钱找一份工作</li>
<li>富爸爸为什么A等生为C等生工作，而B等生为政府工作</li>
<li>富爸爸现金流游戏</li>
<li>富爸爸穷爸爸：漫画版</li>
<li>富爸爸穷爸爸（少儿猜图版）</li>
</ul>
<p>作者在《富爸爸穷爸爸》里说了，他不是一个作家，但他知道如何销售。我想我们肯定没有必要去把整个系列都读了。我猜测后面的书都是对第一本书的补充。</p>
<p>《富爸爸穷爸爸》本身并没有提供可行的操作步骤，他最大的贡献就是对人观念的影响：对金钱的观念、对工作的观念等。</p>
<p>全书的核心观点就是这么几条：</p>
<blockquote>
<ol>
<li>工作既不是赚钱的唯一方式，也不是最好的方式。除了工作，你还要有自己的“事业”：即不在场也能产生收入的资产。</li>
<li>富人购买资产，穷人购买负债。资产带来收入，而负债带走收入。所以，要合理的分配收入，尽可能地购买资产。你花出去的每一分钱，都本可以成为给你带来收入的资产。</li>
<li>提高财商才能识别投资机会，抓住投资机会。财商这个笼统的概念包含了财务知识、投资知识、市场理解以及法律知识的总和。</li>
</ol>
</blockquote>
<p>书中描述了这样一种被作者称为“老鼠赛跑”的我们感同身受的现象：无论如何存不下钱，挣钱了就去消费，涨工资了就去消费更贵的东西。没钱的人害怕日子过不下去，有钱的人害怕不能维持当前的生活水准。</p>
<p>如何解决？少支出多买资产，多用脑子，多学习。</p>
<p>在“老鼠赛跑”的逻辑下，只有降低开支或者有足够多的钱才能最终跳出这个赛道。降低开支是在没钱购买资产时，要降低开支来获取投资的本钱；在有钱时，也要克制购买奢侈品（或非必需品）的冲动，把钱投入到资产上。</p>
<p>说到底，还是把钱花到能生钱的资产上，让资产带来的收入去提高生活水准。如果还没有购买资产的本钱，少花点，少借钱。同时，不断地提高财商，去了解当前社会上可行的赚钱模式，向有经验的有钱人了解其经验。最后，利用自己掌握的知识和经验去寻找机会并抓住机会。</p>
<p>虽然书的后两章相对而言是偏实践的，但实际上也并没有提供能够直接可用的策略。从书中或者别人口中去学习赚钱模式，这种模式怕也是昨日黄花了。如何在没钱时获取到投资的钱，如何去寻找便宜的房子，如何去判断某个小公司的股票是否值得购买。这些细节上的实操，作者一概没有提及。只是告诉我们，要我们自己学习知识，去解决这些问题。</p>
<p>股市上每天都有股票在涨停，但永远不是你买的那只。市场上永远都有赚钱的机会，但你永远不知道它们在哪儿。</p>
<p>所以，这本书要告诉我们的就是另一种可能性。至于可能性有多大，作者只能说，财商越高，可能性越大。对于新手，我们永远可以从小的简单的做起，去积攒经验。</p>]]></content>
		</item>
		
		<item>
			<title>《余罪1》——连前传都撑不起来的系列第一部</title>
			<link>https://shenxiaobing.com/posts/2019/reading-notes-yuzui1/</link>
			<pubDate>Tue, 17 Jan 2017 15:40:34 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/reading-notes-yuzui1/</guid>
			<description>&lt;p&gt;在午休时前往老王牛肉面店的路上，我开始阅读这个京东阅读app免费赠送的电子书，毕竟同名网剧在前段时间热过一阵子。&lt;/p&gt;
&lt;p&gt;但这第一部既没有刑侦也没有犯罪，就只是主人公变成主角这条线的一段经历。全书就用一句可以概括：余罪在监狱里喊着“我是警察”，然后剩下的全部都是告诉你他为什么进了监狱。这个开头本身就没有什么吸引力，却要用整本书去铺开。如果这是电影，整个系列就可以不要拍了。事实上如果这是电影，就不可能会被拍出来。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>在午休时前往老王牛肉面店的路上，我开始阅读这个京东阅读app免费赠送的电子书，毕竟同名网剧在前段时间热过一阵子。</p>
<p>但这第一部既没有刑侦也没有犯罪，就只是主人公变成主角这条线的一段经历。全书就用一句可以概括：余罪在监狱里喊着“我是警察”，然后剩下的全部都是告诉你他为什么进了监狱。这个开头本身就没有什么吸引力，却要用整本书去铺开。如果这是电影，整个系列就可以不要拍了。事实上如果这是电影，就不可能会被拍出来。</p>
<p>也许对于作者而言，第一部其实就是第一章，这样算起来也不算太过冗长，同时也就解释得通了。</p>
<p>整本书唯一出彩的地方，就是在最后，所有人都被安排上车送往监狱，但实际上只有主人公一个人被实际上送进监狱。其他的部分，全都是罗里吧嗦自以为是的blabla。</p>
<p>最后剧透一下，如果想读第2部，可以直接去读就行了，我反正是不会去读了。</p>
<p>剧情梗概：
领导去警校招精英，警校里垫底的一帮玩得好的兄弟都被秘密招去特训。训练的内容是40天靠自己活下去，过程显出每个人的特质。其中最适合当卧底的主人公被强行送进了监狱以便能过混进去。</p>
<p>完！</p>]]></content>
		</item>
		
		<item>
			<title>《岛上书店》——像看电影一样读小说</title>
			<link>https://shenxiaobing.com/posts/2019/reading-notes-dao-shang-shu-dian/</link>
			<pubDate>Wed, 11 Jan 2017 19:00:51 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/reading-notes-dao-shang-shu-dian/</guid>
			<description>&lt;p&gt;岛上书店的老板，一个中年男人在意外丧妻之后，意志消沉。有一天，一个2岁大的小女孩被遗弃在了他的书店。他决定收养她，于是一切都变了。&lt;/p&gt;
&lt;p&gt;到现在了，还是觉得应该文以载道或者忍不住去想作者想传达什么，但我总结不出来。也许是因为我才读了一遍的缘故。但这本书讲了一个好故事。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>岛上书店的老板，一个中年男人在意外丧妻之后，意志消沉。有一天，一个2岁大的小女孩被遗弃在了他的书店。他决定收养她，于是一切都变了。</p>
<p>到现在了，还是觉得应该文以载道或者忍不住去想作者想传达什么，但我总结不出来。也许是因为我才读了一遍的缘故。但这本书讲了一个好故事。</p>
<p>像看电影一样，故事里时不时地就会有事件、冲突以及反转出现。但是同时，这本书在某些时刻会非常地节省，甚至直接几句带过甚至直接就是几年后，让人对某些情节的发展产生疑惑。</p>
<p>总结来讲，书中的故事是一个非常简单的故事，围绕着书店老板和他收养的女儿从而在时间和空间上展开，让相关的人物在收养前后的时间线上联结起来。</p>
<p>虽然说读起来还挺带感，但是现在回想起来，排除了书店老板的身份后，这其实是一个挺俗气的故事。所以，根本不能排除书店以及书，这两个是书中人物联结的关键因素。</p>
<p>有了书这个因素，这个小说中有相当的篇幅其实是在对流行的虚构文学做讨论和评价，当然是以书中人物的口吻。那些书和他们的作者，我大多数都没有听过，因此时不时需要去看书页底部的注释。这本小说的注释挺多，而几乎全部的注释都是在解释某个作者、某本书或某个书中的人物。书店老板最后给我们开了一个书单，这个书单在最后读客二维码公众号上可以获取到。</p>
<p>我是在每天午休时花20到40分钟来阅读的，刚好读了6天。我很高兴。</p>
<p>总的来说，这是一个像电影一样讲故事的小说，总有意外和反转。我觉得迟早有一天会被拍成电影的。但关于书中人物命运的联结，我只能是为他们感到高兴或唏嘘，但这种联结是无法预料的，我们只知道某些改变会影响一生，但是怎样的影响呢，我们不知道。</p>
<p>我们还是继续我们的生活，认真地生活。也许有一天，有一个像岛上书店一样的东西，永远地改变了你。希望这改变是好的。</p>]]></content>
		</item>
		
		<item>
			<title>再见，魔兽世界</title>
			<link>https://shenxiaobing.com/posts/2019/a-proper-goodbye-to-wow/</link>
			<pubDate>Wed, 28 Dec 2016 00:25:41 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/a-proper-goodbye-to-wow/</guid>
			<description>&lt;p&gt;2005年秋天，我大二。&lt;/p&gt;
&lt;p&gt;我和大学同学一起前往网吧，注册魔兽世界账号，并创建了自己的角色。他的角色是兽人术士，而我则是一个兽人战士。虽然第一次游戏我只进行了2个小时左右，就因为头晕呕吐无法继续，但这却是我魔兽世界生涯的开始。此后我跟他一开始一起白天进网吧玩，到后来我一个人白天进网吧玩，到最后我一个人晚上进网吧通宵玩。到了毕业时，我记得我主要的角色累积纯在线时间超过了200天，就是200*24小时。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>2005年秋天，我大二。</p>
<p>我和大学同学一起前往网吧，注册魔兽世界账号，并创建了自己的角色。他的角色是兽人术士，而我则是一个兽人战士。虽然第一次游戏我只进行了2个小时左右，就因为头晕呕吐无法继续，但这却是我魔兽世界生涯的开始。此后我跟他一开始一起白天进网吧玩，到后来我一个人白天进网吧玩，到最后我一个人晚上进网吧通宵玩。到了毕业时，我记得我主要的角色累积纯在线时间超过了200天，就是200*24小时。</p>
<p>当时应该是正处纳克萨玛斯副本开启那段时间前后。我60级的时候虽然混在希利苏斯，但是却没有目睹到安其拉开门的盛况，想来应该是来晚了。虽然，我并不是第一批进入魔兽世界的人，却依然赶上了后来大家一起怀念的60年代，那些经典的任务、经典的副本和经典的装备。</p>
<p>60级之前我已经记不得什么有趣的事情。记得大约在58级左右时在冬泉谷做任务，单独遭遇了一个联盟玩家的攻击。我已不记得是否获得胜利，只记得激动地手抖。后来的PVP中，不管是战场还是野外PVP，只要是杀的激动，手都会抖。</p>
<p>60级之后，我加入了一个小公会。当时还没有通关熔火之心。我当时是一个学生，一个不怎么上课也不读书不社交的学生，时间尤其多。我慢慢地在公会里混成了常规团员，跟着一起打副本。在即将开放70级的时候，我们终于在黑翼之巢中开出了AL，我用了我自己攒出来的特权，获得了这把传奇武器。想来，这应该就是我这个角色能达到的顶峰了。</p>
<p>游戏虽然吸引人，但是不玩游戏且清醒的时候，就会对自己的游戏行为产生抵触，觉得自己在荒掷青春。直到现在，我都没法完全地不带负疚感地长时间玩游戏。总觉得，明明有那么多重要的事情可以做，奈何！就在这样的矛盾情感中，玩的很爽，玩的也很纠结。每天早上从网吧通宵归来时，我都尽量避开正准备去上课的同学，然后进入宿舍，睡到傍晚；然后起床，随便干点啥，到了晚上八九点，出门通宵上网。</p>
<p>因为这种矛盾和心理的纠结，我有几次AFK，然后我又重新回来。其中的一次，我AFK后把账号交给了游戏里的一个熟人，个把月后他告诉我他把账号分离了，然后把我的主要角色那个战士卖掉了，卖了300元。后来当我重新开始游戏时，这个是我心里最大的痛。虽然我有重新建立了一个兽人战士角色，却无法获得原来的“勇士”军衔，无法获得AL以及其他的寄托。</p>
<p>几年后，毕业了。我没有工作，没有饭吃，去城里的魔兽工作室做代练。当时国服还是70级，而国外已经是开了80级了。而我代练的就是美服的魔兽，职责就是为客户做任务提升等级。再后来，我在广州有了稳定的工作，买了自己的笔记本，又下载了魔兽世界。</p>
<p>之后每次开新资料片，我都会回来玩下，做下任务，练满级，打打上一个资料片的副本。但也仅限于此了。</p>
<p>这样看来，我对魔兽世界的回忆，已经没有具体的东西了。我留下的就是对事实的确认：魔兽世界曾陪伴我相当长的一段时间，而且是在我最宝贵的岁月里。但这段时间里，具体发生了什么，有什么趣事，我是一概记不起来了。所有的青春都是美好的，即使是在虚拟的世界里。</p>
<p>最新的魔兽资料片我也玩了一周，有一些继续玩的追求，但意愿并不强烈。网易废除点卡那段时间没有提前充值，点卡耗尽了，现在我决定不再充值月卡了。一来是没钱，二来是不愿意让网易得逞。客户端已删，我所缺的就是一个正式的告别。即使我再想起你，我会知道，那是青春赋予的一层抹不去的记忆，然而，we are done.</p>
<p>再见，魔兽世界！</p>]]></content>
		</item>
		
		<item>
			<title>你的智商不怎么高呀——Gitbook踩坑记</title>
			<link>https://shenxiaobing.com/posts/2019/your-iq-not-so-high/</link>
			<pubDate>Sun, 04 Dec 2016 15:41:30 +0000</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/your-iq-not-so-high/</guid>
			<description>&lt;p&gt;最近在用Gitbook整理工作中的FAQ。这两天遇到了一点Gitbook上的问题，纠结了很久，前后得有整整10个小时吧。Google并没有帮到我，而最后的结果，让我有了这篇文字标题的感受。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>最近在用Gitbook整理工作中的FAQ。这两天遇到了一点Gitbook上的问题，纠结了很久，前后得有整整10个小时吧。Google并没有帮到我，而最后的结果，让我有了这篇文字标题的感受。</p>
<h2 id="我都做了什么蠢事">我都做了什么蠢事</h2>
<ol>
<li>
<p>Gitbook的book.json配置，同级的不同的配置项之间要用逗号隔开。否则，你会遇到&quot;unexpected string in json&quot;这样的鬼话提示。天知道这是什么意思，而且google也不会告诉你，因为没有其他人会犯这么低级的错误。</p>
<blockquote>
<p>如果一个实务问题连谷歌都没有答案，那么一定是你犯了一个很愚蠢的错误，比如：错别字、缺乏基本常识。</p>
</blockquote>
<p>说到常识，不同领域间的常识对新手来说，真的非常不友好的。而网上的各种教程，也大多不是小白来写的，那些真小白会犯的错误，教程的作者恐怕想都想不到。</p>
<p>所以，如果真的要接触一个新的领域，像素级的模仿是很好的办法。比如，创建一个Gitbook，可以直接去看别人Gitbook的book.json的配置。</p>
</li>
<li>
<p>Gitbook生成时，一定要指定书籍文档所在的文件夹，否则就会出现类似找不到README.md这样的错误提示。</p>
<p>正确的示范：</p>
<pre><code class="language-nil" data-lang="nil">// 直接在当前目录生成
cd /Users/xiaobings/GitBook/Library/pkuflint/lecloud-faq
gitbook build
   
// 或者下面这种指定当前目录的子目录
cd /Users/xiaobings/GitBook/Library/pkuflint
gitbook build ./lecloud-faq
</code></pre><p>错误的示范：</p>
<pre><code class="language-nil" data-lang="nil">// 当前目录中没有书籍时，不能使用build
cd /Users/xiaobings/GitBook/Library/pkuflint
gitbook build 
</code></pre></li>
<li>
<p>Gitbook需要安装插件时，也一定要处在书籍文档所在的文件夹，否则会提示&quot;nothing to install&rdquo;，与此同时，在你尝试build时，却提示你缺少插件，请运行gitbook install来安装插件。</p>
<p>可参考上面的方式。</p>
</li>
<li>
<p>Gitbook的插件如何配置，可以在Plugin Store中，找到该插件，然后点击插件名字右侧的图标链接来跳转到插件的说明页面，上面会显示该插件的配置项和实例代码。</p>
</li>
<li>
<p>Gitbook生成的本地html页面，点击左侧章节是无法跳转的。新版Gitbook就是这样，据说用<code>gitbook build --gitbook=2.6.7</code>，实现用旧版Gitbook生成html，可以实现跳转。但旧版很多插件都不兼容，遂放弃。</p>
</li>
<li>
<p>Gitbook Editor会自动同步<code>_book</code>目录，很烦人。前往gitbook.com在线去编辑.ignore文件，添加<code>_book</code>即可。一般这个是默认添加的，我应该是自己不小心改动了。</p>
</li>
<li>
<p>将website.css里的代码拷贝到pdf.css中，生成的pdf文档依然是没有那些样式。这个没有找到解决方案，放弃。</p>
</li>
<li>
<p>gitbook.com在线编辑书籍，打开页面非常之慢，我在这个点耗尽了我所有的耐心。我的键盘如果被我砸坏了，这个锅要gitbook来背。</p>
</li>
</ol>
<h2 id="冷静一下">冷静一下</h2>
<ul>
<li>对于不熟悉的领域，尤其是工具类，没事不要折腾。即使寂寞空虚，也还是有别的东西可以聊以排遣，别坑自己。</li>
<li>事有轻重缓急，不要忘了这个最基本的工作方法论。被琐事绊住时，问下自己：这玩意有必要做么？有必要现在做么？如果答案是否，立即放弃，沉没成本也不要在意了。</li>
<li>I can do better.</li>
</ul>]]></content>
		</item>
		
		<item>
			<title>写给2004年春天的你</title>
			<link>https://shenxiaobing.com/posts/2019/letter-to-you-of-2004-spring/</link>
			<pubDate>Sun, 04 Dec 2016 16:36:19 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/letter-to-you-of-2004-spring/</guid>
			<description>我就是你，2016年冬天的你。 我突然想找人倾诉，身边没人，就想起了你。 我，未来的你，现在是一个客服。对，不是作家，不是学者，是一个靠学舌去为</description>
			<content type="html"><![CDATA[<p>我就是你，2016年冬天的你。</p>
<p>我突然想找人倾诉，身边没人，就想起了你。</p>
<!-- raw HTML omitted -->
<p>我，未来的你，现在是一个客服。对，不是作家，不是学者，是一个靠学舌去为笨蛋和傻逼们提供服务的傻逼职业。对，我现在可以随意地说出“傻逼”这两个字了，不知道你听到后会不会觉得别扭。当然了，你也许还在因为听到我所从事的职业而在震惊中。我不怪你，也不会笑你。你也别怪你自己。</p>
<p>你现在成绩还不错，应该也听到过你的朋友真诚地告诉你，“你将来做任何事情应该都没问题的，只要你想做”。不要相信这句话，即使你的朋友和你都无比的真诚。你是可以做任何事情，但你肯定不会真的能够擅长任何事情。因为，你的过去塑造了你的现在，而现在的你，没有时间去擅长所有的事情，仅仅是把手头的事情做好就耗费了你几乎所有的精力。</p>
<p>你应该还在跟那谁在一起吧。等你大学一开学，你们就差不多分手了。算起来，你俩在一起也就俩月时间。你过于看重你渴望却得不到的东西，以至于一旦得到，忘乎所以。我也有过类似的问题。不要这样子，让人看不起。</p>
<p>咱们高考考得还不错，但我现在一直觉得志愿填错了。吉林大学所在的东北，整体都在衰落中，而当前的社会，呆在一个不断成长的城市才有更多的机会。都怪咱们当时脑子不好使，也没有高人指点。后面，咱们还会因为脑子不好使而留下更多的遗憾。所以，听妈的话：“长点脑子“。至于怎么长，我现在觉得，保持开放的心态，多读书、多思考、多总结。</p>
<p>真的不好意思，我带来的都是不怎么好的消息。哦，忘了说了，咱们儿子出生了，有点闹，也有点可爱。其他，真没啥好消息了，顶多是比坏消息好一点的消息。</p>
<p>咱们大学没咋好好学习，净去网吧上网了。挂科20多门课，毕业证晚了一年多才拿到。毕业了咱也没找到工作了，混得可惨了。当时想着，要是能有一个单间，里面有自己的电脑，这生活也算知足了。咱们在深夜里呐喊，在雪地里狂奔，在熟悉的日常中麻木，偶尔清醒时，痛的不行。</p>
<p>后来，我们来到了广州，因为曾经的网吧游戏岁月，找了游戏客服的工作，我们也终于有了正式的工作，后来我们就有自己的屋子、自己的电脑——我曾经想要的一切。后来，我想要的更多了。</p>
<p>好在最难熬的时候过去了。现在我们是比上不足，比下有余。没有房子、车子、存款，也没有狂妄的念想，但还是时不时地会猛砸键盘和鼠标，在愤懑、压抑和顾忌中发出怪异的呐喊，惊醒了沉睡中的儿子，惹来老婆一顿骂。</p>
<p>咱们娶了一个湖南的女人做老婆，不丑、不白、不高，脾气合得来。所以啊，你要是有机会，可以在大学多发展几个，我当时是没有那个能耐的。</p>
<p>我知道你现在不怎么学习，一边谈恋爱，一边去上网，还时不时地去质疑下人生的意义，为此弄得自己苦闷不已。我不能说你是在矫情，但你的问题，我现在依然没有明确的答案。但我现在可以带着问题前行，而不是像此时的你和大学时的我们一样，以为这是最重要的问题，没有答案的话，整个人生都不值得一过。说到底，还是蠢。</p>
<p>很多事情都是不能解决的，很多问题都是没有答案的，至少对于某些人来说，对于你我来说。我们能做的最明智和最诚实的决定，就是承认问题的存在，接受它暂时无解的现实，去做自己想做和该做的事情。它们不是你幸福和智慧的前提，它们有他们存在的逻辑，不要因为你消灭不了它们，就消灭自己的生命力。</p>
<p>多关心下弟弟，多一起玩玩，一定要让他去上大学，一定记得。</p>
<p>对了，记得去说服爸妈攒钱买城里的房子啊，以后会疯涨的。</p>
<p>先到这里吧，下次再聊。</p>
<p>——2016年冬天的你于广州</p>
]]></content>
		</item>
		
		<item>
			<title>博客是什么</title>
			<link>https://shenxiaobing.com/posts/2019/what-is-blog-for/</link>
			<pubDate>Thu, 24 Nov 2016 00:45:29 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/what-is-blog-for/</guid>
			<description>&lt;blockquote&gt;
&lt;p&gt;The powerful play goes on, and we may contribute a verse.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是我的博客的副标题，一句来自电影《死亡诗社》中的台词：人生的大幕拉开，我可以贡献一诗篇。&lt;/p&gt;
&lt;p&gt;这本是我对这个博客站点的期许：一个提供价值的地方。&lt;/p&gt;
&lt;p&gt;但实事求是地说，他最大的可能性也仅仅是，对一部分人在特定的时刻有价值。大多数的时候，包括现在，以及近期的将来，博客的文章数量和质量应该都不尽如人意。那么继续写的意义何在？&lt;/p&gt;</description>
			<content type="html"><![CDATA[<blockquote>
<p>The powerful play goes on, and we may contribute a verse.</p>
</blockquote>
<p>这是我的博客的副标题，一句来自电影《死亡诗社》中的台词：人生的大幕拉开，我可以贡献一诗篇。</p>
<p>这本是我对这个博客站点的期许：一个提供价值的地方。</p>
<p>但实事求是地说，他最大的可能性也仅仅是，对一部分人在特定的时刻有价值。大多数的时候，包括现在，以及近期的将来，博客的文章数量和质量应该都不尽如人意。那么继续写的意义何在？</p>
<p>有些人的博客，可以为之带来职业生涯的增益，比如之前因为总结运营心得发表在博客而在游戏运营圈知名的小强，我离开游戏圈时他已是西山居的一位运营总监。</p>
<p>但目前，我的博客主题并不集中，其中与我的职业生涯相关的篇章层次较低，彰显不出自己的实力，倒妥妥地显示出自己没实力。</p>
<p>以上两项，是我在创建博客之初的美好愿景。那如果在相当长的一段时间，这只是愿景呢？博客还会给我带来什么呢？</p>
<p>写博客文章，正如某人所言，是一个思考的过程。并不是我们把事情像明白了才能写出来，而是在写的过程中思考还在继续进行，而思考的结果会因为写作的过程而改变。所以，写是思考的一种方式。</p>
<p>写作对文字的锻炼更不需要多提，如果十年以后，我需要更大的影响力，我的文字要么会成为我的助手要么会成为阻力。</p>
<p>而博客中的编程相关的总结文章，则相当于一个自己的数据库。都是自己遇到的问题、做过的问题或者学习的笔记，汇总起来，方便自己检索。万一有人需要，当然更好。</p>
<p>所以，博客文章是自己的思考和自己的经验总结，如果它们能给别人带来帮助或者给自己带来某方面的影响力，当然最好；如果没有，也已经足够好。</p>
<p>毕竟，我在博客维护和写作中，除了写作能力和业务能力的提升，更重要的是：</p>
<blockquote>
<p>博客，是我生活中难得地让我专注和满足的 “好东西”。</p>
</blockquote>]]></content>
		</item>
		
		<item>
			<title>蜿蜒前行</title>
			<link>https://shenxiaobing.com/posts/2019/no-straight-forward/</link>
			<pubDate>Mon, 14 Nov 2016 23:10:42 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/no-straight-forward/</guid>
			<description>&lt;p&gt;我一直都很羡慕那些走直线的人，那些知道自己想要什么并能够付诸行动去争取的人。&lt;/p&gt;
&lt;p&gt;大学本科的专业在现实中没什么市场，有人就利用本科和研究生的时间备考注册会计师，以每年通过2门课的速度，顺利拿到的注册会计师证书，获得了硕士学位，进入了知名房地产企业。&lt;/p&gt;
&lt;p&gt;这是身边印象最深刻的例子，而在网络上看到的，以及某个圈子里大牛的事例，更是多不胜数。那些人不仅天资聪慧，而且持之以恒地努力。他们是走直线的人。&lt;/p&gt;
&lt;p&gt;而我走出的路，总是一曲蜿蜒。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>我一直都很羡慕那些走直线的人，那些知道自己想要什么并能够付诸行动去争取的人。</p>
<p>大学本科的专业在现实中没什么市场，有人就利用本科和研究生的时间备考注册会计师，以每年通过2门课的速度，顺利拿到的注册会计师证书，获得了硕士学位，进入了知名房地产企业。</p>
<p>这是身边印象最深刻的例子，而在网络上看到的，以及某个圈子里大牛的事例，更是多不胜数。那些人不仅天资聪慧，而且持之以恒地努力。他们是走直线的人。</p>
<p>而我走出的路，总是一曲蜿蜒。</p>
<p>大学里走过的弯路就不说了，年少无知，见识浅薄，不知道也不去追寻更多的可能性。</p>
<p>到了社会上之后，因为之前的因，没有核心能力，只能是被动地选择。当在这条被动选择的路上，走了相当远的距离后，我有了自己想走的路。而这条路，与我一直在走的路，是两条泾渭分明的路。我知道我天赋一般，不一定能在新的路上走出名堂，但这是我自己审慎思考后的选择，一个更让我心安让我全力以赴的选择。尽管，这是一条太过迂回的路。</p>
<p>我要减肥，于是连续在Keep打卡28天，每天去跑步或者在家做Hiit有氧锻炼。28天后呢？我瘦了1斤，然后就没有然后了。这是一个近乎圆形的曲线，我都不敢说，它是螺旋上升的。</p>
<p>我要写博客，于是买了域名、空间搭建了博客。博客写作的曲线是一个连着一个的矮矮的小山丘，山丘之间还有不少平地。</p>
<p>我要业余时间学习编程，在iHour App上记录自己的学习时长，它的曲线也绝对不是直线，既不是稳稳的横线，也不会稳步上升的斜线，而是一个起伏巨大、有时没有数据的线。</p>
<blockquote>
<p>曲线，是我的线条，也是对我来说真实生活的线条。就这样蜿蜒着前进吧，我的底气就是时间。</p>
</blockquote>]]></content>
		</item>
		
		<item>
			<title>这十年发生了什么</title>
			<link>https://shenxiaobing.com/posts/2019/ten-years/</link>
			<pubDate>Mon, 05 Sep 2016 19:26:58 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/ten-years/</guid>
			<description>&lt;p&gt;我的第一个电子邮箱是以&lt;code&gt;@yahoo.cn&lt;/code&gt;为后缀的。&lt;code&gt;@yahoo.cn&lt;/code&gt;邮箱已经不再提供服务，而我也早已不记得密码，唯一还有用到的地方就是作为前程无忧的登录用户名。&lt;/p&gt;
&lt;p&gt;高中时在“未来北大人论坛”认识了几个网友，都是想考北大的。然而没有一个人考上，后来也没人会聊起，但我们都加着彼此的QQ好友，时不时会互相问候一下。那段时期留下的唯一印记，就是pkuflint这个我自己编的昵称，而pku就是北大的英文缩写。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>我的第一个电子邮箱是以<code>@yahoo.cn</code>为后缀的。<code>@yahoo.cn</code>邮箱已经不再提供服务，而我也早已不记得密码，唯一还有用到的地方就是作为前程无忧的登录用户名。</p>
<p>高中时在“未来北大人论坛”认识了几个网友，都是想考北大的。然而没有一个人考上，后来也没人会聊起，但我们都加着彼此的QQ好友，时不时会互相问候一下。那段时期留下的唯一印记，就是pkuflint这个我自己编的昵称，而pku就是北大的英文缩写。</p>
<p>我一个人拉着大行李箱，上了长春火车站前往校园的接新生的大巴。旁边的一个人嘴里啃着煮玉米。他说了什么我已经不记得，但是我依然记得这个场景，记得当时的情绪应该是受到了伤害。应该是我当时太敏感了，一个来到大城市的胆怯的农村少年是有多脆弱多不自信。</p>
<p>一个零下二十多度的冬夜，我和同学一起步行超过12公里去火车站买回家的火车票。我们买了路边摆在地上纸盒里的冰棍，这个寂静的冬夜永远地刻下了印记。</p>
<p>大学有近三分之一清醒的时间给了游戏，工作后有超过三分之一清醒的时间给了游戏。现在我几乎不玩游戏。</p>
<p>我在大学网吧“包宿”的日子里，有一个偶然相识的伙伴，同样是河南人以及校友。我们是同一届，他是数学系（还是物理系？）的。我在毕业一年半后拿到了新校长签名的毕业证和学位证，他至今还没有拿到。</p>
<p>互联网带给我了三样东西：电影、游戏和色情网站；而大学只给了我一样东西：文凭。</p>
<p>我09年又开始写日记。日记本上记录了四个人的阴历生日，有三个是家里人的：爸妈和弟弟。还有一个是大学同班同学同时也是老乡。毕业八年，我们联系的次数屈指可数，而上次是什么时候已经难以确认。</p>
<p>我的体重曲线在这10年一个阶梯，前7年是62.5kg，最近3年是75kg。我肯定不是一天就长了25斤，但是我确实不记得中间的事情了。</p>
<p>愧悔过去、恼怒现在和惧怕未来，是很长一段时间我的心理状态。我至今都不敢说我已经走出了这个定式。</p>
<p>之前我把情绪记录在日记中，觉得自己的处境是由于自己的不自律导致的；现在我回顾自己过去的处境，我认为是由于自己的见识短浅导致的。</p>
<p>十年前，别人这么说，自己也真的以为想做什么，只要努力肯定可以做成。十年后知道这样的想法只是少年人的错觉。</p>
<p>我09年又开始写日记。日记本上记录了四个人的阴历生日，有三个是家里人的：爸妈和弟弟。还有一个是大学同班同学同时也是老乡。毕业八年，我们联系的次数屈指可数，而上次是什么时候已经难以确认。</p>]]></content>
		</item>
		
		<item>
			<title>境外游记——澳门被骗，香港失望，泰国很好</title>
			<link>https://shenxiaobing.com/posts/2019/travel-outside/</link>
			<pubDate>Tue, 21 Jun 2016 19:24:47 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/travel-outside/</guid>
			<description>&lt;p&gt;在我离职之后，我去了澳门、香港和泰国。这是我第一次出境，但是并没有特别大的冲击感。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>在我离职之后，我去了澳门、香港和泰国。这是我第一次出境，但是并没有特别大的冲击感。</p>
<h2 id="澳门被骗">澳门被骗</h2>
<p>我去了澳门的新葡京赌场，还有大三巴牌坊之类的景点。在傍晚要回关口的时候，我想着要不像来时一样，搭赌场往返巴士的顺风车。于是我就去赌场的酒店那边。</p>
<p>我来到了永利酒店（Wynn）前面。大楼非常气派。我走近通往酒店大堂的路时，对面有个中年男人冲我微笑。</p>
<p>我也跟他打了招呼。他找我握手，手很大，比较有力。他满面红光，穿着Polo衫和西裤，脖子上一条金链子，拿着iPhone，夹着一个长形钱包。他问我是哪里来的，我说广州。他说他是杭州人，在广州开公司，还递给我了一个名片。他问我去赌场玩了没有。我说上午去了，就玩了200多块钱。他说不要去玩，他昨晚在这边的赌场赢了几百万，早上全部输了又赔了100多万。他已经叫人打钱了，晚上要继续回本。</p>
<p>然后，他说他现在身上没有现金，说着把钱包翻出来给我看。他希望我能够支持他一下，多少都无所谓。回头回到广州，他请我去花园酒店搓一顿。他问我电话号码，用他的手机打了一下，还问我接通没有。我的手机当时在书包，没有去看。</p>
<p>我犹豫着，尝试表达出怀疑，他尴尬地说，你看我脸都红了，我都不好意思。</p>
<p>我掏出钱包，把仅剩的220港币给他，说我就剩这么多了。他脸色略显失望，但还是接过去，把20港币换给我，说这个他不要。</p>
<p>他接钱的时候，我心里的怀疑不断增大，我觉得我攥着钱的手都捏紧了。但我的虚荣和懦弱使我无法当时反悔，我还是松开了手。</p>
<p>然后，他好像是嫌少，想让我再去取一点。因为内心的怀疑加大，我说那算了，我不给你了，我伸手想把钱拿回来。他推开我的手，说那好吧。我没有勇气立刻翻脸，把钱要回。我只是觉得，我很可能是被骗了。</p>
<p>我回到广州两天后，拨打了那个名片上的号码，是空号。他也没有再打我我的电话。
我的手机号当时没有开通漫游，他当时在澳门拨打我的号码，应该是打不通的。</p>
<h2 id="香港的大学">香港的大学</h2>
<p>香港的什么都小，电梯小，房间小，大学小。香港大学坐落在山边，学校建筑与山融合在一起，使得小区的形状和路都不规则，想找一大块平地殊为不易。而这种形状使得学校像一个迷宫，不看地图还真不好走出去。</p>
<p>香港大学里面有一座雕塑，名字叫做：国殇之柱，小字写着：老人不能屠杀年轻人。类似主题的雕塑，在香港中文大学也见到过。</p>
<p>学校对外是开放的，可以去他们的食堂、教学楼。</p>
<p>除了港大，我还去了城市大学和中文大学，分别在它们的食堂吃了一顿。</p>
<p>中文大学的面积很大，格局有点像内地的大学了，不过也是依山建的。城市大学感觉没有校园，只有连起来的建筑。</p>
<p>除了大学，这次香港之行关键词就是失望。失望的住宿环境，失望的维港灯光秀，失望的星光大道（关闭维修），失望的自由之都。</p>
<h2 id="泰国的佛与妖">泰国的佛与妖</h2>
<p>网上报团去的泰国，走的是曼谷和芭提雅线路。泰国之行远远超出期望值，尤其是曼谷的佛寺和皇家藏品，让人大开眼界。</p>
<p>芭提雅的人妖表演和成人秀，都略令人失望。成人秀因为观众有大量的女性，节目中有大量针对女性观众的露骨表演，直男表示一点都不感兴趣。</p>
<p>泰国整体给人的感觉非常好，会再去的。</p>
<p>外面的世界可以很精彩，只是不要期望太高。</p>]]></content>
		</item>
		
		<item>
			<title>六城游记</title>
			<link>https://shenxiaobing.com/posts/2019/travel-to-6-cities/</link>
			<pubDate>Tue, 21 Jun 2016 19:19:40 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/travel-to-6-cities/</guid>
			<description>&lt;blockquote&gt;
&lt;p&gt;题记：如果我走的足够远，我就能领悟人生的真谛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在家懒了几天之后，我终于走出了家门。第一站是东莞。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<blockquote>
<p>题记：如果我走的足够远，我就能领悟人生的真谛。</p>
</blockquote>
<p>在家懒了几天之后，我终于走出了家门。第一站是东莞。</p>
<h2 id="东莞">东莞</h2>
<p>东莞紧挨着广州，又一直名声在外，所以就成了我旅行的第一站。</p>
<p>东莞虽然有着跟颜色相关特殊的名气，但在城市里感受到的还是普通人的忙碌，从外面一点也看不出有这个人们辛勤劳作的城市与那个名气有任何关系。名气是他们的，与普通人无关。</p>
<p>东莞是一个不设县、区的地级市，下辖的都是镇，比如长安镇、虎门镇。虎门，就是那个虎门销烟的地方。我去了那里的林则徐纪念馆，看到了现在还存留的两个大大的池塘一样的销烟池。池子是满的，里面的水说不上清，也没那么污浊。池壁上的木条栅板早已斑驳，池边也长上了青草。</p>
<p>虎门的外表看起来就是一个三四线的小县城，远不及连接广州和虎门的虎门大桥威严壮观。</p>
<p>我在东莞住了一晚，第二天下午坐车去了相邻的惠州。</p>
<h2 id="惠州">惠州</h2>
<p>惠州，在古代是官员被贬后下放的地方。苏轼就曾被贬至惠州，在惠州留下了诸多诗句，还有一个据说最像杭州西湖的惠州西湖。苏轼先在杭州整修了杭州西湖，之后他每到其他地方任职，都会仿照杭州西湖在当地修造西湖。</p>
<p>惠州知名的景点除了惠州西湖，还有罗浮山和巽寮湾。</p>
<p>罗浮山，岭南四大名山，道教名山。山内有道教葛洪大师的衣冠冢。而巽寮湾沙滩的沙子非常细，踩着很舒坦，反观厦门海滩的沙子就粗的硌脚。</p>
<h2 id="潮州">潮州</h2>
<p>潮州，千年古城，唐代韩愈被贬至潮州，在潮州为政将近八个月，但他的事迹传颂至今已经一千多年。潮州为他建了祠堂，把一座山更名为了韩山。纪念馆里说，韩愈在潮州做了四件事，其一释放奴婢，其二捕杀鳄鱼，其三推动教育，其四提供当地贤才。我特别不理解，韩愈当时都不是潮州的最高领导，执政也就不到八个月，当地对他的成就肯定是过誉了。</p>
<p>潮州最有名的景点，莫过于被誉为“中国四大古桥”之一的广济桥。桥非常有特色，而且非常美。桥分为两段，中间是断开的没有桥梁，用于船只航行。而不过船的时候，则用木舟相连，以便行人通过。现在就只是个景点，既不通航也不过人了，当然除了交了门票的游客。</p>
<p>潮州有一条特别长的步行街，每隔十米左右，就有一座石牌坊，这条街被称为牌坊街。牌坊街上的牌坊都是为了潮州历史上出现过当地名流，有异地做官的潮州人，也有来潮州为官的外地人。漫步在这条街上，看着头顶上的古人名字，感觉非常奇特。</p>
<p>潮州的景点比较集中，游完以后，我当天就坐车前往厦门了。</p>
<h2 id="厦门">厦门</h2>
<p>厦门一直是文艺青年和小清新的最爱。我也想去看看2004年我错过的大学长什么样子，“中国最美大学”校园是什么样子。</p>
<p>厦门大学门口等待进入参观的队伍排了有20多米长，这还是个周末。工作日的话，参观人数会受到更多限制。进门需要刷身份证。校园里的游客可能跟学生一样多，如果不是更多的话。厦门大学的食堂并不完全对外开放，仅有指定的食堂和楼层对外。这一切让我对厦门大学的印象并不好。最美校园？真没看出来。最排外大学校园还差不多。</p>
<p>我来到了厦门大学一处叫做“芙蓉隧道”的地方。这里本就是一条隧道，仅通行人和自行车。隧道里两侧的墙壁上，被学生的创意涂鸦覆盖。有某个宿舍的临别祝愿，有某个班级的豪言壮语，有某个社团的形象展示，有某对情侣的真情告白。这里就是一个用涂鸦表达自己的地方。涂鸦的空白处还有各种各样的“弹幕”，由参观的游客贡献。这里仿佛是一个时空隧道，引领我回到自己的大学校园，回到那个青春刺痛的地方。我好想回母校看一下！</p>
<p>厦门其他的知名景点，比如鼓浪屿、曾厝垵都是差强人意，如果你已经见过丽江这种文艺街市的模样，你不会再感到新奇。</p>
<h2 id="绍兴">绍兴</h2>
<p>虽然绍兴除了鲁迅之外还有不少品牌，比如绍兴师爷、绍兴黄酒、绍兴安昌古镇等，但我此行就是为了鲁迅。</p>
<p>鲁迅家族的周家新旧故居、百草园、三味书屋、鲁迅纪念馆等都在一起。进去后可以看到一个绍兴大家族的格局。如果不是因为鲁迅，恐怕不会对一间空荡的大房子感兴趣。鲁迅的散文中出现的地方，都可以在这里找到。百草园原来是一个菜园子，三味书屋是一个小私塾，三味书屋后面他们一起捉蝉的花园，是一个非常小的空地。也许，对于一个少年来讲，再小的游乐场也是一个小天地。</p>
<p>沈园就在鲁迅故居的斜对面不远。沈园是一个私人园林，据说是陆游和他的前妻在离别后重逢的地方，并在那里留下了著名的《钗头凤》：“红酥手，黄藤酒，满园春色宫墙柳。”我们课本上学过的。</p>
<h2 id="杭州">杭州</h2>
<p>在杭州我花了一天时间沿着西湖走了一圈。沿途应该至少看了“西湖十景”中的六个。然而，缺乏最佳的时间、天气和角度，“西湖十景”只是普通的西湖一景。</p>
<p>新建的雷峰塔是金属结构的，在底层刚好把原来倒塌的砖结构雷峰塔的遗迹给包起来。进入雷峰塔第一眼看到的就是围栏下面的断壁残垣，以及靠近围栏处密密麻麻的硬币和纸币。</p>
<p>旅行的时候要走很多路。在路上的时候，总想着一天要排满，该看的都要看，不虚此行。走着走着，开始感到倦了，开始觉得这种异常的状态没法长久维持。每天一个人走，在不同的旅馆或青旅醒来，每天洗自己的衣服，每天去所谓的“景点”参观。多无聊啊！如果真的有一种旅行是可以长久的话，那就是在路上生活的旅行方式，该干嘛干嘛，而不仅仅是去参观别人生活的地方。</p>
<p>还有，走的再远，也不会让你明白生活的真谛。就像跳的再快，广场舞大妈也不会找回自己的青春；翻得再仔细，捡垃圾的拾荒大叔也找不回丢失的自己。</p>
<p>你也许最终会明白，只是，远行与此无关。</p>]]></content>
		</item>
		
		<item>
			<title>读《北野武自述》——一本由他人代笔的评论集</title>
			<link>https://shenxiaobing.com/posts/2019/read-bei-ye-wu/</link>
			<pubDate>Fri, 22 Jan 2016 19:18:25 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/read-bei-ye-wu/</guid>
			<description>&lt;p&gt;提到北野武，最先想到的头衔是日本现代电影大导演，而最先想到的形象却是他在《大逃杀》里扮演的变态老师和《菊次郎的夏天》里扮演的冷淡的中年帮派男人，其面瘫的表情尤其如出一辙。&lt;/p&gt;
&lt;p&gt;北野武一开始并不是这个样子。当他从浅草——东京的文艺区里以漫才成名并进入电视领域成为大明星后，他出了一次严重的车祸。他活了下来，但脸部就成了现在我们看到的这个样子。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>提到北野武，最先想到的头衔是日本现代电影大导演，而最先想到的形象却是他在《大逃杀》里扮演的变态老师和《菊次郎的夏天》里扮演的冷淡的中年帮派男人，其面瘫的表情尤其如出一辙。</p>
<p>北野武一开始并不是这个样子。当他从浅草——东京的文艺区里以漫才成名并进入电视领域成为大明星后，他出了一次严重的车祸。他活了下来，但脸部就成了现在我们看到的这个样子。</p>
<p>北野武生在一个贫困家庭，从小就是个小混混。本来要读机械系进入本田工作的他，中途辍学去浅草的剧院里做电梯服务员。漫长的等待和学习后终于有了崭露头角的机会。他和他的搭档以讽刺搞笑见长，在被电视台推广后，他以“拍子武”的艺名成为了家喻户晓的大明星，而且一直火了二十多年，火到现在。</p>
<p>二十多年来，他参与了十几款火爆电视节目的制作，做他最擅长的事情——讽刺和搞笑。在书中，他悉数对自己参与的节目进行了回忆与评价。</p>
<p>他也开始演电视剧。其中在电视剧里变态杀人犯的一个角色让他被看中参演了黑泽明的一个电影。从此，一个作为电影演员的北野武横空出世了。</p>
<p>接着，他开始了更为世界影迷所熟知的角色——电影导演。他的电影有着非常独特的风格，有着来自世界各地的为数不少的影迷。他拿了很多的奖，但他自述根本不喜欢自己的电影。</p>
<p>这本书并不是一本自传或者传记，也许只有书的前两章讲述他的少年岁月和浅草岁月的部分勉强算是传记。其他的部门，都是法国的作家，也是本书的作者对她与北野武的交谈进行整理的，内容多是对北野武的影视作品、电视节目乃至日本政治、东亚历史等的见解和评论。</p>
<p>北野武说，日本应该正视自己在几十年前在亚洲邻国的恶行，而中国和韩国也应该不要一直向下一代灌输60年前的仇恨。</p>
<p>总之，这是一本适合真正粉丝的书，因为有大量篇幅是关于北野武的电视节目和导演作品的。如果你想看的生平传记，这本并不是一个好的选择。</p>]]></content>
		</item>
		
		<item>
			<title>《少年时代》结束后，我们要去哪里？</title>
			<link>https://shenxiaobing.com/posts/2019/where-to-go-after-youth/</link>
			<pubDate>Tue, 02 Jun 2015 19:14:31 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/where-to-go-after-youth/</guid>
			<description>&lt;p&gt;《少年时代》，用了12年拍成，小演员从6岁成长到了18岁，而他扮演的主角少年Mason也在电影里从6岁长到了18岁。我们可以在影片中看到少年Mason 在这12年的成长过程。&lt;/p&gt;
&lt;p&gt;我们看到Mason从一个躺在草地上盯着蓝天无所事事的孩子，一步步地变成了12年后那个追问终极目的的大学新生。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>《少年时代》，用了12年拍成，小演员从6岁成长到了18岁，而他扮演的主角少年Mason也在电影里从6岁长到了18岁。我们可以在影片中看到少年Mason 在这12年的成长过程。</p>
<p>我们看到Mason从一个躺在草地上盯着蓝天无所事事的孩子，一步步地变成了12年后那个追问终极目的的大学新生。</p>
<p>我们看到他一次又一次地跟着妈妈搬家，换了一个又一个学校，换了一个又一个的继父；</p>
<p>我们看到他从最开始以为马蜂是空中的水变成的，到追根究底地问父亲精灵是不是不存在；</p>
<p>我们看到他有了不亲嘴儿只聊天的女朋友，也看到他有了一个可以在车后座放肆亲嘴的女朋友；</p>
<p>我们听到他的声音变得粗了，我们看到他长出满脸胡须；</p>
<p>我们看到他从对继父言听计从，到跟现在的继父据理力争。</p>
<p>我们看着他度过了整个少年时代。</p>
<p>然后，他长大了，开始问，这一切到底是为了什么？他自己有一套理论，说机器人和半机器人的制造成本太高，于是普通人就被程式化以便可以胜任需要，这些人花费极低，且可以自我维护。他不想成为程式化的普通人。</p>
<p>他问自己的父亲，父亲说不知道，就当它是即兴表演吧，你想到哪里就去做就是了。</p>
<p>他的同学也有一套理论，说我们不能 Seize the moment，因为 Moment is everywhere. 其实是 Moment seizes us。我不知道他在说什么，大概是想表示，我们无法刻意，只能随缘。</p>
<p>而Mason 的妈妈也有同样的烦恼。</p>
<p>Mason的妈妈大学期间怀上了Mason的姐姐。辍学后，努力工作抚养他们姐弟俩。生父跟妈妈离婚了，因为一些生活上的琐事引起的争吵。妈妈因为姐弟俩无法去正常交新男朋友。妈妈决定重新回到学校完成学业，于是他们搬家了。妈妈读研，最后在一学院申请到教职。妈妈在这期间，又结了两次婚，最后都因为丈夫酗酒而离婚。妈妈在平时也会努力做好收支平衡，她这样送姐姐去了大学，现在 Mason也要去大学了。</p>
<p>Mason妈妈见到儿子要离开家去大学的兴奋，难受地哭了，她喊道：我结婚、生子、离婚、再次离婚、拿到硕士学位、找到心仪的工作、把你姐姐送进大学，把你送进大学，你知道下一步是什么吗？我的葬礼！</p>
<p>Mason 的妈妈一直在被现实裹挟着，推着，挣扎着去做自己不得不做的事情。现在，这些挣扎终于要结束了。可是，她突然失去了自己的方向。</p>
<p>Mason 带着歉意地笑笑，提醒妈妈道：你直接跳过了这之后的40年呢。</p>
<p>我们也都经过了自己的少年时代，那种不需要去想太多，也不需要挣扎着求生的日子。当少年时代结束，我们要去向哪里？是被现实裹挟着推着走？像Mason 父亲那样做即兴表演，还是让 Moment 来 Seize us？</p>]]></content>
		</item>
		
		<item>
			<title>本故事纯属虚构——读《万万没想到：生活就是喜剧》</title>
			<link>https://shenxiaobing.com/posts/2019/read-wan-wan-mei-xiang-dao/</link>
			<pubDate>Sat, 17 Jan 2015 19:12:17 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/read-wan-wan-mei-xiang-dao/</guid>
			<description>&lt;p&gt;第一季的《万万没想到》可谓惊艳，所以顺带着会对这部剧后面的团队产生兴趣。于是去多看上买了《万万没想到：生活就是喜剧》的电子版。&lt;/p&gt;
&lt;p&gt;作者是有时右逝，就是之前写《如果，宅》的那个，叫兽监制。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>第一季的《万万没想到》可谓惊艳，所以顺带着会对这部剧后面的团队产生兴趣。于是去多看上买了《万万没想到：生活就是喜剧》的电子版。</p>
<p>作者是有时右逝，就是之前写《如果，宅》的那个，叫兽监制。</p>
<p>前几章读起来还蛮有兴味。</p>
<p>但是，最初的新鲜感过去后，你会开始反感作者无时无刻的吐槽。作者会把真实的情况隐没，取而代之以一个又一个的段子和一段又一段的吐槽。你几乎无法分清哪些是真实的，或者多大程度上是真实的。这类书，本应该提供偶像的信息，提供观众和读者想了解的内幕，而不是作者那拙劣的段子。而段子来来回回就两个主题：叫兽很丑，剧组很穷。我真的很无语。也许这就是有时右逝的风格吧。之前的那本《如果，宅》我看了一些，记忆中也是有比较夸张的剧情和各种玩笑式的对话。一个写作者的风格真的这么难以改变？</p>
<p>这本书提供的信息，用以下几句就可以总结：</p>
<ol>
<li>王大锤是我们所有人的故事。</li>
<li>叫兽并不是万合天宜的CEO，他还有另外两个合伙人。</li>
<li>葛布是公司的财务。</li>
<li>小爱，可能有一些混社会的朋友。</li>
<li>作者的身体数据是170和160，不确定哪个是身高，哪个是体重。</li>
<li>剧组很穷，穷的一比，也许有发不出工资的时候。</li>
<li>拉投资很难，失败的次数远远多于成功。</li>
<li>来自星星的都教授事件。</li>
<li>叫兽的梦想是：拍出观众喜欢的片子。</li>
</ol>
<p>书里面的每个目录主题，都是有内容可写可挖的，如果不是任由作者用随意的段子来填充的话。</p>
<p>如果一定要说这样的写作方式，对这本书来说，有什么合理性的话，那么我会推测，是不是剧组根本不想提供什么信息或者压根就没有什么可公开的内部信息，要么已经公开过了，要么还不到时候。</p>
<p>总而言之，如果你跟我一样，是冲着剧组人员去的，这本书一定会令你失望的。</p>]]></content>
		</item>
		
		<item>
			<title>抓小偷</title>
			<link>https://shenxiaobing.com/posts/2019/catch-thief/</link>
			<pubDate>Mon, 29 Dec 2014 19:10:23 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/catch-thief/</guid>
			<description>&lt;p&gt;2014年的倒数第三天，早上08:10左右，我快步走着，赶往公司班车最近的停靠点。&lt;/p&gt;
&lt;p&gt;走到软件园对面的建设银行附近，我看到迎面走来来一个穿棉衣背双肩包的男人，姑且叫他IT男吧。他背后还跟了一个人，戴着一顶圆筒状无帽檐的平顶帽，毛茸茸的，姑且叫他圆帽男。圆帽男紧跟着IT男，右手伸出去，眼睛直勾勾地盯着自己伸出的手。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>2014年的倒数第三天，早上08:10左右，我快步走着，赶往公司班车最近的停靠点。</p>
<p>走到软件园对面的建设银行附近，我看到迎面走来来一个穿棉衣背双肩包的男人，姑且叫他IT男吧。他背后还跟了一个人，戴着一顶圆筒状无帽檐的平顶帽，毛茸茸的，姑且叫他圆帽男。圆帽男紧跟着IT男，右手伸出去，眼睛直勾勾地盯着自己伸出的手。</p>
<p>IT男可能感觉到了，转过身去，盯着圆帽男。圆帽男向后退了几步，也看着IT男。IT男向前走两步，圆帽男就向后退两步。IT男停下来打开自己的背包检查。看起来他并没有发现丢了什么东西，至少在我的视线离开他之前没有。</p>
<p>我目睹了这一幕，却并没有停下脚步。我看到圆帽男在岔路口向左拐进了科韵路，貌似有一个他的同伴也随即跟了上去。科韵路的一侧是停车场，很宽敞，我就跟他几乎平行地走着，步速也差不多。我时不时回头看下他们。上班高峰，路上来往的行人很多。圆帽男就在街上走着，眼睛四下搜索着。</p>
<p>就这样走了几十米到了信息港的那个路口，什么都没有发生。我差不多要横穿马路去搭车了。这时，圆帽男转身，向前走了两步，我知道他要动手了。他刚好挡住我的视线，我看不到他的动作。我想喊，可是终究没有喊出来。</p>
<p>不到2秒钟，他转过身来，刚好与我对视。我没有看到他手里有任何东西。我盯着他，然后快步走向前，拍了拍前面还在边走边喝豆浆的那个男生的肩膀，叫他看下有没有什么东西丢了。“他偷了你的东西”，我指了指还在旁边站着观望的圆帽男。男生摸了摸口袋，意识到手机丢了，就伸手向圆帽男索要。圆帽男从口袋里掏出了一个手机递给了那个男生。然后他走向我，盯着我。</p>
<p>我说，我刚才就看到你了。</p>
<p>他说，以后不要这样了。</p>
<p>我说，你的意思是，我应该在你动手前制止你么？</p>
<p>然后，我穿过了马路，并回头看向圆帽男，他没有跟上来。我摸了摸自己的口袋，手机还在。就这样，我继续赶往我的班车，下意识地时不时回头看一下。</p>]]></content>
		</item>
		
		<item>
			<title>疯狂：手游公会、平台与玩家</title>
			<link>https://shenxiaobing.com/posts/2019/game-guilds/</link>
			<pubDate>Sat, 13 Dec 2014 19:06:01 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/game-guilds/</guid>
			<description>&lt;p&gt;先听一听最近媒体上的消息吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;天龙八部3D，首月流水2亿。&lt;/li&gt;
&lt;li&gt;征途口袋版，首日流水975万。&lt;/li&gt;
&lt;li&gt;全民奇迹，首日流水2600万，开服1000组，总流水破亿（含iOS版）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;听起来一个比一个牛，我也一直对这些数据顶礼膜拜，直到我开始了解手游公会。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>先听一听最近媒体上的消息吧：</p>
<ul>
<li>天龙八部3D，首月流水2亿。</li>
<li>征途口袋版，首日流水975万。</li>
<li>全民奇迹，首日流水2600万，开服1000组，总流水破亿（含iOS版）。</li>
</ul>
<p>听起来一个比一个牛，我也一直对这些数据顶礼膜拜，直到我开始了解手游公会。</p>
<p>先说下我的结论：</p>
<ol>
<li>流水中有相当一部分，都不是玩家充值的，而是游戏公会进行了补贴。也就是说100元的流水，最多有50元是玩家充的。极端的情况下，仅有5元是玩家充的。</li>
<li>各大游戏平台为了争夺热门游戏的流水份额，争相拉拢手游公会，以返还平台币的形式补贴公会。</li>
<li>手游公会之间也存在竞争，为了拉拢摇摆的用户，充值的折扣一再被拉低，最低的我见过0.5折的，就是玩家充5元得100元的充值效果。</li>
<li>玩家在这个模式中，获得了巨大的实惠，尤其是那些真心想玩这个游戏的。玩家出5元，得100元充值效果，都是真事儿。同时，因为手游公会的存在，极大地影响了游戏体验，尤其是聊天频道，几乎沦陷，完全无法进行正常的交流。</li>
</ol>
<h1 id="手游公会与平台的合作模式以及赢利模式">手游公会与平台的合作模式以及赢利模式</h1>
<p>提到公会，大家首先想到的是游戏中的公会，大家为了推Boss，为了交流而聚在一起。而这里提到的公会，却是公会管理者以赢利为目的，或者大R玩家（游戏中充值额极大的玩家）为了获得充值优惠而组建的。也就是说，游戏中的公会为乐趣和情感；而这里的公会只是徒有公会之名的一个商业化组织。</p>
<p>为了方便理解，我这里以举例的形式，来进行说明。</p>
<p>平台A，联运了一款手游。如果直接做线上推广，投入比较大，还不能保证收益。于是，平台A找到了公会B，协商双方从公会B带来的流水中五五分账。本来平台A从发行商那里的协议是四六分的，与公会合作后，公会产出的流水要分走50%给公会管理者，40%分给发行商，自己还有10%。也挺好，毕竟自己没有出一分钱。</p>
<p>这个就是小平台与公会合作的动机：花钱少，见效快，流水高。而大平台，比如360，百度，九游等，也都无一例外地在做公会合作平台，这个就是渠道竞争的结果了。如果你不做，那么同一款游戏，你的玩家可能被公会用高折扣诱惑，从而转到其他平台玩游戏。这样，你的游戏用户就会不断地被侵蚀。在没有想到更好的方法之前，只能跟进。</p>
<p>而公会在这个合作中也没有真的拿到50%，因为公会之间的竞争使得他们开始用折扣来吸引玩家来自己的公会，而折扣就从自己的50%分成中产生。这样，公会也大约赚个10%。这样一来一回，开发商的分成不受影响，而原本应当分得60%的平台，出让了10%公会，40%给玩家。</p>
<h2 id="极端的情形">极端的情形</h2>
<p>上面说的是游戏运行稳定后的情况。而在上面提到的三款游戏中，也就是热门游戏上线初期，尤其是上线前几天，各大平台为了证明自己的实力，都会不遗余力地拉拢公会和玩家。除了上面提到的分成外，平台会以平台币形式返还50%-100%流水。而公会拿到返还的平台币可以转手出售，获得更多收益的同时，也使得自己有能力给到玩家更低的折扣以赢得竞争。于是，就出现了上面说的玩家充5块钱，得到100块充值的效果，就是公会依靠平台的返利进行了大幅度的补贴。</p>
<h2 id="流水的产生流程">流水的产生流程</h2>
<p>一般来讲，流程是这样的：玩家要充值，联系公会；确定充值额度，以充5元得100元为例；玩家通过各种方式给公会5元钱；公会确认收到钱后，就会给玩家在公会端上创建帐号、角色并拿自己的资源为玩家充值。这资源可以是公会自己出的真钱，也可以是之前储备的平台币帐号。然后平台就这样，以玩家的5元钱和公会补贴的95元，产生了100元的流水。</p>
<h2 id="玩家与大平台之间的代理商">玩家与大平台之间的代理商</h2>
<p>在玩家与大平台（比如360、百度和九游）之间，还有商人、公会、公会联盟和小平台的存在。如果大平台是一级代理商，那么小平台、公会联盟、公会/商人就分别是二、三、四级代理。毕竟在这个过程中，表面上看起来全无本钱，空手套白狼的诱惑挺大的。</p>
<p>下面是这从玩家充值到平台平台之间的流程：</p>
<ol>
<li>玩家可以选择直接在平台充值，可以找商人买号，可以找公会代充；</li>
<li>小商人依附于公会，大商人从属于公会联盟；</li>
<li>小公会依附于公会联盟或者小平台，而大公会可以直接与大平台合作；</li>
<li>小公会联盟依附于小平台，大公会联盟直接与大平台合作；</li>
<li>小平台与大平台联络并拉拢小公会和公会联盟加入。</li>
</ol>
<h1 id="名词解释">名词解释：</h1>
<p>商人，就是大量购进充值后的游戏账户，便于以后进行分销的个人或者小组织。他们一般是公会的有力支持者，因为他们能够控制自己的充值额，可以为公会集中充流水助力颇多。
公会联盟，就是公会的松散联合，联合就可以争取到更大的权益。</p>
<p>什么游戏公会喜欢做？</p>
<p>首先，肯定是爆款，玩家喜欢，平台让利大。</p>
<p>其次，游戏要有便捷的世界聊天频道，以方便他们进行宣传；游戏的运营团队要对刷屏有较高的容忍度，理由同上。</p>
<h2 id="手游公会会走向何处">手游公会会走向何处？</h2>
<p>这个问题，我时不时会想到。一方面，我觉得公会作为CPS的代表，就跟当前社会上的众多推广分成一样，是挺有效的不花钱获得可观推广效果的代表。同时，我又觉得这不该是正常的状态。不正常在于，平台之间现在是白热化的价格战，而价格战是不会持久的；公会互相爆群拉人从竞争对手那里拉人，这种不正当竞争，也不会持久；公会开拓的方式严重影响游戏体验；平台倒贴或者微利，不会持续很久。</p>
<p>所以，我觉得，只要平台之间没有达成共识，只要开发商和发行商没有意识到公会对游戏的危害，只要平台没有被一家独大，公会作为开疆拓土的利器还是会被一再动用的，只不过伤人必伤己。</p>
<p>注：
文中的数据虽不是瞎说，但并不能反应公会合作关系中的全部。</p>
<p>无责任推测，是我自己的一个尝试。不能因为自己会错，就不发出自己的声音。</p>]]></content>
		</item>
		
		<item>
			<title>向路人借钱</title>
			<link>https://shenxiaobing.com/posts/2019/borrow-money-from-stranger/</link>
			<pubDate>Sat, 06 Dec 2014 19:02:48 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/borrow-money-from-stranger/</guid>
			<description>&lt;p&gt;我一早去搭brt公交上班，走到站台入口，要从钱包里拿出公交卡时，背包里却怎么也找不到钱包了。翻遍了各种夹层也没有一毛钱零钱。我掏出手机看了下时间，盘算着走回去拿钱包再回来肯定是要迟到的。&lt;/p&gt;
&lt;p&gt;要不要向路人借2块钱？我看着站台入口附近进出的年轻人，想着找谁才能借到呢？&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>我一早去搭brt公交上班，走到站台入口，要从钱包里拿出公交卡时，背包里却怎么也找不到钱包了。翻遍了各种夹层也没有一毛钱零钱。我掏出手机看了下时间，盘算着走回去拿钱包再回来肯定是要迟到的。</p>
<p>要不要向路人借2块钱？我看着站台入口附近进出的年轻人，想着找谁才能借到呢？</p>
<p>不能是女孩儿，嗯，没错，女孩儿的警惕性太高了，要找一个像我一样看起来敦厚的男青年。要是他身上没有零钱呢？我要是提出支付宝或微信钱包还钱，会不会更加被认为是骗子呢？为什么我今天没有刮胡子，眼镜上也有明显的污迹？我要不要向他们展示我背包里的kindle和macbook，来证明我不是街头要钱骗人的？</p>
<p>路过的几个男青年，有的眉头紧锁，有的行色匆匆。</p>
<p>我犹豫了几个徘徊，终于向来的方向走回去，一边走一边继续思想斗争。</p>
<p>走了几十米，看到早点摊前有个男青年在买早点。我心中一动，他肯定有零钱。我走过去，到了他身旁，从侧面拍了拍他的肩膀，握着两千元安卓神机的左手不经意地扬起。</p>
<p>“你好！我身上没带零钱，不想走回去拿钱包了，可不可以借我2块钱？我用支付宝或者微信钱包还你。”</p>
<p>他看了我一眼，也不知道是两眼，把手里的早点摊老板娘刚找的零钱递给了我。我激动地问，“你的支付宝&hellip;”</p>
<p>他说不用了。我听了后原地犹豫了一秒钟，说了声谢谢快步跑回了站台入口，边跑边想着自己的幸运，男青年的豁达和大度，想着把经历写到微信上会是怎样的一段佳话。</p>
<p>快要再次到达站台入口时，我感觉到屁股兜里的质感，用手又确认了一下，意识到我的装有公交卡的钱包，一直在我身上。</p>
<p>我赶忙掉头跑去，看向早点摊，男青年已不见踪影。</p>
<p>于是，我把那借来的2块钱投了过去，走进了站台，一边想着这一切是怎么发生的。</p>]]></content>
		</item>
		
		<item>
			<title>App百万富翁的共同点 ——读《APP创富传奇》</title>
			<link>https://shenxiaobing.com/posts/2019/app-millionaire/</link>
			<pubDate>Thu, 02 Oct 2014 18:54:57 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/app-millionaire/</guid>
			<description>&lt;blockquote&gt;
&lt;p&gt;他们只有一台iPhone、一台从eBay上淘来的MacBook和几本编程手册。简单的电子设备加上一些想象力，就是那些最终成为超级明星和App百万富翁的人们的全部工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一切始于苹果应用商店的推出。这之后，独立游戏开发者，可以不依附大公司，直接将自己的作品，通过苹果分发到全世界。这些人中，出现了媒体热捧的明星，他们的作品有数百万下载，他们获取了百万美元的收益，他们被作者成为Appillionaire（App百万富翁）。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<blockquote>
<p>他们只有一台iPhone、一台从eBay上淘来的MacBook和几本编程手册。简单的电子设备加上一些想象力，就是那些最终成为超级明星和App百万富翁的人们的全部工具。</p>
</blockquote>
<p>一切始于苹果应用商店的推出。这之后，独立游戏开发者，可以不依附大公司，直接将自己的作品，通过苹果分发到全世界。这些人中，出现了媒体热捧的明星，他们的作品有数百万下载，他们获取了百万美元的收益，他们被作者成为Appillionaire（App百万富翁）。</p>
<p>这批App百万富翁中，作者在书中介绍了其中几个佼佼者的故事，他们的作品分别是：《涂鸦跳跃》、《港口大亨》、《口袋上帝》、《火柴人战争》和《愤怒的小鸟》。其中《港口大亨》的开发者是一对夫妇，他们后来还开发了《神庙逃亡》系列。</p>
<p>他们的故事中，有几个共同点：</p>
<ol>
<li>
<p>他们一开始都不是奔着成为百万富翁去的。
这很关键，因为绝大多数的开发者是默默无闻的。除了创意和努力之外，运气非常关键。</p>
</li>
<li>
<p>成功并非一鸣惊人。
《愤怒的小鸟》这家公司，在做出《愤怒的小鸟》之前，据说失败了52次，曾濒于破产。即使是在发布《愤怒的小鸟》后，在美国和英国的反响也非常平淡。但是，他们继续努力，并尝试别的策略，终于在获得了苹果推荐后，一飞冲天。</p>
</li>
</ol>
<p>《涂鸦跳跃》的开发者，在推出《涂鸦跳跃》之前，开发的游戏都是简简单单的，表现也都中规中矩。持续的改进和苹果推荐，是爆发的关键。</p>
<ol start="3">
<li>
<p>追随自己的兴趣，而不是市场的风向。
《涂鸦跳跃》最终的涂鸦的画风，是偶然因素促成的，却证明别样的温馨。其他的明星开发者的作品，也都是追随自己的创意，而不是研究市场而来。</p>
</li>
<li>
<p>利用了iPhone最新的技术特性。
不管是《愤怒的小鸟》、《涂鸦跳跃》还是《港口大亨》，都利用了苹果设备上最新的技术，比如重力感应，划屏轨迹等。最重要的是，他们实现的都不错。我越来越感觉到，要做到“跟宣传的一样”非常不容易，尽管这应该是最低的要求。</p>
</li>
<li>
<p>他们本身都是程序员。
制作一款游戏，需要投入大量的时间。除此之外，根据你的定位，你可能需要投入招募程序员、美术设计或者别的工种的费用。做一个程序员，可以极大地降低成本。而前期的低投入，可以降低开发压力。</p>
</li>
<li>
<p>“功不唐捐”——你过去的人生经验和技能，最终会有它的位置。
就像胡适所说的，就像乔布斯所说的，你过去的每一项经历都有它独特的作用，你的阅历会为你的作品注入不一样的东西。</p>
</li>
<li>
<p>他们的作品都是付费应用且大多都被苹果推荐。
本书没有着重讨论应用内购的情形。考虑到去年的《Flappy Bird》，免费应用制造百万富翁，也不是不可能。苹果推荐是产品爆发的关键，如果没有大额广告投入的话。</p>
</li>
<li>
<p>他们成为百万富翁之后都更忙了。
这点略感意外。他们说，登上排行榜首位之后，他们要继续去做后续的更新内容，甚至比之前更忙。以《口袋上帝》为例，该游戏保持连续18周每周进行版本更新。尤其是前期，开发者还不是全职在做这个应用，可想而知有多忙。而《港口大亨》的开发者夫妇则说，他们开始在任何时间任何地点工作，但因为他们是夫妻，跟家人一起工作，也许更是一件好事。</p>
</li>
<li>
<p>快速地更新。
早期苹果的排行榜机制对更新应用貌似有更高的支持度和权重分配，因此这些明星应用登顶之后，作者不会撒手不管，而是继续去推出新版本，包括应对各种节日的节日版本。</p>
</li>
<li>
<p>跟家人一起奋斗。
《涂鸦跳跃》的开发者是一对堂兄弟；《港口大亨》的开发者是一对夫妇。跟亲友一起工作，跟自己人一起工作，大家追求的目标比较一致。大家不会满足于够用就行，而是会为了达成目标去做到最好。此外，共甘共苦，还有比兄弟、夫妻更好的么？</p>
</li>
<li>
<p>他们都发迹于苹果商店早期。
早期的竞争相对较小。这里的竞争不仅仅是说独立开发者同行，更是指来分一杯羹的大公司，比如EA等。印象中，除了去年的《Flappy Bird》，再难看到独立开发者的作品登上顶峰。毕竟，大公司的大作品非常抢眼，3A级作品也几乎要免费，要想突围，就非得做出完全不同的路数才行。</p>
</li>
<li>
<p>他们的作品玩法都很简单。
这些开发者的明星作品都没有复杂的玩法和系统，也因此比较友好，让更多之前根本不玩游戏的人开始玩游戏。</p>
</li>
<li>
<p>即使不成为百万富翁，他们依然可以过得很好。
尽管媒体宣扬之下，好像应用开发是可以轻松赚钱，但是事实上失败者的比例超乎想象。即使是如此，《涂鸦跳跃》的作者说，即使没有《涂鸦跳跃》，他们其他的作品的销售收入，已经足够支持他们过一种体面的生活。我理解为，只要活儿好，就算成不了百万富翁， 以此为业不成问题。</p>
</li>
</ol>
<p>书中还介绍了应用商店产业兴起的历史，以及独立开发者面对的价格战问题、大公司收购问题、“专利蟑螂”问题等。全书读起来非常畅快，而且每一章节结束，还有总结概述，非常贴心，我一口气就在多看上读完了全书。</p>
<p>附录：书中列举的有趣的事实：</p>
<ol>
<li>付费应用定价为0.99美元时更容易收获差评。</li>
<li>最初的苹果手机是没有应用和应用商店，黑客先行者促成了苹果官方应用商店的创建。</li>
<li>苹果商店在圣诞节期间会锁榜，因此大厂的应用在此时会降价至0.99美元以冲击排行榜。（不知道现在是不是还有锁榜，是不是每个地区都有。）</li>
<li>Lodsys这样的专利流氓，对使用应用内购应用的开发者发起诉讼。原来，应用内购还是一项专利？！目前争端还在继续。</li>
<li>黑莓败在何处？就是应用。</li>
<li>根据书中提供的数字，IOS开发者每年平均收入为682美元。大多数人的投入将无法回本。</li>
</ol>]]></content>
		</item>
		
		<item>
			<title>生活的意义</title>
			<link>https://shenxiaobing.com/posts/2019/meaning-of-life/</link>
			<pubDate>Wed, 27 Aug 2014 18:51:39 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/meaning-of-life/</guid>
			<description>&lt;p&gt;从高三开始，我时常为这个问题感到苦闷。我自己不认同他们口中出现的各种“生命的意义”，而自己也找不到别的让自己信服的“意义”。高中时期，我说生命的意义是爱，为此还写了一篇蹩脚的作文。之后，我就再没有确定的答案。我一直追寻的，自己觉得应该是一个高大伟岸的东西，不会只是关于小小的自己，或者普通生活中的一个东西。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>从高三开始，我时常为这个问题感到苦闷。我自己不认同他们口中出现的各种“生命的意义”，而自己也找不到别的让自己信服的“意义”。高中时期，我说生命的意义是爱，为此还写了一篇蹩脚的作文。之后，我就再没有确定的答案。我一直追寻的，自己觉得应该是一个高大伟岸的东西，不会只是关于小小的自己，或者普通生活中的一个东西。</p>
<p>我一直找不到。</p>
<p>大学时，逻辑学老师说：“人活着的意义是什么”是个伪命题，正确地问题是“你活着为了什么？”这下不必为全人类思考这个问题了。老师接着说，“你活着是为了什么”这个问题，也可以根据实际情况拆分成更多更小的问题，比如，你读书是为了什么，你上课是为了什么？你的所做所为是为了什么？因为你在现实中的每个行为都有原因，所以把大问题直接变成了现实的小问题，一下子把整个问题化解了。</p>
<p>但是，我从心理上，无法接受把“活着”这个抽象的词语具象为各种具体的小事，这只是狡猾的诡辩。</p>
<p>今天，看了两篇关于这个话题的文章，又有了一些感悟。</p>
<p>首先，存在是先于意义的。没有什么意义是不言自明的，所以，不要被这些意义的宏大表象所迷惑，不要一上来就被它们绑架。</p>
<p>当一个人开心的时候，几乎不会去思考活着的意义。当一个苦闷的时候，才会去苦苦求索，寻求一个宏大的“意义”来排遣抑郁和渺小感。所以，可以说，对意义问题的追索，对一般人来说，是源于无力感和渺小感。哲学家的追索，我在这里不敢妄加评价。</p>
<p>那么无力感和渺小感的根源呢？是因为，一个人无法接受自己只是一个普通人，以及很可能永远是个普通人的事实。他会想，接受了就等于妥协。我不能妥协，不能还没开始就妥协。</p>
<p>普通人，我的定义是，于世界无足轻重的人。能够影响世界的人，万中无一。你会因为自己不能成为万中无一的千万富豪而无法释怀么？我是不会的，我会觉得，千万身价，真心不错，但是如果没有，也没什么。</p>
<p>为什么就不能接受自己是个普通人呢？能成为影响世界的人，固然很好，可是如果成不了，那也就没啥。真正改变世界的人，不是一开始就一直闹着要改变世界的人。</p>
<p>事实上，大学毕业谢师宴上，院长就对我们说过，要我们试着去做一个普通人。我当时很受震动。也许潜意识里知道自己可能只是个普通人，但是这个社会使我无法安然地接受。而院长，一个权威，说出了我想听的话。之后，我还是逐渐淡忘了，依然在苦闷的时候眼巴巴地望向各种高大上的存在。</p>
<p>坦然地接受自己是一个普通人，且之后多半也只能做一个普通人这种想法之后，也许就可以不带任何成见地看待生活中的各种乐事。你不再因为花很多时间玩一个喜欢的游戏而愧疚，不会因为自己的爱好和志向很小就觉得不妥，你就可以坦然地享受一个普通人的生活中的点滴美好，而不是视而不见。</p>
<p>当你开始注意生活中的点滴美好，而不被宏大的意义绑架时，你就找回了自己。</p>
<p>推荐阅读：<a href="http://www.zhihu.com/question/24561532">若一辈子没有赚大钱，当大官，和自己爱的人在一起（哪怕一次），活着能算有意义吗？</a></p>]]></content>
		</item>
		
		<item>
			<title>「Quora」程序员知道，大多数人不知道的事</title>
			<link>https://shenxiaobing.com/posts/2019/what-non-porgrammers-do-not-know/</link>
			<pubDate>Mon, 25 Aug 2014 18:36:08 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/what-non-porgrammers-do-not-know/</guid>
			<description>&lt;p&gt;整理来自Quora的标题问题的回复，都是支持过千的哦。让你更加了解程序员的世界。&lt;/p&gt;
&lt;p&gt;根在树的顶端。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;试着讲给一个普通人：
“如果分配给孩子的任务不再需要的时候，父母应该杀死他的孩子。&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;”编程“是思考，而不是打字。编程的大部分时间都在睡觉，散步，盯着窗或者做帮助你放松和思考的任何其他事情。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>整理来自Quora的标题问题的回复，都是支持过千的哦。让你更加了解程序员的世界。</p>
<p>根在树的顶端。<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>试着讲给一个普通人：
“如果分配给孩子的任务不再需要的时候，父母应该杀死他的孩子。<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<p>”编程“是思考，而不是打字。编程的大部分时间都在睡觉，散步，盯着窗或者做帮助你放松和思考的任何其他事情。</p>
<p>电影中的大多数黑客场面完全是扯犊子。</p>
<p>花在写应用上的大约25%的时间是在想终端用户会有哪些出错的方式。</p>
<p>看起来简单的BUG有时几乎无法修复。</p>
<p>保有最珍贵内容的建筑物不是银行或珠宝店，而是数据中心。</p>
<p>当你的浏览器窗口卡死5秒钟，是因为某地的某人写出了糟糕了JS代码。</p>
<p>负责的人是对他的公司业务了解最少的人。</p>
<p>编程最好是在全神贯注的状态中完成，期间你在任务上的注意力是完全的，一切看来都简单了。这跟音乐家和运动员的的专注很像。</p>
<p>编程的分级很糟。一个孤独的程序员极为高产，如果你把他跟由10个程序员组成的小队相比。10个程序员看起来依然很高产，如果你把他们跟百人团队相比。这就是为什么大公司建立的软件系统会那么贵，为什么那么多孤独的天才创建了非常棒的软件。</p>
<p>从0开始数数，而不是1。</p>
<p>在底层，大多数你每天在用的重要软件（比如Mac OS X 或Facebook）含有惊人数量的破解和后门，在一个运行的整体中，勉强凑在一起。就好像把一架崭新的747飞机拆解后，发现燃油管线是用衣架挂起来的，而起落架是用胶带粘上的一样。</p>
<p>Windows桌面上的”刷新“按钮不是一个可以让你的电脑保持健康的魔法工具。
桌面刷新究竟做什么？刷新桌面只是重新抓取了桌面上的图标。就这样！他没有刷新运行内存。他没有清理你的电脑。</p>
<p>来自电影的疯狂刻板印象：</p>
<ul>
<li>你不能把照片放大到超过他们实际的分辨率。</li>
<li>我们真的知道怎么用人类的、非技术语言讲话，我们的工作就靠它了。</li>
<li>我们不全都是胖子。</li>
<li>我们不全都是又肥又懒的天才。</li>
<li>程序员不是电工，大部分连焊铁都没有。</li>
<li>电脑在展示数据时，不会发出高音的滴滴声。</li>
<li>如果电脑真的发出了，那应该是首选项被某个程序员停用了。</li>
<li>我完全不知道怎么去破解，我的同事也不知道。</li>
</ul>
<p>你公司的开发者：</p>
<ul>
<li>不要告诉我们你认为的解决方案，给我们问题的症状或者要求的条件。这样会解决得更快更好。</li>
<li>不要尝试靠谈论科幻来获得好感。不是吧？一点都不酷！</li>
<li>在我查看之前，我真的不知道会用多久时间，这不是一个懒惰的拖延战术。</li>
<li>如果在通过用户验收测试后出现了不想要的结果，这是你的错！</li>
<li>我看到你删除了记录。那里有操作记录。快别责怪我的代码了，爷们点！</li>
<li>非技术管理层永远不应该挑选平台。永远不要。每次，他喵的每次他们都会被穿着犀利西服带着大大笑容的人用闪亮的承诺推销一堆垃圾。他们然后做出了执行决定，接着100万美元就这样没了，还有我所在公司的仅剩的幸福。</li>
<li>代码冻结意味着：BUG还在，就这么着。</li>
<li>敏捷开发意味着：如果你不参加站立会议，你的工作就不会完成。你的错。</li>
<li>我们不是一定要做恶人。</li>
<li>我们比你们的市场部更有创造力。</li>
</ul>
<p>现实中的开发者：</p>
<ul>
<li>是得，我可以开发网站。但是，不，我不会为了你那一点小钱去做的。所以不要来问我，因为拒绝可能会伤人。</li>
<li>我不知道究竟为啥你家里的电脑很慢，坏了，不打印或者无法上网。可能是任何一个可能的原因。我不在乎你的那些”用电脑工作“的女儿兄弟阿姨或久远的朋友。</li>
<li>当你问我问题时，不要因为我说了”数据库“就显得茫然。</li>
</ul>
<p>开源，并不是说任何人都可以编辑源代码。</p>
<p>我们知道逻辑一词的真正含义。</p>
<p>有需要正在使用的编程语言，还有几百种不用的语言。</p>
<p>创建一个网站或者程序是艰苦的工作。</p>
<p>编程的整个辐射区域每4年变化一次。</p>
<p>执行像“浏览网络”一样的简单任务，在底层有有很多不同的层。好的程序员真的理解所有不同的层。（话说那些层居然可以正常工作真是奇迹。）</p>
<p>大多数程序员的日常工作跟你获得CS学士学位时学到的东西关系不大。</p>
<p>你是程序员，并不意味着你知道他们的微软Word程序刚才为啥崩溃。</p>
<p>某些任务在理论上可以被电脑完成，但实际操作时要花费比宇宙历史还要长的时间。</p>
<p>数字内容不能被移动，只能被复制。</p>
<p>如果不事先复制到你的电脑上，你无法观看或者收听网络上任何东西。</p>
<p>如果有人可以亲自操作你的电脑，密码没有办法保护你的电脑，只有加密可以。</p>
<p>当你清空垃圾箱的时候，文件并没有被删除。</p>
<p>当你格式化硬盘的时候，文件并没有被删除。</p>
<p>墨菲是对的。<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<p>你的台式机可以免费运行高级程序，像Unix，虚拟机和SQL服务器。这些之前都是花费10万美元仅供大公司用的。</p>
<p>云端就是指其他人的电脑。</p>
<p>Office文档其实是Zip压缩文件。</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>根和数都是程序中术语。 <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p>Parent和Child指代程序中的从属关系，如子程序等。 <a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3" role="doc-endnote">
<p>墨菲定律，简单来说就是：如果一件事可能会发生，那么它一定会发生。 <a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>]]></content>
		</item>
		
		<item>
			<title>观《后会无期》</title>
			<link>https://shenxiaobing.com/posts/2019/watch-hou-hui-wu-qi/</link>
			<pubDate>Thu, 24 Jul 2014 18:33:58 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/watch-hou-hui-wu-qi/</guid>
			<description>&lt;p&gt;“我们穿越了中国。”&lt;/p&gt;
&lt;p&gt;“可是有什么意义呢？”&lt;/p&gt;
&lt;p&gt;两个人都沉默了。&lt;/p&gt;
&lt;p&gt;我看着银幕中的他们，心里问自己，也回答不上来。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>“我们穿越了中国。”</p>
<p>“可是有什么意义呢？”</p>
<p>两个人都沉默了。</p>
<p>我看着银幕中的他们，心里问自己，也回答不上来。</p>
<p>没有人知道要到哪里去。于是，有人建议说，既然大家都不知道去哪里，那就随着你的心意，想去哪里就去哪里咯。有一些人开始行动了。剩下的一些人，哪条路对他们来讲都是一样的，什么心意不心意的。于是，他们看见别人走了，就跟随着别人去了。走着走着，他们开始犹豫，自己走的对不对呢？要回头，还是要一路走下去？这么走着，是为了什么？</p>
<p>还是没有人答得上来。这些会问自己这种问题的人，痛苦又害怕。其他的人告诉他们，这条路没有意义，你怎么走才有意义；又有人说，这是个假问题，真正的问题，你的每一步有什么意义；还有一些人有一些别的看法。</p>
<p>我去看那些看起来不会为这个问题所困的人。他们很忙碌地在追求着什么，理想，事业，家庭，声名，享乐。等你有追求的时候，你就不会想这种问题了。</p>
<p>我有结论了，没有人能解答这个问题。其他人只是绕过了这个问题，或者，对他们来说，他们为这个问题做了新的解释。那么你呢？</p>
<p>真得很讨厌这种感觉，这种做了什么都无足轻重的感觉。我环游了中国，so what？我升职了，哦，呵呵。我的方案出成效了，哦，不错啊。</p>
<p>是啊，那又怎么样呢？</p>
<p>继续叹息，直到不再提及这个问题。（抱歉，这次没有正能量。）</p>]]></content>
		</item>
		
		<item>
			<title>读《书都不会读，你还想成功》</title>
			<link>https://shenxiaobing.com/posts/2019/reading-notes-on-how-to-read-books/</link>
			<pubDate>Tue, 22 Jul 2014 18:29:38 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/reading-notes-on-how-to-read-books/</guid>
			<description>&lt;p&gt;全书可分为三个部分：故事，教程和推荐书目。教程是书的理念；故事则是对书的理念的一种诠释，同时增加了读者的代入感；推荐书目是现代名人的推荐书目，没什么特别的，网上都可以搜到的。故事，教程和书目的篇幅占比大约是8：1：1。&lt;/p&gt;
&lt;p&gt;故事的主人公是一个混得一般的职员，家庭压力大，刚与女友分手，工作业绩差。然后，被朋友引荐给了像作者一样的读书导师，开始了不寻常的“读书改变命运”的旅程。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>全书可分为三个部分：故事，教程和推荐书目。教程是书的理念；故事则是对书的理念的一种诠释，同时增加了读者的代入感；推荐书目是现代名人的推荐书目，没什么特别的，网上都可以搜到的。故事，教程和书目的篇幅占比大约是8：1：1。</p>
<p>故事的主人公是一个混得一般的职员，家庭压力大，刚与女友分手，工作业绩差。然后，被朋友引荐给了像作者一样的读书导师，开始了不寻常的“读书改变命运”的旅程。</p>
<p>简单来说，这本书是教你如何读书改变命运，而不是作为爱好和休闲。书中的教程总结起来就是：</p>
<ul>
<li>养成读书的习惯：100天读书行动——读完33本书。</li>
<li>加强专业素养：一年读完100本工作相关的专业书。</li>
<li>改变思维方式：一年365本书，100本成功CEO相关，100本自我启迪，165本培养领导才能相关。（听起来是不是像主动洗脑？但是某些脑子是不是应该洗一下呢？）</li>
</ul>
<p>故事的主人公顺利地做完了前两步，并最终在全书结束时被提升为了策划部总监。感谢作者的激励。主人公在做的过程中提出了你我可能会问的问题，经历并克服了你我会经历的难题：包括对如此高强度读书计划的可行性质疑，如何挤出时间读书，如何克服读书的倦怠情绪等。下面是具体做法：</p>
<h2 id="如何养成读书的习惯">如何养成读书的习惯？</h2>
<p>首先，必须把读书的重要性在认知层面提升，这样你就会给读书更多地时间和权重。</p>
<p>其次，每天保证3个小时的读书时间，起床后上班前，下班后，通勤时间等等。因为是习惯，就绝不是一天两天做到就行的，而是每天都要做到。至于如何抓住细小的时间利用起来，网上的回答都提到了一条，那就是书不离手。现在有智能机，不必真的随身携带纸质书了。另外，提高本职工作的工作效率也是很重要的，如果你每天被工作拖到加班，要保证读书时间就更难了。</p>
<p>囿于阅读速度，初期你可以选择任意书籍，前提就是你喜欢读。如果读书变成一种享受，则更容易成为习惯。</p>
<h2 id="如何克服倦怠情绪">如何克服倦怠情绪？</h2>
<ul>
<li>借鉴读书牛人的意见，保持与“读书无用论”者的距离。</li>
<li>帮助那些刚刚开始读书的人，与书友一起沟通。</li>
<li>心灵鸡汤，励志鸡血，到头来还是有点用的。</li>
<li>在家里贴上正能量的语句，激励自己，至少有心理暗示的作用。</li>
<li>借助榜样的力量：这时榜样会怎么做？</li>
<li>给自己喜欢的作者发邮件，他们回复与否并不重要，通过更深的思考你对事物的看法会更客观，就不会被一时的倦态烦躁困住了。</li>
</ul>
<h2 id="如何快速阅读一本书">如何快速阅读一本书？</h2>
<p>主动阅读，提高阅读效果。</p>
<p>明确阅读目标，以此确定精读还是通读。</p>
<p>掌握阅读技巧。</p>
<p>书中还讲了如何做笔记，不过是参考了另一本书《如何阅读一本书》。</p>
<p>总的来说，书中讲了一个不很枯燥的读书故事，并通过故事传达了读书改变命运的理念以及具体如何去做的一般方法。对读书有困惑的或者对迫切要改变自己的可以尝试看一下。</p>]]></content>
		</item>
		
		<item>
			<title>就当我们今天才毕业吧</title>
			<link>https://shenxiaobing.com/posts/2019/let-today-be-our-new-graduation/</link>
			<pubDate>Sat, 12 Jul 2014 17:56:04 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/let-today-be-our-new-graduation/</guid>
			<description>&lt;p&gt;就当我们今天才毕业吧，剪一个最潮的发型，而不是像之前一样每次都对理发师说请随意。&lt;/p&gt;
&lt;p&gt;就当我们今天才毕业吧，与同学和朋友们保持联系，而不是像之前一样一年都不联系一次。&lt;/p&gt;
&lt;p&gt;就当我们今天才毕业吧，对最简单的工作也会充满兴趣，而不是像之前一样越来越厌倦。&lt;/p&gt;
&lt;p&gt;就当我们今天才毕业吧，提高自己和充实自己，而不是像之前一样总是在心里抱怨工作。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>就当我们今天才毕业吧，剪一个最潮的发型，而不是像之前一样每次都对理发师说请随意。</p>
<p>就当我们今天才毕业吧，与同学和朋友们保持联系，而不是像之前一样一年都不联系一次。</p>
<p>就当我们今天才毕业吧，对最简单的工作也会充满兴趣，而不是像之前一样越来越厌倦。</p>
<p>就当我们今天才毕业吧，提高自己和充实自己，而不是像之前一样总是在心里抱怨工作。</p>
<p>就当我们今天才毕业吧，享受年轻的爱情，而不是像之前一样为没有物质保障的婚姻恐慌。</p>
<p>就当我们今天才毕业吧，去旅行，去认识陌生人，去发现这个世界，而不是像之前一样两点一线地重复昨天。</p>
<p>就当我们今天才毕业吧，做自己最喜欢的事情，而不是像之前一样仅仅在心里想想。</p>
<p>就当我们今天才毕业吧，我们的关键词是自我实现，而不是像之前一样：房子，房子和房子。</p>
<p>就当我们今天才毕业吧，相信世界是我们的，而不是像之前一样总是感觉世界与我无关。</p>
<p>就当我们今天才毕业吧，活出自己，而不是像之前一样在意他人对自己的看法。</p>
<p>就当我们今天才毕业吧，保持年轻的心态，而不是像之前一样因为他们的年轻朝气而恐慌。</p>
<p>就当我们今天才毕业吧，为自己拥有的知足感恩，而不是像之前一样因为攀比而焦虑。</p>
<p>就当我们今天才毕业吧，可以随时笑出来，而不是像之前一样，生活在恐惧和焦虑之中。</p>
<p>就当我们今天才毕业吧，加入年轻人寻找和追逐梦想的行列，而不是像之前一样看他们表演。</p>
<p>就当我们今天才毕业吧，期待和创造未来的四十年，而不是像之前一样惆怅过去的二十八年。</p>
<p>就当我们今天才毕业吧，你的人生不会就这样完了，一切才刚刚开始，就像那些今天毕业的人一样。</p>]]></content>
		</item>
		
		<item>
			<title>「Quora」如何培养孩子成为亿万富翁？</title>
			<link>https://shenxiaobing.com/posts/2019/how-to-raise-kids-to-be-billionaire/</link>
			<pubDate>Tue, 24 Jun 2014 18:21:23 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/how-to-raise-kids-to-be-billionaire/</guid>
			<description>&lt;p&gt;这个是Quora上的一个问题，有人对此进行了详细的回答，并获得5000多票的支持。不管你有没有大胆地想过这个问题，不妨看一看世界上另外地一小部分人地看法。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>这个是Quora上的一个问题，有人对此进行了详细的回答，并获得5000多票的支持。不管你有没有大胆地想过这个问题，不妨看一看世界上另外地一小部分人地看法。</p>
<p>以下是回答正文：</p>
<p>一个风险投资家曾告诉我，我的关于亿万美元的合理概念，比他认识的其他任何人都多。我有白手起家成为亿万富翁的朋友。所以，我觉得我有资格去给你一个直接的回答。我的回答会假设你想让你的孩子拥有依靠自己努力实现所需的实际知识，创造力和价值系统。另外，我自己的三个孩子就是这样抚养的。</p>
<h2 id="使他们全面了解生活的各种选择">使他们全面了解生活的各种选择</h2>
<p>我告诉我的儿子们，在澳大利亚西北部有一处僻静的海滩。那里气候宜人，你可以浪花中一次抓起两只龙虾。建造一座玻璃棚屋。找一个好女人。你就定下来了。另一边，那个人怎么把他对制作乐器的爱发展成为一个1亿美元的生意？把其中所需步骤中的神秘感统统拿掉。这个世界充满了机会，让你去过你想要的任何生活。但是你必须简单，简单再简单明白地去给他们讲解，使他们能够了解什么东西让生意运转。</p>
<h2 id="不要送他们去公立学校或预备学校">不要送他们去公立学校或预备学校</h2>
<p>如果你想要普通的头脑，那就给他们普通的教育。我们最大的孩子在12岁时就开始专业地工作。他跳过了高中直接去工作。他在旧金山Media Gulch的一家企业品牌公司工作。跟一个巡回电影制作人一起，他每年至少做一个项目。他在玛雅旅行了数月，帮助一个女人写书，与玛雅家庭一起住，用西班牙语采访儿童们对不同动植物的认识还有他们的Quiche名字。他在 Luzern呆了两个冬天指挥一个潜水船在湖里绘制沉船地图。他在古巴拍摄了一部纪录片。（这不是一个有钱老爸为他的儿子购买机会——这是他自己挣得的机会。）</p>
<h2 id="教他们热爱工作">教他们热爱工作</h2>
<p>你富有之后可以轻松一些，但是变富却需要下功夫。他们需要擅长体力工作并且有耐力。他们尤其需要擅长脑力工作，同时具备变通和强硬的特点。</p>
<h2 id="教他们人们的爱">教他们人们的爱</h2>
<p>变得富有的唯一方法就是服务于其他人的真正需求。你必须对其他人有亲和力。我的家庭因为所有结队前来的人们而出名。我在机场遇到的滞留的人。来自日本的寄宿女孩。互惠生。来洗澡和吃饭的本地流浪汉。中国物理学家和厄立特里亚游击队员跟我们吃过饭。儿子的朋友们在任何时候都可以造访且无需提前安排。确保孩子们理解，他们没有高于或者低于，任何人。</p>
<h2 id="教他们慷慨">教他们慷慨</h2>
<p>获得很多的人必须给予很多。我的二儿子（那时大约11岁）和我从我的办公室出来，步行穿过Embarcadero去看旧金山海湾。那里有一个人，一个快40岁的男人，穿着一条牛仔裤，裤子上的缝都开了。他在耍勺子，耍的很好。我们开始聊天。那天早上，他刚从San Quentin监狱放出来。我跟他说是时候庆祝一下。我们带他去我的办公室洗了个澡，出去买了衣服，吃了晚餐然后给了他住一晚的钱。在回去的路上，我对我的儿子指出，相对于我们陪他而付出的时间，我们给他的钱根本不算什么。唯一的真正财富就是你拥有的时间。任何时候你有机会把自己最好的时间留给别人，去做并且做好。给钱却不给时间，可以成为一种制造距离的方式。</p>
<h2 id="教他们知道心灵的错综复杂">教他们知道心灵的错综复杂</h2>
<p>这里说下阴影部分。理智的人不会成为企业家。就像一个战斗长官，经常要依靠有限的信息做出关键的决定。在看不到是否有支持的情况下，他不得不采取行动。他必须一次又一次品尝失败的滋味并且从中受到鼓舞。他必须要用理智来武装自己，然后在怀疑、打击、负面意见中继续前进。每个成功的新公司都会触犯其他人的利益，那些人会用下流的方式去对付你。你每天面对的人，都指望着你发工资。小儿科肿瘤学家必须要意志坚强才能承受别人的痛苦；企业家则必须成为超人才能应对可能是他们一手创造出来的种种悲剧。吊诡的是，如果你没有亲身经历过，你无法去教会别人理解这种心灵上的复杂。如果你没有经历过，那就去向经历过的人请教。</p>
<h2 id="撒谎欺骗和盗窃">撒谎，欺骗和盗窃</h2>
<p>在我母亲的葬礼上，当一个兄弟肯定地宣称他曾以为每个人都像母亲一样棒，因而有段难熬地时光。我很震惊。这个世界满是混蛋和骗子，你的孩子会需要一个雷达去感应。他们需要去承受后果，这样才会拥有应对的技巧。你不能指望把坏的行为与好的行为隔离，就可以教会孩子好的行为。这里我没有满意的例子。这么说吧，我们家愚人节很重大，而且一年不止一次。</p>
<h2 id="使他们在少年时成为异类">使他们在少年时成为异类</h2>
<p>与企业家的成功高度相关的是未被满足的少年时代。一般来说，那些18岁前与他人相处融洽的人，会一直安于现状。这是另一个不让他们上高中的理由。另一个高度相关性是成绩单上的F评价。企业家们是高度结果导向型，对过程导向型的老师们少有耐心。风投家们对我说，如果他们没有在一个未来CEO的大学成绩单上看到一两个F评价，他们会有点失望。我理解，我是得过F的。</p>
<h2 id="教会他们处理数字">教会他们处理数字</h2>
<p>任何一个不能在头脑里快速算数的人，在成为企业家和处理问题会很艰难。学校不教这个。这项特别的能力，是需要长期努力的。</p>
<h2 id="不给零用钱不做低报酬工作">不给零用钱，不做低报酬工作</h2>
<p>没有人在为生计工作时能够发财。用你的时间兑换金钱是一个失败者的策略。零用钱只会使孩子缺少智谋，青少年的工作也是如此。我的妻子和我会扮演我们孩子的风险投资者。他们可以要他们想要的任意数量的钱。但是，计划是什么？你的目的是什么？还有其他办法吗？等等。他们学着去认清机会并抓住。【增补：如果你要帮他们找低收入的零工，找个销售工作吧。没有说服别人的能力，他们不会走的很远。这是另一个学校里学不到的东西。】</p>
<h2 id="弄到创业资金">弄到创业资金</h2>
<p>幸运的是，我的孩子们跟一对移民夫妇的孩子一起上学。那对夫妇把孩子留在亲戚那里连续两个夏天，自己却跑去住在卡拉斯加的帐篷做罐头三文鱼。每个夏天他们每人都挣回一叠现金。两年后，他们已经有了创业资金，可以去创业了。他们找到有着绝妙点子的科学家（是一个每个阅读这篇文字的人每天都会被震撼多次的点子），成立了公司，获得了投资，然后他们成为了亿万富翁。没有创业资金，就没有亿万富翁。没有资本或将全部资本赌上的意愿，你是不会成为资本家的。</p>
<h2 id="值得">值得</h2>
<p>最后，最重要的事情是他们必须是值得的。投资是不会给那些缺乏明显的优秀人格的人的。我发现最好的调整孩子们道德观的方法就是完全交给他们自己。每次需要做出一个道德上的决定的时候，我就会说：搜寻你的内心，孩子。你必须把你的生活建筑在对你重要的事情上。我能帮到你的，只能是告诉你，有的时候我搞砸了。但是，你要尽早与自己内心接触，明白什么是对，什么是错。越早越好。（要保证在他们面前，在对错选择之间，做个好榜样。）</p>
<p>变得富有只有一条路：<strong>利用机会</strong>。我上面说的全部目的就是让你的孩子能够发现和利用机会为世界增加价值。</p>
<p>你怎么知道你现在做的是不是对的？你遇到的绝大多数的人是迟钝的。1/12到1/10到人有标量能量，他们能搞活气氛。大约1/1000的人有向量能量，一种将其他置于身后，为目标集中努力的能力。一个人开始成为向量力量的唯一途径就是找到和拥抱他的/她的热情所在。这听来有点奇怪。举个例子，我最小的儿子经常因为不会讲故事成为家庭笑话的话柄。他的热情所在何处？结果是因为他的脑袋里塞满了每个故事的细节。一旦他学会讲述，他的故事是最棒的。</p>
<p>热情地追逐目标的天赋，你应该开始有点领悟。但是直到成年，这项天赋才会成熟。它是如此地稀有。学校根本没有能力去教会它。即使最好的 MBA项目也是教你如何为那个人工作而不是成为那个人。所以，如果你可以做到，你丰富得并不仅仅是你得孩子，还有这个世界。</p>
<p>原文来自 Quora.com，<a href="http://www.quora.com/What-are-good-ways-to-prepare-my-kids-to-be-billionaires">原文地址</a>。</p>
<p>本人的翻译能力有限，多多海涵。感谢Bing词典，百度搜索。感谢你的阅读。</p>]]></content>
		</item>
		
		<item>
			<title>我的独立博客正式上线了！</title>
			<link>https://shenxiaobing.com/posts/2019/first-blog/</link>
			<pubDate>Fri, 20 Jun 2014 18:12:04 +0800</pubDate>
			
			<guid>https://shenxiaobing.com/posts/2019/first-blog/</guid>
			<description>&lt;p&gt;前天晚上注册域名，今天晚上购买了香港的共享主机空间，现在，第一篇原创的博客即将诞生！&lt;/p&gt;
&lt;p&gt;从大二时开始，我维护并放弃了至少5个博客，包括博客中国，天涯，新浪和网易博客。这里面写的久的也就半年20多篇文章。我是想说，我过去做的不好，没能坚持。而这次是一次新的开始。&lt;/p&gt;
&lt;p&gt;为什么又要建一个自己的博客呢，而且还是花钱建的？&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>前天晚上注册域名，今天晚上购买了香港的共享主机空间，现在，第一篇原创的博客即将诞生！</p>
<p>从大二时开始，我维护并放弃了至少5个博客，包括博客中国，天涯，新浪和网易博客。这里面写的久的也就半年20多篇文章。我是想说，我过去做的不好，没能坚持。而这次是一次新的开始。</p>
<p>为什么又要建一个自己的博客呢，而且还是花钱建的？</p>
<p>其实，这个问题很多人回答过，答案有：建设自己的品牌，留下自己的生命印迹，用书写协助思考等。我都是赞同的。此外，还有努力将这个作为业余爱好的一部分，不至于工作之外的时间就只有背负着空虚与搞笑视频和游戏为伴。仅仅这一条对我就足够了。花钱建的博客因为有自己的域名所以更上档次，同时也更为自由。</p>
<p>我看到别人说，不要怕写不好，写的再烂也有人看；不要怕写不出，写不出可以先做搬运工，慢慢地就有自己可以分享的东西了。所以，我会在没有灵感的时候，去翻译英文的文章。平时多读书，多思考，多记录，相信自己原创的内容会越来越多。</p>
<p>之前的博客经历和其他blogger的经历都告诉我，坚持是最大的难题。因此，简单的事情重复做，是我要奉行的信条。如果你看到了这篇博文，记得过段时间回来看看。</p>
<p>“一事有恒，则万事皆可渐振。”我私心希望这个博客有一天让我自豪。</p>]]></content>
		</item>
		
	</channel>
</rss>
